<?xml version="1.0" encoding="utf-8"?>
<search> 
  
  
    
    <entry>
      <title>Python基础练习题</title>
      <link href="/2023/11/05/00027/"/>
      <url>/2023/11/05/00027/</url>
      
        <content type="html"><![CDATA[<p>本文整理了Python入门的一些小练习题目和相应的题解，包括图像绘制、利用爬虫爬取网页数据等等。</p><h3 id="1-根据半径r计算圆的面积"><a href="#1-根据半径r计算圆的面积" class="headerlink" title="1.根据半径r计算圆的面积"></a>1.根据半径r计算圆的面积</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 计算圆的面积</span></span><br><span class="line">r = <span class="built_in">float</span>(<span class="built_in">input</span>())</span><br><span class="line">area = <span class="number">3.1415926</span>*r*r</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;&#123;:.2f&#125;&#x27;</span>.<span class="built_in">format</span>(area))</span><br></pre></td></tr></table></figure><h3 id="2-绘制多个同切圆"><a href="#2-绘制多个同切圆" class="headerlink" title="2.绘制多个同切圆"></a>2.绘制多个同切圆</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 绘制多个同切圆</span></span><br><span class="line"><span class="keyword">import</span> turtle  <span class="comment"># 导入turtle模块</span></span><br><span class="line">turtle.pensize(<span class="number">2</span>)  <span class="comment"># 设置笔刷宽度</span></span><br><span class="line">turtle.circle(<span class="number">10</span>)  <span class="comment"># 绘制半径为10的圆</span></span><br><span class="line">turtle.circle(<span class="number">30</span>)</span><br><span class="line">turtle.circle(<span class="number">50</span>)</span><br><span class="line">turtle.circle(<span class="number">100</span>)</span><br><span class="line">turtle.done()  <span class="comment"># 保持绘图界面</span></span><br></pre></td></tr></table></figure><h3 id="3-绘制一个五角星"><a href="#3-绘制一个五角星" class="headerlink" title="3.绘制一个五角星"></a>3.绘制一个五角星</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line">color(<span class="string">&#x27;red&#x27;</span>, <span class="string">&#x27;yellow&#x27;</span>)</span><br><span class="line">begin_fill()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">5</span>):</span><br><span class="line">    fd(<span class="number">200</span>)</span><br><span class="line">    rt(<span class="number">144</span>)</span><br><span class="line">end_fill()</span><br><span class="line">done()</span><br></pre></td></tr></table></figure><h3 id="4-摄氏温度与华氏温度相互转换"><a href="#4-摄氏温度与华氏温度相互转换" class="headerlink" title="4.摄氏温度与华氏温度相互转换"></a>4.摄氏温度与华氏温度相互转换</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># is_number函数可以判断一个字符串是否能被转换为一个数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">is_number</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">float</span>(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> ValueError:</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="keyword">import</span> unicodedata</span><br><span class="line">        unicodedata.numeric(s)</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line">    <span class="keyword">except</span> (TypeError, ValueError):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line">    <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">TempStr = <span class="built_in">input</span>(<span class="string">&#x27;请输入带有符号的温度值:&#x27;</span>)</span><br><span class="line"><span class="keyword">if</span> TempStr[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;f&#x27;</span>] <span class="keyword">and</span> is_number(TempStr[<span class="number">0</span>:-<span class="number">1</span>]):</span><br><span class="line">    C = (<span class="built_in">eval</span>(TempStr[<span class="number">0</span>:-<span class="number">1</span>])-<span class="number">32</span>)/<span class="number">1.8</span>  <span class="comment"># eval() 函数用来执行一个字符串表达式,并返回表达式的值</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;转换后的温度是&#123;:.2f&#125;C&#x27;</span>.<span class="built_in">format</span>(C))</span><br><span class="line"><span class="keyword">elif</span> TempStr[-<span class="number">1</span>] <span class="keyword">in</span> [<span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;c&#x27;</span>] <span class="keyword">and</span> is_number(TempStr[<span class="number">0</span>:-<span class="number">1</span>]):</span><br><span class="line">    F = <span class="number">1.8</span>*<span class="built_in">eval</span>(TempStr[<span class="number">0</span>:-<span class="number">1</span>])+<span class="number">32</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;转换后的温度是&#123;:.2f&#125;F&#x27;</span>.<span class="built_in">format</span>(F))</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;输入格式错误&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="5-获得用户输入的一个正整数输入，输出该数字对应的中文字符表示"><a href="#5-获得用户输入的一个正整数输入，输出该数字对应的中文字符表示" class="headerlink" title="5.获得用户输入的一个正整数输入，输出该数字对应的中文字符表示"></a>5.获得用户输入的一个正整数输入，输出该数字对应的中文字符表示</h3><ul><li>参考题解1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>()</span><br><span class="line">array = [<span class="string">&#x27;零&#x27;</span>, <span class="string">&#x27;一&#x27;</span>, <span class="string">&#x27;二&#x27;</span>, <span class="string">&#x27;三&#x27;</span>, <span class="string">&#x27;四&#x27;</span>, <span class="string">&#x27;五&#x27;</span>, <span class="string">&#x27;六&#x27;</span>, <span class="string">&#x27;七&#x27;</span>, <span class="string">&#x27;八&#x27;</span>, <span class="string">&#x27;九&#x27;</span>, <span class="string">&#x27;十&#x27;</span>]</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(array[<span class="built_in">int</span>(i)], end=<span class="string">&#x27;&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>参考题解2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">template = <span class="string">&quot;零一二三四五六七八九&quot;</span></span><br><span class="line">s = <span class="built_in">input</span>()</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(template[<span class="built_in">eval</span>(c)], end=<span class="string">&quot;&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="6-输入正整数n，计算1-2-3-…-n"><a href="#6-输入正整数n，计算1-2-3-…-n" class="headerlink" title="6.输入正整数n，计算1+2+3+…+n"></a>6.输入正整数n，计算1+2+3+…+n</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ans = <span class="number">0</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">    ans += i</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h3 id="7-输入正整数n，计算n的阶乘"><a href="#7-输入正整数n，计算n的阶乘" class="headerlink" title="7.输入正整数n，计算n的阶乘"></a>7.输入正整数n，计算n的阶乘</h3><ul><li>普通循环形式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ans = <span class="number">1</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">    ans *= i</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><ul><li>自定义函数形式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        res *= i</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(fact(n))</span><br></pre></td></tr></table></figure><ul><li>递归形式</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span> <span class="keyword">or</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> n*fact(n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="built_in">print</span>(fact(n))</span><br></pre></td></tr></table></figure><h3 id="8-根据输入的参数值，以不同方式打印输出”Hello-World”"><a href="#8-根据输入的参数值，以不同方式打印输出”Hello-World”" class="headerlink" title="8.根据输入的参数值，以不同方式打印输出”Hello World”"></a>8.根据输入的参数值，以不同方式打印输出”Hello World”</h3><ol><li>如果输入值是0，直接输出”Hello World”‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬</li><li>如果输入值大于0，以两个字符一行方式输出”Hello World”（空格也是字符）‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬</li><li>如果输入值小于0，以垂直方式输出”Hello World”</li></ol><ul><li>参考题解1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="string">&#x27;Hello World&#x27;</span></span><br><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(s)</span><br><span class="line"><span class="keyword">elif</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    i = <span class="number">0</span></span><br><span class="line">    <span class="keyword">while</span>(i &lt; <span class="built_in">len</span>(<span class="built_in">list</span>(s))):</span><br><span class="line">        <span class="built_in">print</span>(s[i:i+<span class="number">2</span>:<span class="number">1</span>])</span><br><span class="line">        i += <span class="number">2</span></span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> s:</span><br><span class="line">        <span class="built_in">print</span>(i)</span><br></pre></td></tr></table></figure><ul><li>参考题解2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">eval</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Hello World&quot;</span>)</span><br><span class="line"><span class="keyword">elif</span> n &gt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;He\nll\no \nWo\nrl\nd&quot;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&quot;Hello World&quot;</span>:</span><br><span class="line">        <span class="built_in">print</span>(c)</span><br></pre></td></tr></table></figure><h3 id="9-运算数学表达式"><a href="#9-运算数学表达式" class="headerlink" title="9.运算数学表达式"></a>9.运算数学表达式</h3><p>获得用户输入的一个字符串，格式如下：‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬ M OP N‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬ 其中，M和N是任何数字，OP代表一种操作，表示为如下四种：+, -, *, &#x2F;（加减乘除）‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬,根据OP，输出M OP N的运算结果，统一保存小数点后2位。‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‭‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‫‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‫‬‪‬‪‬‪‬‪‬‪‬‪‬‮‬‪‬‮‬注意：M和OP、OP和N之间可以存在多个空格，不考虑输入错误情况。</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">s = <span class="built_in">input</span>()</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&quot;&#123;:.2f&#125;&quot;</span>.<span class="built_in">format</span>(<span class="built_in">eval</span>(s)))</span><br></pre></td></tr></table></figure><h3 id="10-随笔画"><a href="#10-随笔画" class="headerlink" title="10.随笔画"></a>10.随笔画</h3><h4 id="（1）画房子"><a href="#（1）画房子" class="headerlink" title="（1）画房子"></a>（1）画房子</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.pencolor(<span class="string">&#x27;purple&#x27;</span>)</span><br><span class="line">turtle.goto(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">150</span>, <span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">200</span>, <span class="number">0</span>)</span><br><span class="line">turtle.goto(-<span class="number">200</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.goto(<span class="number">0</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.goto(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">turtle.goto(-<span class="number">200</span>, <span class="number">0</span>)</span><br><span class="line">turtle.goto(<span class="number">100</span>, <span class="number">0</span>)</span><br><span class="line">turtle.goto(<span class="number">50</span>, <span class="number">100</span>)</span><br><span class="line">turtle.goto(<span class="number">100</span>, <span class="number">0</span>)</span><br><span class="line">turtle.goto(<span class="number">100</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.goto(<span class="number">0</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.goto(-<span class="number">50</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.goto(-<span class="number">50</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">90</span>, -<span class="number">100</span>)</span><br><span class="line">turtle.goto(-<span class="number">90</span>, -<span class="number">200</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p>效果简单，暂不展示。</p><h4 id="（2）画玫瑰"><a href="#（2）画玫瑰" class="headerlink" title="（2）画玫瑰"></a>（2）画玫瑰</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"><span class="comment"># 设置初始位置</span></span><br><span class="line">turtle.penup()</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">200</span>)</span><br><span class="line">turtle.pendown()</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 花蕊</span></span><br><span class="line">turtle.fillcolor(<span class="string">&quot;red&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(<span class="number">10</span>, <span class="number">180</span>)</span><br><span class="line">turtle.circle(<span class="number">25</span>, <span class="number">110</span>)</span><br><span class="line">turtle.left(<span class="number">50</span>)</span><br><span class="line">turtle.circle(<span class="number">60</span>, <span class="number">45</span>)</span><br><span class="line">turtle.circle(<span class="number">20</span>, <span class="number">170</span>)</span><br><span class="line">turtle.right(<span class="number">24</span>)</span><br><span class="line">turtle.fd(<span class="number">30</span>)</span><br><span class="line">turtle.left(<span class="number">10</span>)</span><br><span class="line">turtle.circle(<span class="number">30</span>, <span class="number">110</span>)</span><br><span class="line">turtle.fd(<span class="number">20</span>)</span><br><span class="line">turtle.left(<span class="number">40</span>)</span><br><span class="line">turtle.circle(<span class="number">90</span>, <span class="number">70</span>)</span><br><span class="line">turtle.circle(<span class="number">30</span>, <span class="number">150</span>)</span><br><span class="line">turtle.right(<span class="number">30</span>)</span><br><span class="line">turtle.fd(<span class="number">15</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>, <span class="number">90</span>)</span><br><span class="line">turtle.left(<span class="number">15</span>)</span><br><span class="line">turtle.fd(<span class="number">45</span>)</span><br><span class="line">turtle.right(<span class="number">165</span>)</span><br><span class="line">turtle.fd(<span class="number">20</span>)</span><br><span class="line">turtle.left(<span class="number">155</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">80</span>)</span><br><span class="line">turtle.left(<span class="number">50</span>)</span><br><span class="line">turtle.circle(<span class="number">150</span>, <span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 花瓣1</span></span><br><span class="line">turtle.left(<span class="number">150</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>, <span class="number">70</span>)</span><br><span class="line">turtle.left(<span class="number">20</span>)</span><br><span class="line">turtle.circle(<span class="number">75</span>, <span class="number">105</span>)</span><br><span class="line">turtle.setheading(<span class="number">60</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>, <span class="number">98</span>)</span><br><span class="line">turtle.circle(-<span class="number">90</span>, <span class="number">40</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 花瓣2</span></span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.circle(<span class="number">90</span>, <span class="number">40</span>)</span><br><span class="line">turtle.circle(-<span class="number">80</span>, <span class="number">98</span>)</span><br><span class="line">turtle.setheading(-<span class="number">83</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 叶子1</span></span><br><span class="line">turtle.fd(<span class="number">30</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">25</span>)</span><br><span class="line">turtle.left(<span class="number">45</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(-<span class="number">80</span>, <span class="number">90</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.circle(-<span class="number">80</span>, <span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.right(<span class="number">135</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.fd(<span class="number">85</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.fd(<span class="number">80</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 叶子2</span></span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.right(<span class="number">45</span>)</span><br><span class="line">turtle.fillcolor(<span class="string">&quot;green&quot;</span>)</span><br><span class="line">turtle.begin_fill()</span><br><span class="line">turtle.circle(<span class="number">80</span>, <span class="number">90</span>)</span><br><span class="line">turtle.left(<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">80</span>, <span class="number">90</span>)</span><br><span class="line">turtle.end_fill()</span><br><span class="line"></span><br><span class="line">turtle.left(<span class="number">135</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.left(<span class="number">180</span>)</span><br><span class="line">turtle.fd(<span class="number">60</span>)</span><br><span class="line">turtle.right(<span class="number">90</span>)</span><br><span class="line">turtle.circle(<span class="number">200</span>, <span class="number">60</span>)</span><br><span class="line">turtle.done()</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/img/images/00027/00027_2.png" alt="玫瑰"></p><h4 id="（3）画一棵树"><a href="#（3）画一棵树" class="headerlink" title="（3）画一棵树"></a>（3）画一棵树</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"><span class="keyword">from</span> math <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">tree</span>(<span class="params">n, l</span>):</span><br><span class="line">    pd()  <span class="comment"># 下笔</span></span><br><span class="line">    <span class="comment"># 阴影效果</span></span><br><span class="line">    t = cos(radians(heading() + <span class="number">45</span>)) / <span class="number">8</span> + <span class="number">0.25</span></span><br><span class="line">    pencolor(t, t, t)</span><br><span class="line">    pensize(n / <span class="number">3</span>)</span><br><span class="line">    forward(l)  <span class="comment"># 画树枝</span></span><br><span class="line">    <span class="keyword">if</span> n &gt; <span class="number">0</span>:</span><br><span class="line">        b = random() * <span class="number">15</span> + <span class="number">10</span>  <span class="comment"># 右分支偏转角度</span></span><br><span class="line">        c = random() * <span class="number">15</span> + <span class="number">10</span>  <span class="comment"># 左分支偏转角度</span></span><br><span class="line">        d = l * (random() * <span class="number">0.25</span> + <span class="number">0.7</span>)  <span class="comment"># 下一个分支的长度</span></span><br><span class="line">        <span class="comment"># 右转一定角度，画右分支</span></span><br><span class="line">        right(b)</span><br><span class="line">        tree(n - <span class="number">1</span>, d)</span><br><span class="line">        <span class="comment"># 左转一定角度，画左分支</span></span><br><span class="line">        left(b + c)</span><br><span class="line">        tree(n - <span class="number">1</span>, d)</span><br><span class="line">        <span class="comment"># 转回来</span></span><br><span class="line">        right(c)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="comment"># 画叶子</span></span><br><span class="line">        right(<span class="number">90</span>)</span><br><span class="line">        n = cos(radians(heading() - <span class="number">45</span>)) / <span class="number">4</span> + <span class="number">0.5</span></span><br><span class="line">        pencolor(n, n*<span class="number">0.8</span>, n*<span class="number">0.8</span>)</span><br><span class="line">        circle(<span class="number">3</span>)</span><br><span class="line">        left(<span class="number">90</span>)</span><br><span class="line">        <span class="comment"># 添加0.3倍的飘落叶子</span></span><br><span class="line">        <span class="keyword">if</span>(random() &gt; <span class="number">0.7</span>):</span><br><span class="line">            pu()</span><br><span class="line">            <span class="comment"># 飘落</span></span><br><span class="line">            t = heading()</span><br><span class="line">            an = -<span class="number">40</span> + random()*<span class="number">40</span></span><br><span class="line">            setheading(an)</span><br><span class="line">            dis = <span class="built_in">int</span>(<span class="number">800</span>*random()*<span class="number">0.5</span> + <span class="number">400</span>*random()*<span class="number">0.3</span> + <span class="number">200</span>*random()*<span class="number">0.2</span>)</span><br><span class="line">            forward(dis)</span><br><span class="line">            setheading(t)</span><br><span class="line">            <span class="comment"># 画叶子</span></span><br><span class="line">            pd()</span><br><span class="line">            right(<span class="number">90</span>)</span><br><span class="line">            n = cos(radians(heading() - <span class="number">45</span>)) / <span class="number">4</span> + <span class="number">0.5</span></span><br><span class="line">            pencolor(n*<span class="number">0.5</span>+<span class="number">0.5</span>, <span class="number">0.4</span>+n*<span class="number">0.4</span>, <span class="number">0.4</span>+n*<span class="number">0.4</span>)</span><br><span class="line">            circle(<span class="number">2</span>)</span><br><span class="line">            left(<span class="number">90</span>)</span><br><span class="line">            pu()</span><br><span class="line">            <span class="comment"># 返回</span></span><br><span class="line">            t = heading()</span><br><span class="line">            setheading(an)</span><br><span class="line">            backward(dis)</span><br><span class="line">            setheading(t)</span><br><span class="line">    pu()</span><br><span class="line">    backward(l)  <span class="comment"># 退回</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">bgcolor(<span class="number">0.5</span>, <span class="number">0.5</span>, <span class="number">0.5</span>)  <span class="comment"># 背景色</span></span><br><span class="line">ht()  <span class="comment"># 隐藏turtle</span></span><br><span class="line">speed(<span class="number">0</span>)  <span class="comment"># 速度，1-10渐进，0最快</span></span><br><span class="line">tracer(<span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">pu()  <span class="comment"># 抬笔</span></span><br><span class="line">backward(<span class="number">100</span>)</span><br><span class="line">left(<span class="number">90</span>)  <span class="comment"># 左转90度</span></span><br><span class="line">pu()  <span class="comment"># 抬笔</span></span><br><span class="line">backward(<span class="number">300</span>)  <span class="comment"># 后退300</span></span><br><span class="line">tree(<span class="number">12</span>, <span class="number">100</span>)  <span class="comment"># 递归7层</span></span><br><span class="line">done()</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/img/images/00027/00027_3.png" alt="树"></p><h3 id="11-获取星期字符串"><a href="#11-获取星期字符串" class="headerlink" title="11.获取星期字符串"></a>11.获取星期字符串</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">weekStr = <span class="string">&#x27;一二三四五六日&#x27;</span></span><br><span class="line">weekId = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入星期数字(1-7): &#x27;</span>))</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;星期&#x27;</span>+weekStr[weekId-<span class="number">1</span>])</span><br></pre></td></tr></table></figure><h3 id="12-打印沙漏"><a href="#12-打印沙漏" class="headerlink" title="12.打印沙漏"></a>12.打印沙漏</h3><p>本题要求你写个程序把给定的符号打印成沙漏的形状。例如给定17个“*”，要求按下列格式打印</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br></pre></td></tr></table></figure><p>所谓“沙漏形状”，是指每行输出奇数个符号；各行符号中心对齐；相邻两行符号数差2；符号数先从大到小顺序递减到1，再从小到大顺序递增；首尾符号数相等。</p><p>给定任意N个符号，不一定能正好组成一个沙漏。要求打印出的沙漏能用掉尽可能多的符号。</p><ul><li>输入格式:</li></ul><p>输入在一行给出1个正整数N（≤1000）和一个符号，中间以空格分隔。</p><ul><li>输出格式:</li></ul><p>首先打印出由给定符号组成的最大的沙漏形状，最后在一行中输出剩下没用掉的符号数。</p><ul><li>输入样例:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">19</span> *</span><br></pre></td></tr></table></figure><ul><li>输出样例:</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">*****</span><br><span class="line"> ***</span><br><span class="line">  *</span><br><span class="line"> ***</span><br><span class="line">*****</span><br><span class="line"><span class="number">2</span></span><br></pre></td></tr></table></figure><ul><li>参考题解：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">show</span>(<span class="params">n, c</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(-(n-<span class="number">1</span>), n):</span><br><span class="line">        <span class="built_in">print</span>((n-<span class="number">1</span>-<span class="built_in">abs</span>(i))*<span class="string">&#x27; &#x27;</span>+((<span class="built_in">abs</span>(i)+<span class="number">1</span>)*<span class="number">2</span>-<span class="number">1</span>)*c, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n, ch = <span class="built_in">input</span>().split()</span><br><span class="line">num = <span class="built_in">int</span>(n)</span><br><span class="line">ans = num</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">True</span>):</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">int</span>(math.sqrt((num+<span class="number">1</span>)/<span class="number">2</span>)) == math.sqrt((num+<span class="number">1</span>)/<span class="number">2</span>):</span><br><span class="line">        t = <span class="built_in">int</span>(math.sqrt((num+<span class="number">1</span>)/<span class="number">2</span>))</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    num -= <span class="number">1</span></span><br><span class="line"></span><br><span class="line">show(t, ch)</span><br><span class="line"><span class="built_in">print</span>(ans-<span class="number">2</span>*t*t+<span class="number">1</span>)</span><br></pre></td></tr></table></figure><h3 id="13-计算程序运行时间"><a href="#13-计算程序运行时间" class="headerlink" title="13.计算程序运行时间"></a>13.计算程序运行时间</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> time</span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1234567</span>):</span><br><span class="line">    t = i + <span class="number">1</span></span><br><span class="line">end = time.perf_counter()</span><br><span class="line"><span class="built_in">print</span>(end - start)</span><br></pre></td></tr></table></figure><h3 id="14-文本进度条"><a href="#14-文本进度条" class="headerlink" title="14.文本进度条"></a>14.文本进度条</h3><ul><li>多行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多行</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">scale = <span class="number">50</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------执行开始------&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale+<span class="number">1</span>):</span><br><span class="line">    a = <span class="string">&#x27;*&#x27;</span> * i</span><br><span class="line">    b = <span class="string">&#x27;.&#x27;</span> * (scale - i)</span><br><span class="line">    c = (i/scale)*<span class="number">100</span></span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#x27;</span>.<span class="built_in">format</span>(c, a, b))</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;------执行结束------&#x27;</span>)</span><br></pre></td></tr></table></figure><ul><li>单行</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 单行</span></span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line">scale = <span class="number">50</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;执行开始&#x27;</span>.center(scale//<span class="number">2</span>, <span class="string">&#x27;-&#x27;</span>))</span><br><span class="line">start = time.perf_counter()</span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(scale + <span class="number">1</span>):</span><br><span class="line">    a = <span class="string">&#x27;*&#x27;</span> * i</span><br><span class="line">    b = <span class="string">&#x27;.&#x27;</span> * (scale - i)</span><br><span class="line">    c = (i/scale)*<span class="number">100</span></span><br><span class="line">    dur = time.perf_counter() - start</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;\r&#123;:^3.0f&#125;%[&#123;&#125;-&gt;&#123;&#125;]&#123;:.2f&#125;s&#x27;</span>.<span class="built_in">format</span>(c, a, b, dur), end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line">    time.sleep(<span class="number">0.1</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;\n&#x27;</span>+<span class="string">&#x27;执行结束&#x27;</span>.center(scale//<span class="number">2</span>, <span class="string">&#x27;-&#x27;</span>))</span><br></pre></td></tr></table></figure><h3 id="15-计算圆周率"><a href="#15-计算圆周率" class="headerlink" title="15.计算圆周率"></a>15.计算圆周率</h3><ul><li>方法一</li></ul><p><img src="/img/images/00027/00027_4.png" alt="圆周率"></p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">pi = <span class="number">0</span></span><br><span class="line">N = <span class="number">100</span></span><br><span class="line"><span class="keyword">for</span> k <span class="keyword">in</span> <span class="built_in">range</span>(N):</span><br><span class="line">    pi += <span class="number">1</span>/<span class="built_in">pow</span>(<span class="number">16</span>, k)*(<span class="number">4</span>/(<span class="number">8</span>*k+<span class="number">1</span>)-<span class="number">2</span>/(<span class="number">8</span>*k+<span class="number">4</span>)-<span class="number">1</span>/(<span class="number">8</span>*k+<span class="number">5</span>)-<span class="number">1</span>/(<span class="number">8</span>*k+<span class="number">6</span>))</span><br><span class="line"><span class="built_in">print</span>(pi)</span><br></pre></td></tr></table></figure><ul><li>方法二（蒙特卡罗方法）</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> random</span><br><span class="line"><span class="keyword">from</span> time <span class="keyword">import</span> perf_counter</span><br><span class="line">DARTS = <span class="number">1000</span>*<span class="number">1000</span></span><br><span class="line">hits = <span class="number">0.0</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, DARTS+<span class="number">1</span>):</span><br><span class="line">    x, y = random(), random()</span><br><span class="line">    dist = <span class="built_in">pow</span>(x ** <span class="number">2</span> + y ** <span class="number">2</span>, <span class="number">0.5</span>)</span><br><span class="line">    <span class="keyword">if</span> dist &lt;= <span class="number">1.0</span>:</span><br><span class="line">        hits += <span class="number">1</span></span><br><span class="line">pi = <span class="number">4</span> * (hits/DARTS)</span><br><span class="line"><span class="built_in">print</span>(pi)</span><br></pre></td></tr></table></figure><h3 id="16-可变参数传递"><a href="#16-可变参数传递" class="headerlink" title="16.可变参数传递"></a>16.可变参数传递</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n, *p</span>):</span><br><span class="line">    res = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        res *= i</span><br><span class="line">    <span class="keyword">for</span> item <span class="keyword">in</span> p:</span><br><span class="line">        res *= item</span><br><span class="line">    <span class="keyword">return</span> res</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 相当于 10! * 2 * 3 * 5</span></span><br><span class="line"><span class="built_in">print</span>(fact(<span class="number">10</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>))</span><br></pre></td></tr></table></figure><h3 id="17-函数可以有多个返回值"><a href="#17-函数可以有多个返回值" class="headerlink" title="17.函数可以有多个返回值"></a>17.函数可以有多个返回值</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n, m=<span class="number">1</span></span>):</span><br><span class="line">    s = <span class="number">1</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        s *= i</span><br><span class="line">    <span class="keyword">return</span> s//m, n, m</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">a, b, c = fact(<span class="number">10</span>, <span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(a, b, c)</span><br></pre></td></tr></table></figure><h3 id="18-局部变量和全局变量"><a href="#18-局部变量和全局变量" class="headerlink" title="18.局部变量和全局变量"></a>18.局部变量和全局变量</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">n, s = <span class="number">10</span>, <span class="number">100</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fact</span>(<span class="params">n, m=<span class="number">1</span></span>):</span><br><span class="line">    <span class="comment"># fact()函数中使用global保留字</span></span><br><span class="line">    <span class="comment"># 声明此处s是全局变量s</span></span><br><span class="line">    <span class="keyword">global</span> s</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">1</span>, n+<span class="number">1</span>):</span><br><span class="line">        s *= i</span><br><span class="line">    <span class="keyword">return</span> s  <span class="comment"># 此处s指全局变量s</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fact(n), s)  <span class="comment"># 此处全局变量s被函数修改</span></span><br></pre></td></tr></table></figure><ul><li>局部变量为组合数据类型且未创建，等同于全局变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">a</span>):</span><br><span class="line">    <span class="comment"># 此处ls是列表类型，未真实创建，则等同于全局变量</span></span><br><span class="line">    ls.append(a)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fun(<span class="string">&#x27;c&#x27;</span>)  <span class="comment"># 全局变量ls被修改</span></span><br><span class="line"><span class="built_in">print</span>(ls)</span><br></pre></td></tr></table></figure><ul><li>局部变量为组合数据类型被真实创建，等同于局部变量</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;F&#x27;</span>, <span class="string">&#x27;f&#x27;</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">fun</span>(<span class="params">a</span>):</span><br><span class="line">    ls = []</span><br><span class="line">    <span class="comment"># 此处ls是列表类型，真实创建，则等同于局部变量</span></span><br><span class="line">    ls.append(a)</span><br><span class="line">    <span class="keyword">return</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">fun(<span class="string">&#x27;c&#x27;</span>)  <span class="comment"># 全局变量ls未被修改</span></span><br><span class="line"><span class="built_in">print</span>(ls)</span><br></pre></td></tr></table></figure><h3 id="19-lambda函数"><a href="#19-lambda函数" class="headerlink" title="19.lambda函数"></a>19.lambda函数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">f</span>(<span class="params">x, y</span>): <span class="keyword">return</span> x+y</span><br><span class="line"><span class="built_in">print</span>(f(<span class="number">10</span>, <span class="number">15</span>))</span><br></pre></td></tr></table></figure><h3 id="20-绘制七段数码管"><a href="#20-绘制七段数码管" class="headerlink" title="20.绘制七段数码管"></a>20.绘制七段数码管</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawLine</span>(<span class="params">draw</span>):</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDight</span>(<span class="params">digit</span>):</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDate</span>(<span class="params">data</span>):</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> data:</span><br><span class="line">        drawDight(<span class="built_in">int</span>(i))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.setup(<span class="number">800</span>, <span class="number">350</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(-<span class="number">300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    drawDate(<span class="string">&#x27;1234567890&#x27;</span>)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><ul><li>功能扩展：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"><span class="keyword">import</span> time</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawGap</span>():</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawLine</span>(<span class="params">draw</span>):</span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.pendown() <span class="keyword">if</span> draw <span class="keyword">else</span> turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">40</span>)</span><br><span class="line">    drawGap()</span><br><span class="line">    turtle.right(<span class="number">90</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDight</span>(<span class="params">digit</span>):</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">6</span>, <span class="number">8</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">90</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    drawLine(<span class="literal">True</span>) <span class="keyword">if</span> digit <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span>] <span class="keyword">else</span> drawLine(<span class="literal">False</span>)</span><br><span class="line">    turtle.left(<span class="number">180</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(<span class="number">20</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">drawDate</span>(<span class="params">date</span>):</span><br><span class="line">    turtle.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> date:</span><br><span class="line">        <span class="keyword">if</span> i == <span class="string">&#x27;-&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;年&#x27;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;normal&#x27;</span>))</span><br><span class="line">            turtle.pencolor(<span class="string">&#x27;green&#x27;</span>)</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">&#x27;=&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;月&#x27;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;normal&#x27;</span>))</span><br><span class="line">            turtle.fd(<span class="number">40</span>)</span><br><span class="line">        <span class="keyword">elif</span> i == <span class="string">&#x27;+&#x27;</span>:</span><br><span class="line">            turtle.write(<span class="string">&#x27;日&#x27;</span>, font=(<span class="string">&#x27;Arial&#x27;</span>, <span class="number">18</span>, <span class="string">&#x27;normal&#x27;</span>))</span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            drawDight(<span class="built_in">int</span>(i))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.setup(<span class="number">800</span>, <span class="number">350</span>, <span class="number">200</span>, <span class="number">200</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.fd(-<span class="number">300</span>)</span><br><span class="line">    turtle.pensize(<span class="number">5</span>)</span><br><span class="line">    drawDate(time.strftime(<span class="string">&#x27;%Y-%m=%d+&#x27;</span>))</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/img/images/00027/00027_5.png" alt="数码管日期"></p><h3 id="21-递归"><a href="#21-递归" class="headerlink" title="21.递归"></a>21.递归</h3><ul><li>字符串反转</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">rvs</span>(<span class="params">s</span>):</span><br><span class="line">    <span class="keyword">if</span> s == <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        <span class="keyword">return</span> s</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> rvs(s[<span class="number">1</span>:])+s[<span class="number">0</span>]</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment"># 非递归形式：</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">def rvs(s):</span></span><br><span class="line"><span class="string">    return s[::-1]</span></span><br><span class="line"><span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">s = <span class="string">&#x27;abcdefg&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(rvs(s))</span><br></pre></td></tr></table></figure><ul><li>斐波那契数列</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">fib</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span> <span class="keyword">or</span> n == <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">return</span> fib(n-<span class="number">1</span>)+fib(n-<span class="number">2</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="built_in">print</span>(fib(<span class="number">20</span>))</span><br></pre></td></tr></table></figure><ul><li>汉诺塔</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">hanoi</span>(<span class="params">n, src, dst, mid</span>):</span><br><span class="line">    <span class="keyword">global</span> count</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">1</span>:</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;-&gt;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(src, dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        hanoi(n-<span class="number">1</span>, src, mid, dst)</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;&#123;&#125;-&gt;&#123;&#125;&#x27;</span>.<span class="built_in">format</span>(src, dst))</span><br><span class="line">        count += <span class="number">1</span></span><br><span class="line">        hanoi(n-<span class="number">1</span>, mid, dst, src)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hanoi(<span class="number">3</span>, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;C&#x27;</span>, <span class="string">&#x27;B&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(count)</span><br></pre></td></tr></table></figure><h3 id="22-绘制科赫曲线"><a href="#22-绘制科赫曲线" class="headerlink" title="22.绘制科赫曲线"></a>22.绘制科赫曲线</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">koch</span>(<span class="params">size, n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        turtle.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">60</span>, -<span class="number">120</span>, <span class="number">60</span>]:</span><br><span class="line">            turtle.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>, n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.setup(<span class="number">800</span>, <span class="number">400</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(-<span class="number">300</span>, -<span class="number">50</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.pensize(<span class="number">2</span>)</span><br><span class="line">    koch(<span class="number">600</span>, <span class="number">3</span>)  <span class="comment"># 3阶科赫曲线</span></span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><ul><li>科赫雪花：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">koch</span>(<span class="params">size, n</span>):</span><br><span class="line">    <span class="keyword">if</span> n == <span class="number">0</span>:</span><br><span class="line">        turtle.fd(size)</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> angle <span class="keyword">in</span> [<span class="number">0</span>, <span class="number">60</span>, -<span class="number">120</span>, <span class="number">60</span>]:</span><br><span class="line">            turtle.left(angle)</span><br><span class="line">            koch(size/<span class="number">3</span>, n-<span class="number">1</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    turtle.setup(<span class="number">600</span>, <span class="number">600</span>)</span><br><span class="line">    turtle.penup()</span><br><span class="line">    turtle.goto(-<span class="number">200</span>, <span class="number">100</span>)</span><br><span class="line">    turtle.pendown()</span><br><span class="line">    turtle.pensize()</span><br><span class="line">    level = <span class="number">3</span></span><br><span class="line">    koch(<span class="number">400</span>, level)</span><br><span class="line">    turtle.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">400</span>, level)</span><br><span class="line">    turtle.right(<span class="number">120</span>)</span><br><span class="line">    koch(<span class="number">400</span>, level)</span><br><span class="line">    turtle.hideturtle()</span><br><span class="line">    turtle.done()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="23-利用集合进行去重"><a href="#23-利用集合进行去重" class="headerlink" title="23.利用集合进行去重"></a>23.利用集合进行去重</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="string">&#x27;p&#x27;</span>, <span class="string">&#x27;y&#x27;</span>, <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">2</span>]</span><br><span class="line">s = <span class="built_in">set</span>(ls)</span><br><span class="line">ans = <span class="built_in">list</span>(s)</span><br><span class="line"><span class="built_in">print</span>(ans)</span><br></pre></td></tr></table></figure><h3 id="24-基本统计值计算"><a href="#24-基本统计值计算" class="headerlink" title="24.基本统计值计算"></a>24.基本统计值计算</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getNum</span>():</span><br><span class="line">    nums = []</span><br><span class="line">    iNumStr = <span class="built_in">input</span>(<span class="string">&#x27;请输入数字(回车退出):&#x27;</span>)</span><br><span class="line">    <span class="keyword">while</span> iNumStr != <span class="string">&#x27;&#x27;</span>:</span><br><span class="line">        nums.append(<span class="built_in">eval</span>(iNumStr))</span><br><span class="line">        iNumStr = <span class="built_in">input</span>(<span class="string">&#x27;请输入数字(回车退出):&#x27;</span>)</span><br><span class="line">    <span class="keyword">return</span> nums</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">mean</span>(<span class="params">numbers</span>):</span><br><span class="line">    s = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        s += num</span><br><span class="line">    <span class="keyword">return</span> s / <span class="built_in">len</span>(numbers)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">dev</span>(<span class="params">numbers, mean</span>):</span><br><span class="line">    sdev = <span class="number">0.0</span></span><br><span class="line">    <span class="keyword">for</span> num <span class="keyword">in</span> numbers:</span><br><span class="line">        sdev = sdev + (num - mean) ** <span class="number">2</span></span><br><span class="line">    <span class="keyword">return</span> <span class="built_in">pow</span>(sdev / (<span class="built_in">len</span>(numbers)-<span class="number">1</span>), <span class="number">0.5</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">medium</span>(<span class="params">numbers</span>):</span><br><span class="line">    <span class="built_in">sorted</span>(numbers)</span><br><span class="line">    size = <span class="built_in">len</span>(numbers)</span><br><span class="line">    <span class="keyword">if</span> size % <span class="number">2</span> == <span class="number">0</span>:</span><br><span class="line">        med = (numbers[size//<span class="number">2</span>-<span class="number">1</span>] + numbers[size//<span class="number">2</span>])/<span class="number">2</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        med = numbers[size//<span class="number">2</span>]</span><br><span class="line">    <span class="keyword">return</span> med</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">n = getNum()</span><br><span class="line">m = mean(n)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;平均值:&#123;&#125;, 方差:&#123;:.2f&#125;, 中位数:&#123;&#125;.&#x27;</span>.<span class="built_in">format</span>(m, dev(n, m), medium(n)))</span><br></pre></td></tr></table></figure><h3 id="25-文本词频统计"><a href="#25-文本词频统计" class="headerlink" title="25.文本词频统计"></a>25.文本词频统计</h3><ul><li>英文文本词频统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">getText</span>():</span><br><span class="line">    txt = <span class="built_in">open</span>(<span class="string">&quot;hamlet.txt&quot;</span>, <span class="string">&quot;r&quot;</span>).read()</span><br><span class="line">    txt = txt.lower()  <span class="comment"># 转小写</span></span><br><span class="line">    <span class="keyword">for</span> ch <span class="keyword">in</span> <span class="string">&#x27;!&quot;#$%&amp;()*+,-./:;&lt;=&gt;?@[\]^_`&#123;|&#125;~&#x27;</span>:</span><br><span class="line">        txt = txt.replace(ch, <span class="string">&quot; &quot;</span>)</span><br><span class="line">    <span class="keyword">return</span> txt</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">hamletTxt = getText()</span><br><span class="line">words = hamletTxt.split()</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    counts[word] = counts.get(word, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)  <span class="comment"># 按键值对的第二个元素按从大到小的顺序排序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">10</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><ul><li>中文文本词频统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">&quot;threekingdoms.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>).read() <span class="comment"># 这里的编码方式要根据文件选择</span></span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        counts[word] = counts.get(word, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)  <span class="comment"># 按键值对的第二个元素按从大到小的顺序排序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><ul><li>《三国演义》人物出场频率统计</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="comment"># 这里的编码方式要根据文件选择</span></span><br><span class="line">txt = <span class="built_in">open</span>(<span class="string">&quot;threekingdoms.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>).read()</span><br><span class="line"><span class="comment"># 排除词库，根据运行结果人工不断进行优化，将不是人名的词语加入到本词库中</span></span><br><span class="line">excludes = &#123;<span class="string">&quot;将军&quot;</span>, <span class="string">&quot;却说&quot;</span>, <span class="string">&quot;荆州&quot;</span>, <span class="string">&quot;二人&quot;</span>, <span class="string">&quot;不可&quot;</span>, <span class="string">&quot;不能&quot;</span>, <span class="string">&quot;如此&quot;</span>&#125;</span><br><span class="line">words = jieba.lcut(txt)</span><br><span class="line">counts = &#123;&#125;</span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> words:</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(word) == <span class="number">1</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;诸葛亮&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;孔明曰&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;孔明&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;关公&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;云长&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;关羽&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;玄德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;玄德曰&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;刘备&quot;</span></span><br><span class="line">    <span class="keyword">elif</span> word == <span class="string">&quot;孟德&quot;</span> <span class="keyword">or</span> word == <span class="string">&quot;丞相曰&quot;</span>:</span><br><span class="line">        rword = <span class="string">&quot;曹操&quot;</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        rword = word</span><br><span class="line">    counts[rword] = counts.get(rword, <span class="number">0</span>) + <span class="number">1</span></span><br><span class="line"><span class="keyword">for</span> word <span class="keyword">in</span> excludes:</span><br><span class="line">    <span class="keyword">del</span> counts[word]</span><br><span class="line">items = <span class="built_in">list</span>(counts.items())</span><br><span class="line">items.sort(key=<span class="keyword">lambda</span> x: x[<span class="number">1</span>], reverse=<span class="literal">True</span>)  <span class="comment"># 按键值对的第二个元素按从大到小的顺序排序</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">15</span>):</span><br><span class="line">    word, count = items[i]</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;&#123;0:&lt;10&#125;&#123;1:&gt;5&#125;&quot;</span>.<span class="built_in">format</span>(word, count))</span><br></pre></td></tr></table></figure><h3 id="26-判断素数"><a href="#26-判断素数" class="headerlink" title="26.判断素数"></a>26.判断素数</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 判断整数n是否是素数</span></span><br><span class="line"><span class="keyword">import</span> math</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">isprime</span>(<span class="params">n</span>):</span><br><span class="line">    <span class="keyword">if</span> n &lt; <span class="number">2</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">2</span>, <span class="built_in">int</span>(math.sqrt(n)+<span class="number">1</span>)):</span><br><span class="line">            <span class="keyword">if</span> n % i == <span class="number">0</span>:</span><br><span class="line">                <span class="keyword">return</span> <span class="literal">False</span></span><br><span class="line">        <span class="keyword">return</span> <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line">m, n = <span class="number">1</span>, <span class="number">200</span></span><br><span class="line"><span class="comment"># m, n = map(int, input().split())</span></span><br><span class="line">result = [i <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(m, n+<span class="number">1</span>) <span class="keyword">if</span> isprime(i)]</span><br><span class="line"><span class="built_in">print</span>(m, <span class="string">&#x27;到&#x27;</span>, n, <span class="string">&#x27;之间素数的个数为:&#x27;</span>, <span class="built_in">len</span>(result))</span><br><span class="line"><span class="built_in">print</span>(result, end=<span class="string">&#x27; &#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h3 id="27-f-txt文件保存：“中国是个伟大的国家！”"><a href="#27-f-txt文件保存：“中国是个伟大的国家！”" class="headerlink" title="27.f.txt文件保存：“中国是个伟大的国家！”"></a>27.f.txt文件保存：“中国是个伟大的国家！”</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">tf = <span class="built_in">open</span>(<span class="string">&quot;f.txt&quot;</span>, <span class="string">&quot;rt&quot;</span>)  <span class="comment"># 文本形式打开</span></span><br><span class="line"><span class="comment"># tf = open(&quot;f.txt&quot;, &quot;rb&quot;)  二进制形式打开</span></span><br><span class="line"><span class="built_in">print</span>(tf.readline())</span><br><span class="line">tf.close()</span><br></pre></td></tr></table></figure><h3 id="28-文件的全文本操作"><a href="#28-文件的全文本操作" class="headerlink" title="28.文件的全文本操作"></a>28.文件的全文本操作</h3><ul><li>方法一</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">fo = <span class="built_in">open</span>(fname,<span class="string">&quot;r&quot;</span>)</span><br><span class="line">txt = fo.read()</span><br><span class="line"><span class="comment"># 对全文txt进行处理</span></span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">fo = <span class="built_in">open</span>(fname, <span class="string">&quot;r&quot;</span>)</span><br><span class="line">txt = fo.read(<span class="number">2</span>)</span><br><span class="line"><span class="keyword">while</span> txt != <span class="string">&quot;&quot;</span>:</span><br><span class="line">    <span class="comment"># 对txt进行处理</span></span><br><span class="line">    txt = fo.read(<span class="number">2</span>)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><h3 id="29-逐行遍历文件"><a href="#29-逐行遍历文件" class="headerlink" title="29.逐行遍历文件"></a>29.逐行遍历文件</h3><ul><li>方法一</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">fo = <span class="built_in">open</span>(fname, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo.readlines():</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><ul><li>方法二</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">fname = <span class="built_in">input</span>(<span class="string">&quot;请输入要打开的文件名称:&quot;</span>)</span><br><span class="line">fo = <span class="built_in">open</span>(fname, <span class="string">&quot;r&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><ul><li>方法三</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">file = <span class="built_in">open</span>(fname, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line"><span class="keyword">while</span> <span class="literal">True</span>:</span><br><span class="line">    text = file.readline()</span><br><span class="line">    <span class="keyword">if</span> <span class="keyword">not</span> file:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(text)</span><br><span class="line">file.close()</span><br></pre></td></tr></table></figure><h3 id="30-文件的写入"><a href="#30-文件的写入" class="headerlink" title="30.文件的写入"></a>30.文件的写入</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">fo = <span class="built_in">open</span>(<span class="string">&quot;output.txt&quot;</span>, <span class="string">&quot;w+&quot;</span>)</span><br><span class="line">ls = [<span class="string">&quot;中国&quot;</span>, <span class="string">&quot;法国&quot;</span>, <span class="string">&quot;美国&quot;</span>]</span><br><span class="line">fo.writelines(ls)</span><br><span class="line">fo.seek(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    <span class="built_in">print</span>(line)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><h3 id="31-自动轨迹绘制"><a href="#31-自动轨迹绘制" class="headerlink" title="31.自动轨迹绘制"></a>31.自动轨迹绘制</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.title(<span class="string">&#x27;自动轨迹绘制&#x27;</span>)</span><br><span class="line">t.setup(<span class="number">800</span>, <span class="number">600</span>, <span class="number">0</span>, <span class="number">0</span>)</span><br><span class="line">t.pencolor(<span class="string">&#x27;red&#x27;</span>)</span><br><span class="line">t.pensize(<span class="number">5</span>)</span><br><span class="line"><span class="comment"># 数据读取</span></span><br><span class="line">datals = []</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;data.txt&quot;</span>)</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> f:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    datals.append(<span class="built_in">list</span>(<span class="built_in">map</span>(<span class="built_in">eval</span>, line.split(<span class="string">&quot;,&quot;</span>))))</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># 自动绘制</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="built_in">len</span>(datals)):</span><br><span class="line">    t.pencolor(datals[i][<span class="number">3</span>], datals[i][<span class="number">4</span>], datals[i][<span class="number">5</span>])</span><br><span class="line">    t.fd(datals[i][<span class="number">0</span>])</span><br><span class="line">    <span class="keyword">if</span> datals[i][<span class="number">1</span>]:</span><br><span class="line">        t.right(datals[i][<span class="number">2</span>])</span><br><span class="line">    <span class="keyword">else</span>:</span><br><span class="line">        t.left(datals[i][<span class="number">2</span>])</span><br><span class="line">t.done()</span><br></pre></td></tr></table></figure><p>data.txt文件：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">0</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">1</span>,<span class="number">1</span>,<span class="number">0</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">1</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line"><span class="number">300</span>,<span class="number">0</span>,<span class="number">144</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">0</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">0</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">72</span>,<span class="number">1</span>,<span class="number">0</span>,<span class="number">1</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">72</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br><span class="line"><span class="number">184</span>,<span class="number">1</span>,<span class="number">720</span>,<span class="number">0</span>,<span class="number">0</span>,<span class="number">0</span></span><br></pre></td></tr></table></figure><h3 id="32-一维数据的读入处理"><a href="#32-一维数据的读入处理" class="headerlink" title="32.一维数据的读入处理"></a>32.一维数据的读入处理</h3><ul><li>从空格分隔的文件中读入数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中国 美国 日本 德国 法国 英国 意大利</span></span><br><span class="line">txt = <span class="built_in">open</span>(fname).read()</span><br><span class="line">ls = txt.split()</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># [&#x27;中国&#x27;, &#x27;美国&#x27;, &#x27;日本&#x27;, &#x27;德国&#x27;, &#x27;法国&#x27;, &#x27;英国&#x27;, &#x27;意大利&#x27;]</span></span><br></pre></td></tr></table></figure><ul><li>从特殊字符分隔的文件中读入数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 中国$美国$日本$德国$法国$英国$意大利</span></span><br><span class="line">txt = <span class="built_in">open</span>(fname).read()</span><br><span class="line">ls = txt.split(<span class="string">&#x27;$&#x27;</span>)</span><br><span class="line">f.close()</span><br><span class="line"><span class="comment"># [&#x27;中国&#x27;, &#x27;美国&#x27;, &#x27;日本&#x27;, &#x27;德国&#x27;, &#x27;法国&#x27;, &#x27;英国&#x27;, &#x27;意大利&#x27;]</span></span><br></pre></td></tr></table></figure><h3 id="33-一维数据的写入处理"><a href="#33-一维数据的写入处理" class="headerlink" title="33.一维数据的写入处理"></a>33.一维数据的写入处理</h3><ul><li>以空格分隔写入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;俄罗斯&#x27;</span>]</span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27; &#x27;</span>.join(ls))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><ul><li>以特殊字符分隔写入</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [<span class="string">&#x27;中国&#x27;</span>, <span class="string">&#x27;美国&#x27;</span>, <span class="string">&#x27;俄罗斯&#x27;</span>]</span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line">f.write(<span class="string">&#x27;$&#x27;</span>.join(ls))</span><br><span class="line">f.close()</span><br></pre></td></tr></table></figure><h3 id="34-二维数据的处理"><a href="#34-二维数据的处理" class="headerlink" title="34.二维数据的处理"></a>34.二维数据的处理</h3><ul><li>从csv格式的文件中读入数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">fo = <span class="built_in">open</span>(fname)</span><br><span class="line">ls = []</span><br><span class="line"><span class="keyword">for</span> line <span class="keyword">in</span> fo:</span><br><span class="line">    line = line.replace(<span class="string">&quot;\n&quot;</span>, <span class="string">&quot;&quot;</span>)</span><br><span class="line">    ls .append(line.split(<span class="string">&quot;,&quot;</span>))</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><ul><li>将数据写入csv格式的文件</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">ls = [[], [], []]  <span class="comment"># 二维列表</span></span><br><span class="line">f = <span class="built_in">open</span>(fname, <span class="string">&#x27;w&#x27;</span>)</span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> ls:</span><br><span class="line">    f.write(<span class="string">&#x27;,&#x27;</span>.join(item) + <span class="string">&#x27;\n&#x27;</span>)</span><br><span class="line">fo.close()</span><br></pre></td></tr></table></figure><ul><li>遍历二维数据</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">ls = [[<span class="number">1</span>, <span class="number">2</span>], [<span class="number">3</span>, <span class="number">4</span>], [<span class="number">5</span>, <span class="number">6</span>]]  <span class="comment"># 二维列表</span></span><br><span class="line"><span class="keyword">for</span> row <span class="keyword">in</span> ls:</span><br><span class="line">    <span class="keyword">for</span> column <span class="keyword">in</span> row:</span><br><span class="line">        <span class="built_in">print</span>(column)</span><br></pre></td></tr></table></figure><h3 id="35-绘制词云"><a href="#35-绘制词云" class="headerlink" title="35.绘制词云"></a>35.绘制词云</h3><ul><li>英文</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">w = wordcloud.WordCloud()</span><br><span class="line">w.generate(<span class="string">&quot;Python and WordCloud&quot;</span>)</span><br><span class="line">w.to_file(<span class="string">&quot;pic.png&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>中文</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">txt = <span class="string">&quot;程序设计语言是计算机能够理解和识别用户\</span></span><br><span class="line"><span class="string">操作意图的一种交互体系,它按照特定规则组织计算\</span></span><br><span class="line"><span class="string">机指令,使计算机能够自动进行各种运算处理&quot;</span></span><br><span class="line">w = wordcloud.WordCloud(width=<span class="number">1000</span>, font_path=<span class="string">&quot;msyh.ttc&quot;</span>, height=<span class="number">700</span>)</span><br><span class="line">w.generate(<span class="string">&quot; &quot;</span>.join(jieba.lcut(txt)))</span><br><span class="line">w.to_file(<span class="string">&quot;pic.png&quot;</span>)</span><br></pre></td></tr></table></figure><p>效果：</p><p><img src="/img/images/00027/00027_6.png" alt="词云"></p><h3 id="36-政府工作报告词云"><a href="#36-政府工作报告词云" class="headerlink" title="36.政府工作报告词云"></a>36.政府工作报告词云</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> jieba</span><br><span class="line"><span class="keyword">import</span> wordcloud</span><br><span class="line">f = <span class="built_in">open</span>(<span class="string">&quot;fname.txt&quot;</span>, <span class="string">&quot;r&quot;</span>, encoding=<span class="string">&quot;utf-8&quot;</span>)</span><br><span class="line">t = f.read()</span><br><span class="line">f.close()</span><br><span class="line">ls = jieba.lcut(t)</span><br><span class="line">txt = <span class="string">&quot; &quot;</span>.join(ls)</span><br><span class="line">w = wordcloud.WordCloud(width=<span class="number">1000</span>, height=<span class="number">700</span>,</span><br><span class="line">                        font_path=<span class="string">&quot;msyh.ttc&quot;</span>, background_color=<span class="string">&quot;white&quot;</span>)</span><br><span class="line">w.generate(txt)</span><br><span class="line">w.to_file(<span class="string">&quot;pic.png&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="37-体育竞技分析"><a href="#37-体育竞技分析" class="headerlink" title="37.体育竞技分析"></a>37.体育竞技分析</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> random <span class="keyword">import</span> *</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printIntro</span>():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;这个程序模拟两个选手A和B的某种竞技比赛&quot;</span>)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;程序运行需要A和B的能力值(以0到1之间的小数表示)&quot;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getInputs</span>():</span><br><span class="line">    a = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入选手A的能力值(0-1):&quot;</span>))</span><br><span class="line">    b = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;请输入选手B的能力值(0-1):&quot;</span>))</span><br><span class="line">    n = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&quot;模拟比赛的场次:&quot;</span>))</span><br><span class="line">    <span class="keyword">return</span> a, b, n</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">printSunmary</span>(<span class="params">winsA, winsB</span>):</span><br><span class="line">    n = winsA + winsB</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;竞技分析开始, 共模拟&#123;&#125;场比赛&quot;</span>.<span class="built_in">format</span>(n))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;选手A获胜&#123;&#125;场比赛, 占比&#123;:0.1%&#125;&quot;</span>.<span class="built_in">format</span>(winsA, winsA/n))</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;选手B获胜&#123;&#125;场比赛, 占比&#123;:0.1%&#125;&quot;</span>.<span class="built_in">format</span>(winsB, winsB/n))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">gameOver</span>(<span class="params">a, b</span>):</span><br><span class="line">    <span class="keyword">return</span> a == <span class="number">15</span> <span class="keyword">or</span> b == <span class="number">15</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simOneGame</span>(<span class="params">probA, probB</span>):</span><br><span class="line">    scoreA, scoreB = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    serving = <span class="string">&quot;A&quot;</span></span><br><span class="line">    <span class="keyword">while</span> <span class="keyword">not</span> gameOver(scoreA, scoreB):</span><br><span class="line">        <span class="keyword">if</span> serving == <span class="string">&quot;A&quot;</span>:</span><br><span class="line">            <span class="keyword">if</span> random() &lt; probA:</span><br><span class="line">                scoreA += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                serving = <span class="string">&quot;B&quot;</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            <span class="keyword">if</span> random() &lt; probB:</span><br><span class="line">                scoreB += <span class="number">1</span></span><br><span class="line">            <span class="keyword">else</span>:</span><br><span class="line">                serving = <span class="string">&quot;A&quot;</span></span><br><span class="line">    <span class="keyword">return</span> scoreA, scoreB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">simNGames</span>(<span class="params">n, probA, probB</span>):</span><br><span class="line">    winsA, winsB = <span class="number">0</span>, <span class="number">0</span></span><br><span class="line">    <span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(n):</span><br><span class="line">        scoreA, scoreB = simOneGame(probA, probB)</span><br><span class="line">        <span class="keyword">if</span> scoreA &gt; scoreB:</span><br><span class="line">            winsA += <span class="number">1</span></span><br><span class="line">        <span class="keyword">else</span>:</span><br><span class="line">            winsB += <span class="number">1</span></span><br><span class="line">    <span class="keyword">return</span> winsA, winsB</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    printIntro()</span><br><span class="line">    probA, probB, n = getInputs()</span><br><span class="line">    winsA, winsB = simNGames(n, probA, probB)</span><br><span class="line">    printSunmary(winsA, winsB)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="38-第三方库自动安装脚本"><a href="#38-第三方库自动安装脚本" class="headerlink" title="38.第三方库自动安装脚本"></a>38.第三方库自动安装脚本</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> os</span><br><span class="line">libs = &#123;<span class="string">&quot;numpy&quot;</span>, <span class="string">&quot;matplotlib&quot;</span>, <span class="string">&quot;pillow&quot;</span>, <span class="string">&quot;requests&quot;</span>, <span class="string">&quot;jieba&quot;</span>, <span class="string">&quot;pygame&quot;</span>&#125;</span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="keyword">for</span> lib <span class="keyword">in</span> libs:</span><br><span class="line">        os.system(<span class="string">&quot;pip install &quot;</span> + lib)</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Successful&quot;</span>)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Failed Somehow&quot;</span>)</span><br></pre></td></tr></table></figure><h3 id="39-python-docx库进行文本处理"><a href="#39-python-docx库进行文本处理" class="headerlink" title="39.python-docx库进行文本处理"></a>39.python-docx库进行文本处理</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> docx <span class="keyword">import</span> Document</span><br><span class="line">document = Document()</span><br><span class="line">document.add_heading(<span class="string">&#x27;Document Title&#x27;</span>, <span class="number">0</span>)</span><br><span class="line">p = document.add_paragraph(<span class="string">&#x27;A plain paragraph having some &#x27;</span>)</span><br><span class="line">document.add_page_break()</span><br><span class="line">document.save(<span class="string">&#x27;demo.docx&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="40-Requests-库的使用"><a href="#40-Requests-库的使用" class="headerlink" title="40.Requests 库的使用"></a>40.Requests 库的使用</h3><ul><li>Requests库的7个主要方法：</li></ul><table><thead><tr><th>方法</th><th>说明</th></tr></thead><tbody><tr><td>requests.request()</td><td>构造一个请求，支撑以下各方法的基础方法</td></tr><tr><td>requests.get()</td><td>获取 HTML 网页的主要方法，对应于 HTTP 的 GET</td></tr><tr><td>requests.head()</td><td>获取 HTML 网页头信息的方法，对应于 HTTP 的 HEAD</td></tr><tr><td>requests.post()</td><td>向 HTML 网页提交 POST 请求的方法，对应于 HTTP 的 POST</td></tr><tr><td>requests.put()</td><td>向 HTML 网页提交 PUT 请求的方法，对应于 HTTP 的 PUT</td></tr><tr><td>requests.patch()</td><td>向 HTML 网页提交局部修改请求，对应于 HTTP 的 PATCH</td></tr><tr><td>requests.delete()</td><td>向 HTML 页面提交删除请求，对应于 HTTP 的 DELETE</td></tr></tbody></table><ul><li>Reponse 对象的属性：</li></ul><table><thead><tr><th>属性</th><th>说明</th></tr></thead><tbody><tr><td>r.status_code</td><td>HTTP 请求的返回状态，200表示连接成功，404表示失败</td></tr><tr><td>r.text</td><td>HTTP 相应内容的字符串形式，即，url 对应的页面内容</td></tr><tr><td>r.encoding</td><td>从 HTTP header 中猜测的响应内容编码方式</td></tr><tr><td>r.apparent_encoding</td><td>从内容中分析出的响应内容编码方式（备选编码方式）</td></tr><tr><td>r.content</td><td>HTTP 响应内容的二进制形式</td></tr></tbody></table><ul><li>爬取百度网页内容：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">&quot;http://www.baidu.com&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(r.status_code)</span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="built_in">print</span>(r.encoding)</span><br><span class="line"><span class="built_in">print</span>(r.apparent_encoding)</span><br><span class="line">r.encoding = <span class="string">&#x27;utf-8&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(r.text)</span><br></pre></td></tr></table></figure><ul><li>理解 Request 库的异常：</li></ul><table><thead><tr><th>异常</th><th>说明</th></tr></thead><tbody><tr><td>requests.ConnectionError</td><td>网络连接错误异常，如 DNS 查询失败、拒绝连接等</td></tr><tr><td>requests.HTTPError</td><td>HTTP 错误异常</td></tr><tr><td>requests.URLRequired</td><td>URL 缺失异常</td></tr><tr><td>requests.TooManyRedirects</td><td>超过最大重定向次数，产生重定向异常</td></tr><tr><td>requests.ConnectTimeout</td><td>连接远程服务器超时异常</td></tr><tr><td>requests.Timeout</td><td>请求 URL 超时，产生超时异常</td></tr><tr><td>r.raise_for_status()</td><td>如果不是200，产生异常requests.HTTPError</td></tr></tbody></table><ul><li>爬取网页的通用代码框架：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHTMLText</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="comment"># r = requests.get(url, timeout=30)</span></span><br><span class="line">        kv = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125; <span class="comment"># 模拟浏览器访问</span></span><br><span class="line">        r = requests.get(url, headers=kv, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()  <span class="comment"># 如果状态不是200,引发HTTPError异常</span></span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;产生异常&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    url = <span class="string">&quot;http://www.baidu.com&quot;</span></span><br><span class="line">    <span class="built_in">print</span>(getHTMLText(url))</span><br></pre></td></tr></table></figure><ul><li>requests的请求方式：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">requests.request(method, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;GET&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;HEAD&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;POST&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;PUT&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;PATCH&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;delete&#x27;</span>, url, **kwargs)</span><br><span class="line">requests.request(<span class="string">&#x27;OPTIONS&#x27;</span>, url, **kwargs)</span><br></pre></td></tr></table></figure><ul><li>访问京东：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">getHTMLText</span>(<span class="params">url</span>):</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        kv = &#123;<span class="string">&#x27;user-agent&#x27;</span>: <span class="string">&#x27;Mozilla/5.0&#x27;</span>&#125; <span class="comment"># 模拟浏览器访问</span></span><br><span class="line">        r = requests.get(url, headers=kv, timeout=<span class="number">30</span>)</span><br><span class="line">        r.raise_for_status()  <span class="comment"># 如果状态不是200,引发HTTPError异常</span></span><br><span class="line">        r.encoding = r.apparent_encoding</span><br><span class="line">        <span class="keyword">return</span> r.text</span><br><span class="line">    <span class="keyword">except</span>:</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;产生异常&quot;</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&quot;__main__&quot;</span>:</span><br><span class="line">    url = <span class="string">&#x27;https://item.jd.com/100028056854.html&#x27;</span></span><br><span class="line">    <span class="built_in">print</span>(getHTMLText(url))</span><br></pre></td></tr></table></figure><ul><li>百度搜索全代码：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">keyword = <span class="string">&#x27;Python&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    kv = &#123;<span class="string">&#x27;wd&#x27;</span>: keyword&#125;</span><br><span class="line">    r = requests.get(<span class="string">&quot;http://www.baidu.com/s&quot;</span>, params=kv)</span><br><span class="line">    <span class="built_in">print</span>(r.request.url)</span><br><span class="line">    r.raise_for_status()</span><br><span class="line">    <span class="built_in">print</span>(r.text)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;爬取失败&quot;</span>)</span><br></pre></td></tr></table></figure><ul><li>爬取图片并保存：</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">image_url = <span class="string">&#x27;http://img0.dili360.com/ga/M02/33/7C/wKgBzFSbqQyAJVAuAARB8cSWH_w695.tub.jpg@!rw14&#x27;</span></span><br><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    response = requests.get(image_url)</span><br><span class="line">    <span class="built_in">print</span>(response.content)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">with</span> <span class="built_in">open</span>(<span class="string">&#x27;pic.jpg&#x27;</span>, <span class="string">&#x27;wb&#x27;</span>) <span class="keyword">as</span> f:</span><br><span class="line">        f.write(response.content)</span><br><span class="line"><span class="keyword">except</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;爬取失败&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="41-beautifulsoup4-库的使用"><a href="#41-beautifulsoup4-库的使用" class="headerlink" title="41.beautifulsoup4 库的使用"></a>41.beautifulsoup4 库的使用</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line"><span class="keyword">from</span> bs4 <span class="keyword">import</span> BeautifulSoup</span><br><span class="line">r = requests.get(<span class="string">&quot;https://www.baidu.com/&quot;</span>)</span><br><span class="line">r.raise_for_status()  <span class="comment"># 如果状态不是200,引发HTTPError异常</span></span><br><span class="line">r.encoding = r.apparent_encoding</span><br><span class="line">demo = r.text</span><br><span class="line">soup = BeautifulSoup(demo, <span class="string">&quot;html.parser&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(soup.prettify())</span><br></pre></td></tr></table></figure><h3 id="42-创建-Cat-类"><a href="#42-创建-Cat-类" class="headerlink" title="42.创建 Cat 类"></a>42.创建 Cat 类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):  <span class="comment"># 这里设置类的属性</span></span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s appeared.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s disappeared.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;He is a cat named %s.&#x27;</span> % self.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is eating.&quot;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is drinking.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    tom = Cat(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(tom)</span><br><span class="line">    tom.eat()</span><br><span class="line">    tom.drink()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="43-创建家具类-HouseItem-和房屋类-House"><a href="#43-创建家具类-HouseItem-和房屋类-House" class="headerlink" title="43.创建家具类 HouseItem 和房屋类 House"></a>43.创建家具类 HouseItem 和房屋类 House</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HouseItem</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, area</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.area = area</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;[%s] 占地 %.2f&#x27;</span> % (self.name, self.area)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">House</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, house_type, area</span>):</span><br><span class="line">        self.house_type = house_type</span><br><span class="line">        self.area = area</span><br><span class="line">        self.free_area = area</span><br><span class="line">        self.item_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;户型: %s\n总面积: %.2f\n剩余:%.2f\n家具: %s&#x27;</span> \</span><br><span class="line">               % (self.house_type, self.area, self.free_area, self.item_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_item</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;要添加 %s&#x27;</span> % item)</span><br><span class="line">        <span class="keyword">if</span> item.area &gt; self.free_area:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s 的面积太大了,无法添加&#x27;</span> % item.name)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.item_list.append(item.name)</span><br><span class="line">        self.free_area -= item.area</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    bed = HouseItem(<span class="string">&#x27;席梦思&#x27;</span>, <span class="number">4</span>)</span><br><span class="line">    chest = HouseItem(<span class="string">&#x27;衣柜&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    table = HouseItem(<span class="string">&#x27;餐桌&#x27;</span>, <span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line">    my_house = House(<span class="string">&#x27;三室两厅&#x27;</span>, <span class="number">100</span>)</span><br><span class="line">    <span class="built_in">print</span>(my_house)</span><br><span class="line">    my_house.add_item(bed)</span><br><span class="line">    my_house.add_item(chest)</span><br><span class="line">    my_house.add_item(table)</span><br><span class="line">    <span class="built_in">print</span>(my_house)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h3 id="44-属性可以是另外一个类创建的对象"><a href="#44-属性可以是另外一个类创建的对象" class="headerlink" title="44.属性可以是另外一个类创建的对象"></a>44.属性可以是另外一个类创建的对象</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Gun</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, model</span>):</span><br><span class="line">        self.model = model</span><br><span class="line">        self.bullet_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_bullet</span>(<span class="params">self, count</span>):</span><br><span class="line">        self.bullet_count += count</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">shoot</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.bullet_count &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%s] 没有子弹了...&#x27;</span> % self.model)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.bullet_count -= <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[%s] 突突突... [剩余子弹 %d]&#x27;</span> % (self.model, self.bullet_count))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Soldier</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="comment"># 新兵没有枪</span></span><br><span class="line">        self.gun = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    is 和 == 的区别:</span></span><br><span class="line"><span class="string">    is 用于判断 两个变量 引用对象是否为同一个</span></span><br><span class="line"><span class="string">    == 用于判断 引用变量的值 是否相等</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fire</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.gun <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%s] 还没有枪...&#x27;</span> % self.name)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> self.gun.bullet_count &lt;= <span class="number">0</span>:</span><br><span class="line">            self.gun.add_bullet(<span class="number">50</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s 装弹完毕,即将开火!&#x27;</span> % self.name)</span><br><span class="line">        self.gun.shoot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;I am a soldier named %s.&#x27;</span> % self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    ak47 = Gun(<span class="string">&#x27;AK47&#x27;</span>)</span><br><span class="line">    jack = Soldier(<span class="string">&#x27;Jack&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(jack)</span><br><span class="line">    jack.gun = ak47</span><br><span class="line">    jack.fire()</span><br><span class="line">    jack.fire()</span><br><span class="line">    jack.fire()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="45-私有属性和私有方法"><a href="#45-私有属性和私有方法" class="headerlink" title="45.私有属性和私有方法"></a>45.私有属性和私有方法</h3><p>在定义属性或方法时，在属性名或者方法名前增加两个下划线，定义的就是私有属性或方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Women</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.__age = <span class="number">18</span>  <span class="comment"># 私有属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">secret</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 的年龄是 %d&#x27;</span> % (self.name, self.__age))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    mary = Women(<span class="string">&#x27;Mary&#x27;</span>)</span><br><span class="line">    mary.secret()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果想在外部访问类的私有属性，在属性名前面加上 __类名 即可，Python并没有真正意义上的私有</p><h3 id="46-继承"><a href="#46-继承" class="headerlink" title="46.继承"></a>46.继承</h3><ul><li>示例1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, ID</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.ID = ID</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().speak()  <span class="comment"># 调用父类方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;I am a student.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;do homework&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    jack = Student(<span class="string">&#x27;Jack&#x27;</span>, <span class="string">&#x27;20144245&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    jack.speak()</span><br><span class="line">    jack.move()</span><br><span class="line">    jack.task()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ul><li>示例2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().speak()  <span class="comment"># 调用父类方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;I am a student.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;do homework&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    jack = Student()</span><br><span class="line"></span><br><span class="line">    jack.speak()</span><br><span class="line">    jack.move()</span><br><span class="line">    jack.task()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ul><li>示例3</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.__name = <span class="string">&#x27;person&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__siyou</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;父类的私有方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">gongyou</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在父类中调用私有属性和方法&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(self.__name)</span><br><span class="line">        self.__siyou()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在子类中调用父类的公有方法,进一步间接调用父类的私有方法&#x27;</span>)</span><br><span class="line">        <span class="built_in">super</span>().gongyou()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    jack = Student()</span><br><span class="line">    jack.test()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ul><li>示例4</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 多继承</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">testA</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;test A&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">testB</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;test B&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A, B):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    oc = C()</span><br><span class="line">    oc.testA()</span><br><span class="line">    oc.testB()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果父类之间存在同名的属性或方法，应该尽量避免使用多继承</p><h3 id="47-多态"><a href="#47-多态" class="headerlink" title="47.多态"></a>47.多态</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 蹦蹦跳跳地玩耍...&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianDog</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 飞到天上去玩耍&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game_with_dog</span>(<span class="params">self, dog</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 和 %s 快乐地玩耍...&#x27;</span> % (self.name, dog.name))</span><br><span class="line">        dog.game()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    dog = Dog(<span class="string">&#x27;旺财&#x27;</span>)</span><br><span class="line">    xiaotian = XiaoTianDog(<span class="string">&#x27;旺财&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    p = Person(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line">    p.game_with_dog(dog)</span><br><span class="line">    p.game_with_dog(xiaotian)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="48-类属性和类方法"><a href="#48-类属性和类方法" class="headerlink" title="48.类属性和类方法"></a>48.类属性和类方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        Tool.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    too11 = Tool(<span class="string">&#x27;斧头&#x27;</span>)</span><br><span class="line">    too12 = Tool(<span class="string">&#x27;锤子&#x27;</span>)</span><br><span class="line">    too13 = Tool(<span class="string">&#x27;水桶&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(Tool.count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="49-类方法"><a href="#49-类方法" class="headerlink" title="49.类方法"></a>49.类方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_tool_count</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(Tool.count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        Tool.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    too11 = Tool(<span class="string">&#x27;斧头&#x27;</span>)</span><br><span class="line">    too12 = Tool(<span class="string">&#x27;锤子&#x27;</span>)</span><br><span class="line">    too13 = Tool(<span class="string">&#x27;水桶&#x27;</span>)</span><br><span class="line">    Tool.show_tool_count()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="50-静态方法"><a href="#50-静态方法" class="headerlink" title="50.静态方法"></a>50.静态方法</h3><p>如果某个方法既不访问类属性，也不访问实例属性，可以将其设为静态方法</p><ul><li>示例1</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">    @staticmethod  </span><span class="comment"># 静态方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小狗要跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Dog.run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ul><li>示例2</li></ul><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Game</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    top_score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, player_name</span>):</span><br><span class="line">        self.player_name = player_name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_help</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;帮助信息:让僵尸进入大门&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_top_score</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;历史记录: %d&#x27;</span> % Game.top_score)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 开始游戏...&#x27;</span> % self.player_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Game.show_help()</span><br><span class="line">    Game.show_top_score()</span><br><span class="line">    game = Game(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line">    game.start_game()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="51-重写-new-方法"><a href="#51-重写-new-方法" class="headerlink" title="51.重写 new 方法"></a>51.重写 <strong>new</strong> 方法</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MusicPlayer</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;播放器初始化&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写new方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="comment"># 1.创建对象时,new方法会被自动调用</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;创建对象 分配空间&#x27;</span>)</span><br><span class="line">        <span class="comment"># 2.为对象分配空间</span></span><br><span class="line">        instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="comment"># 3.返回对象的引用</span></span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    player = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="52-单例设计模式-设计-一个单例类"><a href="#52-单例设计模式-设计-一个单例类" class="headerlink" title="52.单例设计模式 设计 一个单例类"></a>52.单例设计模式 设计 一个单例类</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MusicPlayer</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 记录第一个被创建对象的引用</span></span><br><span class="line">    instance = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录是否执行过初始化动作</span></span><br><span class="line">    init_flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写new方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="comment"># 1.判断类属性是否是空对象</span></span><br><span class="line">        <span class="keyword">if</span> cls.instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 2.调用父类的方法为第一个对象分配空间</span></span><br><span class="line">            cls.instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="comment"># 3.返回类属性保存的第一个对象的引用</span></span><br><span class="line">        <span class="keyword">return</span> cls.instance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> MusicPlayer.init_flag:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;初始化播放器&#x27;</span>)</span><br><span class="line">        MusicPlayer.init_flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    player1 = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player1)</span><br><span class="line">    player2 = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Python </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Python基础知识</title>
      <link href="/2023/11/04/00026/"/>
      <url>/2023/11/04/00026/</url>
      
        <content type="html"><![CDATA[<h2 id="一、数据类型"><a href="#一、数据类型" class="headerlink" title="一、数据类型"></a>一、数据类型</h2><h3 id="（一）简单类型"><a href="#（一）简单类型" class="headerlink" title="（一）简单类型"></a>（一）简单类型</h3><ol><li><p>整数（int）：表示整数值，例如 5 和 -10。</p></li><li><p>浮点数（float）：表示带有小数部分的数字，例如 3.14 和 -2.7。</p></li><li><p>复数（complex）：也就是数据运算中的复数 a+bi，a 是实部，b是虚部。</p></li><li><p>字符串（str）：表示文本数据，一般用 <strong>【 ‘一对单引号 ‘】</strong>或<strong>【”一对双引号 “】</strong>或<strong>【’’’一对3个单引号 ‘’’】</strong>或<strong>【”””一对3个双引号 “””】</strong>括起来，例如 “Hello World” 、 ‘Python’、’’’每天都要开开心心’’’。</p></li><li><p>布尔值（bool）：表示真或假的值，只有两个取值：True 和 False。</p></li><li><p>空值（None）：空值None是python中的一个特殊的值，表示空（没有），也是 类型 NoneType的唯一值。</p></li></ol><h3 id="（二）容器类型"><a href="#（二）容器类型" class="headerlink" title="（二）容器类型"></a>（二）容器类型</h3><table><thead><tr><th>数据结构</th><th>定义符号</th><th>元素是否可变</th><th>元素是否可重复</th><th>元素是否有序</th></tr></thead><tbody><tr><td>列表（list）</td><td>[]</td><td>可变</td><td>可重复</td><td>有序</td></tr><tr><td>元组（tuple）</td><td>()</td><td>不可变</td><td>可重复</td><td>有序</td></tr><tr><td>字典（dict）</td><td>{key : value}</td><td>可变</td><td>key不可重复<br />value可重复</td><td>无序</td></tr><tr><td>集合（set）</td><td>{}</td><td>可变</td><td>不可重复</td><td>无序</td></tr></tbody></table><p>以上4种容器类型都由一个基类类型——序列衍生出来。</p><h4 id="1-序列"><a href="#1-序列" class="headerlink" title="1.序列"></a>1.序列</h4><ol><li>序列是具有先后关系的一组元素。</li></ol><ul><li><p>序列是一维元素向量，元素类型可以不同</p></li><li><p>类似数学元素序列：S<del>0</del> , S<del>1</del> ,…, S<del>n-1</del></p></li><li><p>元素间由序号引导，通过下标访问序列的特定元素</p></li><li><p>序列是一个基类类型，一般使用其衍生出来的字符串类型、元组类型、列表类型</p></li></ul><ol start="2"><li>通用操作符</li></ol><table><thead><tr><th>操作符及应用</th><th>描述</th></tr></thead><tbody><tr><td>x in s</td><td>如果x是序列s的元素，返回True，否则返回False</td></tr><tr><td>x not in s</td><td>如果x是序列s的元素，返回False，否则返回True</td></tr><tr><td>s + t</td><td>连接两个序列 s 和 t</td></tr><tr><td>s * n 或 n * s</td><td>将序列 s 复制 n 次</td></tr><tr><td>s[i]</td><td>索引，返回 s 中的第 i 个元素，i 是序列的序号</td></tr><tr><td>s[i: j] 或 s[i: j: k]</td><td>切片，返回序列 s 中第 i 到 j 以 k 为步长的元素子序列</td></tr></tbody></table><ol start="3"><li>函数和方法</li></ol><table><thead><tr><th>函数和方法</th><th>描述</th></tr></thead><tbody><tr><td>len(s)</td><td>返回序列s的长度</td></tr><tr><td>min(s)</td><td>返回序列s的最小元素，s中元素需要可比较</td></tr><tr><td>max(s)</td><td>返回序列s的最大元素，s中元素需要可比较</td></tr><tr><td>s.index(x) 或 s.index(x, i, j)</td><td>返回序列s从 i 开始到 j 位置中第一次出现元素x的位置</td></tr><tr><td>s.count(x)</td><td>返回序列s中出现x的总次数</td></tr></tbody></table><h4 id="2-列表"><a href="#2-列表" class="headerlink" title="2.列表"></a>2.列表</h4><ol><li>列表是序列类型的一种扩展，十分常用。</li></ol><ul><li><p>列表是一种序列类型，创建后可以随意被修改</p></li><li><p>使用方括号 [] 或 list() 创建，元素间用逗号 , 分隔</p></li><li><p>列表中各元素类型可以不同，无长度限制</p></li></ul><ol start="2"><li>列表类型常用函数和方法</li></ol><table><thead><tr><th>函数或方法</th><th>描述</th></tr></thead><tbody><tr><td>s[i] &#x3D; x</td><td>替换列表 s 第 i 元素为 x</td></tr><tr><td>s[i: j: k] &#x3D; t</td><td>用列表 t 替换 s 切片后所对应元素子列表</td></tr><tr><td>del s[i]</td><td>删除列表 s 中第 i 元素</td></tr><tr><td>del s[i: j: k]</td><td>删除列表 s 中第 i 到第 j 以 k 为步长的元素</td></tr><tr><td>s +&#x3D; t</td><td>更新列表 s，将列表 t 元素增加到列表 ls 中</td></tr><tr><td>s *&#x3D; n</td><td>更新列表 s，其元素重复n次</td></tr><tr><td>s.append(x)</td><td>在列表 s 最后增加一个元素 x</td></tr><tr><td>s.clear()</td><td>删除列表 s 中所有元素</td></tr><tr><td>s.copy()</td><td>生成一个新列表，赋值 s 中所有元素</td></tr><tr><td>s.insert(i,x)</td><td>在列表 s 的 第 i 位置增加元素x</td></tr><tr><td>s.pop(i)</td><td>将列表 s 中第 i 位置元素取出并删除该元素</td></tr><tr><td>s.remove(x)</td><td>将列表 s 中出现的第一个元素 x 删除</td></tr><tr><td>s.reverse()</td><td>将列表 s 中的元素反转</td></tr><tr><td>s.extend(t)</td><td>更新列表 s，将列表 t 元素增加到列表 s 中</td></tr></tbody></table><ol start="3"><li>代码演示</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空列表</span></span><br><span class="line">my_list = []</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个包含多个元素的列表</span></span><br><span class="line">my_list = [<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>]</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问列表中的元素</span></span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">0</span>])  <span class="comment"># 输出：1</span></span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">1</span>])  <span class="comment"># 输出：2</span></span><br><span class="line"><span class="built_in">print</span>(my_list[<span class="number">2</span>])  <span class="comment"># 输出：3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改列表中的元素</span></span><br><span class="line">my_list[<span class="number">0</span>] = <span class="number">4</span></span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[4, 2, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在列表末尾添加元素</span></span><br><span class="line">my_list.append(<span class="number">5</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[4, 2, 3, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 在指定位置插入元素</span></span><br><span class="line">my_list.insert(<span class="number">1</span>, <span class="number">6</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[4, 6, 2, 3, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除列表中的元素</span></span><br><span class="line">my_list.remove(<span class="number">2</span>)</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[4, 6, 3, 5]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用切片操作获取子列表</span></span><br><span class="line">sub_list = my_list[<span class="number">1</span>:<span class="number">3</span>]</span><br><span class="line"><span class="built_in">print</span>(sub_list)  <span class="comment"># 输出：[6, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表长度</span></span><br><span class="line">length = <span class="built_in">len</span>(my_list)</span><br><span class="line"><span class="built_in">print</span>(length)  <span class="comment"># 输出：4</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表排序</span></span><br><span class="line">my_list.sort()</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[3, 4, 5, 6]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 列表反转</span></span><br><span class="line">my_list.reverse()</span><br><span class="line"><span class="built_in">print</span>(my_list)  <span class="comment"># 输出：[6, 5, 4, 3]</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历列表</span></span><br><span class="line"><span class="keyword">for</span> item <span class="keyword">in</span> my_list:</span><br><span class="line">    <span class="built_in">print</span>(item)</span><br></pre></td></tr></table></figure><h4 id="3-元组"><a href="#3-元组" class="headerlink" title="3.元组"></a>3.元组</h4><ol><li>元组是序列类型的一种扩展。</li></ol><ul><li>元组是一种序列类型，一旦创建就不能被修改</li><li>使用小括号 () 或 tuple() 创建，元素间用逗号，分割</li><li>元组与列表类似，不同之处在于元素的元素不能修改</li></ul><ol start="2"><li>代码演示</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空元组</span></span><br><span class="line">my_tuple = ()</span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个包含多个元素的元组</span></span><br><span class="line">my_tuple = (<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问元组中的元素</span></span><br><span class="line"><span class="built_in">print</span>(my_tuple[<span class="number">0</span>])  <span class="comment"># 输出：1</span></span><br><span class="line"><span class="built_in">print</span>(my_tuple[<span class="number">1</span>])  <span class="comment"># 输出：2</span></span><br><span class="line"><span class="built_in">print</span>(my_tuple[<span class="number">2</span>])  <span class="comment"># 输出：3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 尝试修改元组中的元素（会报错）</span></span><br><span class="line"><span class="comment"># my_tuple[0] = 4  # 会引发 TypeError: &#x27;tuple&#x27; object does not support item assignment</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 拆包元组中的元素</span></span><br><span class="line">a, b, c = my_tuple</span><br><span class="line"><span class="built_in">print</span>(a)  <span class="comment"># 输出：1</span></span><br><span class="line"><span class="built_in">print</span>(b)  <span class="comment"># 输出：2</span></span><br><span class="line"><span class="built_in">print</span>(c)  <span class="comment"># 输出：3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 元组与列表结合</span></span><br><span class="line">my_list = [<span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>]</span><br><span class="line">combined_tuple = (*my_tuple, *my_list)</span><br><span class="line"><span class="built_in">print</span>(combined_tuple)  <span class="comment"># 输出：(1, 2, 3, 4, 5, 6)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用内置函数返回元组</span></span><br><span class="line">my_string = <span class="string">&quot;Hello&quot;</span></span><br><span class="line">string_tuple = <span class="built_in">tuple</span>(my_string)</span><br><span class="line"><span class="built_in">print</span>(string_tuple)  <span class="comment"># 输出：(&#x27;H&#x27;, &#x27;e&#x27;, &#x27;l&#x27;, &#x27;l&#x27;, &#x27;o&#x27;)</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 元组解压缩</span></span><br><span class="line">my_tuple = (<span class="string">&#x27;Apple&#x27;</span>, <span class="string">&#x27;Banana&#x27;</span>, <span class="string">&#x27;Orange&#x27;</span>)</span><br><span class="line">fruit1, fruit2, fruit3 = my_tuple</span><br><span class="line"><span class="built_in">print</span>(fruit1)  <span class="comment"># 输出：&#x27;Apple&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(fruit2)  <span class="comment"># 输出：&#x27;Banana&#x27;</span></span><br><span class="line"><span class="built_in">print</span>(fruit3)  <span class="comment"># 输出：&#x27;Orange&#x27;</span></span><br></pre></td></tr></table></figure><h4 id="4-字典"><a href="#4-字典" class="headerlink" title="4.字典"></a>4.字典</h4><ol><li>理解“映射”。</li></ol><ul><li>映射是一种键（索引）和值（数据）的对应</li></ul><ol start="2"><li>字典类型是“映射”的体现。</li></ol><ul><li><p>键值对：键是数据索引的扩展</p></li><li><p>字典是键值对的集合，键值对之间无序</p></li><li><p>采用大括号 { } 和 dict() 创建，键值对用冒号 : 表示</p></li><li><p>&lt;字典变量&gt; &#x3D; {&lt;键1&gt;:&lt;值1&gt;, … , &lt;键n&gt;:&lt;值n&gt;}</p></li><li><p>空大括号—— { } 默认生成字典类型</p></li></ul><ol start="3"><li>字典类型常用函数或方法</li></ol><table><thead><tr><th>函数或方法</th><th>描述</th></tr></thead><tbody><tr><td>del d[k]</td><td>删除字典d中键k对应的数据值</td></tr><tr><td>k in d</td><td>判断键k是否在字典d中，如果在返回True，否则False</td></tr><tr><td>d.keys()</td><td>返回字典d中所有的键信息</td></tr><tr><td>d.values()</td><td>返回字典d中所有的值信息</td></tr><tr><td>d.items()</td><td>返回字典d中所有的键值对信息</td></tr><tr><td>d.get(k, default)</td><td>键k存在，则返回相应值，不在则返回 default 值</td></tr><tr><td>d.pop(k, default)</td><td>键k存在，则取出相应值，不在则返回 default 值</td></tr><tr><td>d.popitem()</td><td>随机从字典d中取出一个键值对，以元组形式返回</td></tr><tr><td>d.clear()</td><td>删除所有的键值对</td></tr><tr><td>len(d)</td><td>返回字典d中元素的个数</td></tr></tbody></table><ol start="4"><li>代码演示</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空字典</span></span><br><span class="line">my_dict = &#123;&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加键值对</span></span><br><span class="line">my_dict[<span class="string">&#x27;name&#x27;</span>] = <span class="string">&#x27;Alice&#x27;</span></span><br><span class="line">my_dict[<span class="string">&#x27;age&#x27;</span>] = <span class="number">25</span></span><br><span class="line">my_dict[<span class="string">&#x27;city&#x27;</span>] = <span class="string">&#x27;New York&#x27;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 打印整个字典</span></span><br><span class="line"><span class="built_in">print</span>(my_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 访问字典中的值</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Name: <span class="subst">&#123;my_dict[<span class="string">&#x27;name&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Age: <span class="subst">&#123;my_dict[<span class="string">&#x27;age&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;City: <span class="subst">&#123;my_dict[<span class="string">&#x27;city&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 修改字典中的值</span></span><br><span class="line">my_dict[<span class="string">&#x27;age&#x27;</span>] = <span class="number">26</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">f&quot;Updated age: <span class="subst">&#123;my_dict[<span class="string">&#x27;age&#x27;</span>]&#125;</span>&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 删除键值对</span></span><br><span class="line"><span class="keyword">del</span> my_dict[<span class="string">&#x27;city&#x27;</span>]</span><br><span class="line"><span class="built_in">print</span>(my_dict)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查键是否存在</span></span><br><span class="line"><span class="keyword">if</span> <span class="string">&#x27;name&#x27;</span> <span class="keyword">in</span> my_dict:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&quot;Name key exists&quot;</span>)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 遍历字典</span></span><br><span class="line"><span class="keyword">for</span> key, value <span class="keyword">in</span> my_dict.items():</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">f&quot;<span class="subst">&#123;key&#125;</span>: <span class="subst">&#123;value&#125;</span>&quot;</span>)</span><br></pre></td></tr></table></figure><h4 id="5-集合"><a href="#5-集合" class="headerlink" title="5.集合"></a>5.集合</h4><ol><li>集合的特点</li></ol><ul><li>不可哈希类型不能作为集合的元素</li><li>集合里的元素顺序是无序，且不能重复的</li><li>如果对元素顺序无要求的话，可以用集合进行去重</li></ul><ol start="2"><li>代码演示</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># 创建一个空集合</span></span><br><span class="line">empty_set = <span class="built_in">set</span>()</span><br><span class="line"><span class="built_in">print</span>(empty_set)  <span class="comment"># 输出: set()</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 创建一个包含元素的集合</span></span><br><span class="line">fruits = &#123;<span class="string">&#x27;apple&#x27;</span>, <span class="string">&#x27;banana&#x27;</span>, <span class="string">&#x27;orange&#x27;</span>&#125;</span><br><span class="line"><span class="built_in">print</span>(fruits)  <span class="comment"># 输出: &#123;&#x27;orange&#x27;, &#x27;banana&#x27;, &#x27;apple&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 添加元素到集合</span></span><br><span class="line">fruits.add(<span class="string">&#x27;grape&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(fruits)  <span class="comment"># 输出: &#123;&#x27;banana&#x27;, &#x27;grape&#x27;, &#x27;apple&#x27;, &#x27;orange&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 从集合中删除元素</span></span><br><span class="line">fruits.remove(<span class="string">&#x27;banana&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>(fruits)  <span class="comment"># 输出: &#123;&#x27;grape&#x27;, &#x27;apple&#x27;, &#x27;orange&#x27;&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 检查集合中是否包含元素</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;apple&#x27;</span> <span class="keyword">in</span> fruits)  <span class="comment"># 输出: True</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;pear&#x27;</span> <span class="keyword">in</span> fruits)  <span class="comment"># 输出: False</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合的长度</span></span><br><span class="line"><span class="built_in">print</span>(<span class="built_in">len</span>(fruits))  <span class="comment"># 输出: 3</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 使用for循环遍历集合</span></span><br><span class="line"><span class="keyword">for</span> fruit <span class="keyword">in</span> fruits:</span><br><span class="line">    <span class="built_in">print</span>(fruit)</span><br><span class="line"></span><br><span class="line"><span class="comment"># 集合的数学运算和集合操作</span></span><br><span class="line">set1 = &#123;<span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>&#125;</span><br><span class="line">set2 = &#123;<span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>&#125;</span><br><span class="line"></span><br><span class="line">union_set = set1.union(set2)</span><br><span class="line"><span class="built_in">print</span>(union_set)  <span class="comment"># 输出: &#123;1, 2, 3, 4&#125;</span></span><br><span class="line"></span><br><span class="line">intersection_set = set1.intersection(set2)</span><br><span class="line"><span class="built_in">print</span>(intersection_set)  <span class="comment"># 输出: &#123;2, 3&#125;</span></span><br><span class="line"></span><br><span class="line">difference_set = set1.difference(set2)</span><br><span class="line"><span class="built_in">print</span>(difference_set)  <span class="comment"># 输出: &#123;1&#125;</span></span><br><span class="line"></span><br><span class="line">symmetric_difference_set = set1.symmetric_difference(set2)</span><br><span class="line"><span class="built_in">print</span>(symmetric_difference_set)  <span class="comment"># 输出: &#123;1, 4&#125;</span></span><br><span class="line"></span><br><span class="line"><span class="comment"># 清空集合</span></span><br><span class="line">fruits.clear()</span><br><span class="line"><span class="built_in">print</span>(fruits)  <span class="comment"># 输出: set()</span></span><br></pre></td></tr></table></figure><h3 id="（三）类类型"><a href="#（三）类类型" class="headerlink" title="（三）类类型"></a>（三）类类型</h3><h4 id="1-创建Cat类"><a href="#1-创建Cat类" class="headerlink" title="1.创建Cat类"></a>1.创建Cat类</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Cat</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):  <span class="comment"># 这里设置类的属性</span></span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s appeared.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s disappeared.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;He is a cat named %s.&#x27;</span> % self.name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">eat</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&quot;%s is eating.&quot;</span> % self.name)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">drink</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s is drinking.&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    tom = Cat(<span class="string">&#x27;Tom&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(tom)</span><br><span class="line">    tom.eat()</span><br><span class="line">    tom.drink()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><p>类自带的成员方法：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>)  <span class="comment"># 构造函数 在这里设置类的属性</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>)  <span class="comment"># 析构函数</span></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>)  <span class="comment"># 类似于Java类中的toString()函数</span></span><br></pre></td></tr></table></figure><h4 id="2-创建家具类-HouseItem-和房屋类-House"><a href="#2-创建家具类-HouseItem-和房屋类-House" class="headerlink" title="2.创建家具类 HouseItem 和房屋类 House"></a>2.创建家具类 HouseItem 和房屋类 House</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">HouseItem</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name, area</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.area = area</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;[%s] 占地 %.2f&#x27;</span> % (self.name, self.area)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">House</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, house_type, area</span>):</span><br><span class="line">        self.house_type = house_type</span><br><span class="line">        self.area = area</span><br><span class="line">        self.free_area = area</span><br><span class="line">        self.item_list = []</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;户型: %s\n总面积: %.2f\n剩余:%.2f\n家具: %s&#x27;</span> \</span><br><span class="line">            % (self.house_type, self.area, self.free_area, self.item_list)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_item</span>(<span class="params">self, item</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;要添加 %s&#x27;</span> % item)</span><br><span class="line">        <span class="keyword">if</span> item.area &gt; self.free_area:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s 的面积太大了,无法添加&#x27;</span> % item.name)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.item_list.append(item.name)</span><br><span class="line">        self.free_area -= item.area</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    bed = HouseItem(<span class="string">&#x27;席梦思&#x27;</span>, <span class="number">4</span>)</span><br><span class="line">    chest = HouseItem(<span class="string">&#x27;衣柜&#x27;</span>, <span class="number">2</span>)</span><br><span class="line">    table = HouseItem(<span class="string">&#x27;餐桌&#x27;</span>, <span class="number">1.5</span>)</span><br><span class="line"></span><br><span class="line">    my_house = House(<span class="string">&#x27;三室两厅&#x27;</span>, <span class="number">100</span>)</span><br><span class="line">    <span class="built_in">print</span>(my_house)</span><br><span class="line">    my_house.add_item(bed)</span><br><span class="line">    my_house.add_item(chest)</span><br><span class="line">    my_house.add_item(table)</span><br><span class="line">    <span class="built_in">print</span>(my_house)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">main()</span><br></pre></td></tr></table></figure><h4 id="3-属性可以是另外一个类创建的对象"><a href="#3-属性可以是另外一个类创建的对象" class="headerlink" title="3.属性可以是另外一个类创建的对象"></a>3.属性可以是另外一个类创建的对象</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Gun</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, model</span>):</span><br><span class="line">        self.model = model</span><br><span class="line">        self.bullet_count = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">add_bullet</span>(<span class="params">self, count</span>):</span><br><span class="line">        self.bullet_count += count</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">shoot</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.bullet_count &lt;= <span class="number">0</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%s] 没有子弹了...&#x27;</span> % self.model)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        self.bullet_count -= <span class="number">1</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;[%s] 突突突... [剩余子弹 %d]&#x27;</span> % (self.model, self.bullet_count))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Soldier</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        <span class="comment"># 新兵没有枪</span></span><br><span class="line">        self.gun = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="string">&#x27;&#x27;&#x27;</span></span><br><span class="line"><span class="string">    is 和 == 的区别:</span></span><br><span class="line"><span class="string">    is 用于判断 两个变量 引用对象是否为同一个</span></span><br><span class="line"><span class="string">    == 用于判断 引用变量的值 是否相等</span></span><br><span class="line"><span class="string">    &#x27;&#x27;&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">fire</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> self.gun <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;[%s] 还没有枪...&#x27;</span> % self.name)</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="keyword">if</span> self.gun.bullet_count &lt;= <span class="number">0</span>:</span><br><span class="line">            self.gun.add_bullet(<span class="number">50</span>)</span><br><span class="line">            <span class="built_in">print</span>(<span class="string">&#x27;%s 装弹完毕,即将开火!&#x27;</span> % self.name)</span><br><span class="line">        self.gun.shoot()</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__str__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&#x27;I am a soldier named %s.&#x27;</span> % self.name</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    ak47 = Gun(<span class="string">&#x27;AK47&#x27;</span>)</span><br><span class="line">    jack = Soldier(<span class="string">&#x27;Jack&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(jack)</span><br><span class="line">    jack.gun = ak47</span><br><span class="line">    jack.fire()</span><br><span class="line">    jack.fire()</span><br><span class="line">    jack.fire()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="4-私有属性和私有方法"><a href="#4-私有属性和私有方法" class="headerlink" title="4.私有属性和私有方法"></a>4.私有属性和私有方法</h4><p>在定义属性或方法时，在属性名或者方法名前增加两个下划线，定义的就是私有属性或方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Women</span>:</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        self.__age = <span class="number">18</span>  <span class="comment"># 私有属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">secret</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 的年龄是 %d&#x27;</span> % (self.name, self.__age))</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    mary = Women(<span class="string">&#x27;Mary&#x27;</span>)</span><br><span class="line">    mary.secret()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果想在外部访问类的私有属性，在属性名前面加上 __类名 即可，Python并没有真正意义上的私有</p><h4 id="5-继承"><a href="#5-继承" class="headerlink" title="5.继承"></a>5.继承</h4><ol><li>单继承</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        self.__name = <span class="string">&#x27;person&#x27;</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__del__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;hello&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">move</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;run&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__siyou</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;父类的私有方法&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">gongyou</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在父类中调用私有属性和方法&#x27;</span>)</span><br><span class="line">        <span class="built_in">print</span>(self.__name)</span><br><span class="line">        self.__siyou()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span>(<span class="title class_ inherited__">Person</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">speak</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">super</span>().speak()  <span class="comment"># 调用父类方法</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;I am a student.&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">task</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;do homework&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">test</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;在子类中调用父类的公有方法,进一步间接调用父类的私有方法&#x27;</span>)</span><br><span class="line">        <span class="built_in">super</span>().gongyou()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    jack = Student()</span><br><span class="line">    jack.speak()</span><br><span class="line">    jack.move()</span><br><span class="line">    jack.task()</span><br><span class="line">    jack.test()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ol start="2"><li>多继承</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">A</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">testA</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;test A&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">B</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">testB</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;test B&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">C</span>(A, B):</span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    oc = C()</span><br><span class="line">    oc.testA()</span><br><span class="line">    oc.testB()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>如果父类之间存在同名的属性或方法，应该尽量避免使用多继承</p><ol start="3"><li>多态</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 蹦蹦跳跳地玩耍...&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">XiaoTianDog</span>(<span class="title class_ inherited__">Dog</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 飞到天上去玩耍&#x27;</span> % self.name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">game_with_dog</span>(<span class="params">self, dog</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 和 %s 快乐地玩耍...&#x27;</span> % (self.name, dog.name))</span><br><span class="line">        dog.game()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    dog = Dog(<span class="string">&#x27;旺财&#x27;</span>)</span><br><span class="line">    xiaotian = XiaoTianDog(<span class="string">&#x27;旺财&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    p = Person(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line">    p.game_with_dog(dog)</span><br><span class="line">    p.game_with_dog(xiaotian)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ol start="4"><li>类属性和类方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        Tool.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    too11 = Tool(<span class="string">&#x27;斧头&#x27;</span>)</span><br><span class="line">    too12 = Tool(<span class="string">&#x27;锤子&#x27;</span>)</span><br><span class="line">    too13 = Tool(<span class="string">&#x27;水桶&#x27;</span>)</span><br><span class="line">    <span class="built_in">print</span>(Tool.count)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ol start="5"><li>类方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    count = <span class="number">0</span>  <span class="comment"># 类属性</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 类方法</span></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_tool_count</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(Tool.count)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, name</span>):</span><br><span class="line">        self.name = name</span><br><span class="line">        Tool.count += <span class="number">1</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    too11 = Tool(<span class="string">&#x27;斧头&#x27;</span>)</span><br><span class="line">    too12 = Tool(<span class="string">&#x27;锤子&#x27;</span>)</span><br><span class="line">    too13 = Tool(<span class="string">&#x27;水桶&#x27;</span>)</span><br><span class="line">    Tool.show_tool_count()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ol start="6"><li>静态方法</li></ol><p>如果某个方法既不访问类属性，也不访问实例属性，可以将其设为静态方法</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Dog</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line"><span class="meta">    @staticmethod  </span><span class="comment"># 静态方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">run</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;小狗要跑&#x27;</span>)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Dog.run()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">Game</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    top_score = <span class="number">0</span></span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self, player_name</span>):</span><br><span class="line">        self.player_name = player_name</span><br><span class="line"></span><br><span class="line"><span class="meta">    @staticmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_help</span>():</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;帮助信息:让僵尸进入大门&#x27;</span>)</span><br><span class="line"></span><br><span class="line"><span class="meta">    @classmethod</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">show_top_score</span>(<span class="params">cls</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;历史记录: %d&#x27;</span> % Game.top_score)</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">start_game</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;%s 开始游戏...&#x27;</span> % self.player_name)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    Game.show_help()</span><br><span class="line">    Game.show_top_score()</span><br><span class="line">    game = Game(<span class="string">&#x27;小明&#x27;</span>)</span><br><span class="line">    game.start_game()</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><ol start="7"><li>重写 <strong>new</strong> 方法</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MusicPlayer</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;播放器初始化&#x27;</span>)</span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写new方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="comment"># 1.创建对象时,new方法会被自动调用</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;创建对象 分配空间&#x27;</span>)</span><br><span class="line">        <span class="comment"># 2.为对象分配空间</span></span><br><span class="line">        instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="comment"># 3.返回对象的引用</span></span><br><span class="line">        <span class="keyword">return</span> instance</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    player = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h4 id="6-单例设计模式-设计-一个单例类"><a href="#6-单例设计模式-设计-一个单例类" class="headerlink" title="6.单例设计模式 设计 一个单例类"></a>6.单例设计模式 设计 一个单例类</h4><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">class</span> <span class="title class_">MusicPlayer</span>(<span class="title class_ inherited__">object</span>):</span><br><span class="line">    <span class="comment"># 记录第一个被创建对象的引用</span></span><br><span class="line">    instance = <span class="literal">None</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 记录是否执行过初始化动作</span></span><br><span class="line">    init_flag = <span class="literal">False</span></span><br><span class="line"></span><br><span class="line">    <span class="comment"># 重写new方法</span></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__new__</span>(<span class="params">cls, *args, **kwargs</span>):</span><br><span class="line">        <span class="comment"># 1.判断类属性是否是空对象</span></span><br><span class="line">        <span class="keyword">if</span> cls.instance <span class="keyword">is</span> <span class="literal">None</span>:</span><br><span class="line">            <span class="comment"># 2.调用父类的方法为第一个对象分配空间</span></span><br><span class="line">            cls.instance = <span class="built_in">super</span>().__new__(cls)</span><br><span class="line">        <span class="comment"># 3.返回类属性保存的第一个对象的引用</span></span><br><span class="line">        <span class="keyword">return</span> cls.instance</span><br><span class="line"></span><br><span class="line">    <span class="keyword">def</span> <span class="title function_">__init__</span>(<span class="params">self</span>):</span><br><span class="line">        <span class="keyword">if</span> MusicPlayer.init_flag:</span><br><span class="line">            <span class="keyword">return</span></span><br><span class="line">        <span class="built_in">print</span>(<span class="string">&#x27;初始化播放器&#x27;</span>)</span><br><span class="line">        MusicPlayer.init_flag = <span class="literal">True</span></span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    player1 = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player1)</span><br><span class="line">    player2 = MusicPlayer()</span><br><span class="line">    <span class="built_in">print</span>(player2)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><br/><h2 id="二、Python的33个保留字"><a href="#二、Python的33个保留字" class="headerlink" title="二、Python的33个保留字"></a>二、Python的33个保留字</h2><table><thead><tr><th align="left"><strong>and</strong></th><th align="left"><strong>elif</strong></th><th align="left"><strong>import</strong></th><th align="left"><strong>raise</strong></th><th align="left"><strong>global</strong></th></tr></thead><tbody><tr><td align="left"><strong>as</strong></td><td align="left"><strong>else</strong></td><td align="left"><strong>in</strong></td><td align="left"><strong>return</strong></td><td align="left"><strong>nonlocal</strong></td></tr><tr><td align="left"><strong>assert</strong></td><td align="left"><strong>except</strong></td><td align="left"><strong>is</strong></td><td align="left"><strong>try</strong></td><td align="left"><strong>True</strong></td></tr><tr><td align="left"><strong>break</strong></td><td align="left"><strong>finally</strong></td><td align="left"><strong>lambda</strong></td><td align="left"><strong>while</strong></td><td align="left"><strong>False</strong></td></tr><tr><td align="left"><strong>class</strong></td><td align="left"><strong>for</strong></td><td align="left"><strong>not</strong></td><td align="left"><strong>with</strong></td><td align="left"><strong>None</strong></td></tr><tr><td align="left"><strong>continue</strong></td><td align="left"><strong>from</strong></td><td align="left"><strong>or</strong></td><td align="left"><strong>yield</strong></td><td align="left"></td></tr><tr><td align="left"><strong>def</strong></td><td align="left"><strong>if</strong></td><td align="left"><strong>pass</strong></td><td align="left"><strong>del</strong></td><td align="left"></td></tr></tbody></table><br/><h2 id="三、Python语句结构"><a href="#三、Python语句结构" class="headerlink" title="三、Python语句结构"></a>三、Python语句结构</h2><h3 id="（一）选择结构"><a href="#（一）选择结构" class="headerlink" title="（一）选择结构"></a>（一）选择结构</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="built_in">int</span>(<span class="built_in">input</span>())</span><br><span class="line"><span class="keyword">if</span> n &lt; <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;-&#x27;</span>)</span><br><span class="line"><span class="keyword">elif</span> n == <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="number">0</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;+&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="（二）for循环结构"><a href="#（二）for循环结构" class="headerlink" title="（二）for循环结构"></a>（二）for循环结构</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">10</span></span><br><span class="line">s = <span class="string">&#x27;abcdefghijk&#x27;</span></span><br><span class="line"><span class="keyword">for</span> i <span class="keyword">in</span> <span class="built_in">range</span>(<span class="number">0</span>, n):</span><br><span class="line">    <span class="built_in">print</span>(i, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> s:</span><br><span class="line">    <span class="built_in">print</span>(c, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h3 id="（三）while循环结构"><a href="#（三）while循环结构" class="headerlink" title="（三）while循环结构"></a>（三）while循环结构</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">n = <span class="number">10</span></span><br><span class="line"><span class="keyword">while</span> n &gt;= <span class="number">0</span>:</span><br><span class="line">    <span class="built_in">print</span>(n)</span><br><span class="line">    n -= <span class="number">1</span></span><br></pre></td></tr></table></figure><h3 id="（四）continue和break"><a href="#（四）continue和break" class="headerlink" title="（四）continue和break"></a>（四）continue和break</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">        <span class="keyword">continue</span></span><br><span class="line">    <span class="built_in">print</span>(c, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;t&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(c, end=<span class="string">&#x27;&#x27;</span>)</span><br><span class="line"><span class="built_in">print</span>()</span><br></pre></td></tr></table></figure><h3 id="（五）循环的扩展"><a href="#（五）循环的扩展" class="headerlink" title="（五）循环的扩展"></a>（五）循环的扩展</h3><ul><li><p>当循环没有被break语句退出时，执行else语句块</p></li><li><p>else语句块作为“正常”完成循环的奖励</p></li></ul><p>这里else的用法与异常处理中的else用法相似</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">for</span> c <span class="keyword">in</span> <span class="string">&#x27;python&#x27;</span>:</span><br><span class="line">    <span class="keyword">if</span> c == <span class="string">&#x27;z&#x27;</span>:</span><br><span class="line">        <span class="keyword">break</span></span><br><span class="line">    <span class="built_in">print</span>(c)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;正常退出&#x27;</span>)</span><br></pre></td></tr></table></figure><h3 id="（六）异常处理"><a href="#（六）异常处理" class="headerlink" title="（六）异常处理"></a>（六）异常处理</h3><ol><li>for example:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&#x27;请输入一个整数:&#x27;</span>))</span><br><span class="line">    <span class="built_in">print</span>(num**<span class="number">2</span>)</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;输入不是整数&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="2"><li>another example:</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    num = <span class="built_in">eval</span>(<span class="built_in">input</span>(<span class="string">&#x27;input an integer:&#x27;</span>))</span><br><span class="line"><span class="keyword">except</span> NameError:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;is not integer&#x27;</span>)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;is integer&#x27;</span>)</span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;whatever&#x27;</span>)</span><br></pre></td></tr></table></figure><ol start="3"><li>异常捕获的完整语法结构</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">try</span>:</span><br><span class="line">    <span class="comment"># 尝试执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> 错误类型<span class="number">1</span>:</span><br><span class="line">    <span class="comment"># 针对错误类型1,对应的处理代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> 错误类型<span class="number">2</span>:</span><br><span class="line">    <span class="comment"># 针对错误类型2,对应的处理代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> (错误类型<span class="number">3</span>, 错误类型<span class="number">4</span>):</span><br><span class="line">    <span class="comment"># 针对错误类型3和错误类型4,对应的处理代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">    <span class="comment"># 打印错误信息</span></span><br><span class="line">    <span class="built_in">print</span>(result)</span><br><span class="line"><span class="keyword">else</span>:</span><br><span class="line">    <span class="comment"># 没有异常才会执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br><span class="line"><span class="keyword">finally</span>:</span><br><span class="line">    <span class="comment">#无论是否有异常,都会执行的代码</span></span><br><span class="line">    <span class="keyword">pass</span></span><br></pre></td></tr></table></figure><ol start="4"><li>主动抛出异常</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">def</span> <span class="title function_">input_password</span>():</span><br><span class="line">    pwd = <span class="built_in">input</span>(<span class="string">&#x27;请输入密码:&#x27;</span>)</span><br><span class="line">    <span class="keyword">if</span> <span class="built_in">len</span>(pwd) &gt;= <span class="number">8</span>:</span><br><span class="line">        <span class="keyword">return</span> pwd</span><br><span class="line">    <span class="built_in">print</span>(<span class="string">&#x27;主动抛出异常&#x27;</span>)</span><br><span class="line">    ex = Exception(<span class="string">&#x27;密码长度不够&#x27;</span>)</span><br><span class="line">    <span class="keyword">raise</span> ex</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">def</span> <span class="title function_">main</span>():</span><br><span class="line">    <span class="keyword">try</span>:</span><br><span class="line">        <span class="built_in">print</span>(input_password())</span><br><span class="line">    <span class="keyword">except</span> Exception <span class="keyword">as</span> result:</span><br><span class="line">        <span class="built_in">print</span>(result)</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> __name__ == <span class="string">&#x27;__main__&#x27;</span>:</span><br><span class="line">    main()</span><br></pre></td></tr></table></figure><h3 id="（七）Python程序打包"><a href="#（七）Python程序打包" class="headerlink" title="（七）Python程序打包"></a>（七）Python程序打包</h3><p>通过pyinstaller库可以将py文件打包成可独立执行的exe程序</p><p>相关操作命令：</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">pyinstaller -F &lt;程序.py&gt; <span class="comment"># 打包</span></span><br><span class="line">pyinstaller -i &lt;图标.ico&gt; -F &lt;程序.py&gt; <span class="comment"># 设置图标并打包</span></span><br></pre></td></tr></table></figure><br/><h2 id="四、Python引入库的三种方法"><a href="#四、Python引入库的三种方法" class="headerlink" title="四、Python引入库的三种方法"></a>四、Python引入库的三种方法</h2><h3 id="（一）使用函数时加库名"><a href="#（一）使用函数时加库名" class="headerlink" title="（一）使用函数时加库名"></a>（一）使用函数时加库名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle</span><br><span class="line">turtle.goto(<span class="number">100</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="（二）使用函数时不用加库名"><a href="#（二）使用函数时不用加库名" class="headerlink" title="（二）使用函数时不用加库名"></a>（二）使用函数时不用加库名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> turtle <span class="keyword">import</span> *</span><br><span class="line">goto(<span class="number">100</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><h3 id="（三）给库起别名"><a href="#（三）给库起别名" class="headerlink" title="（三）给库起别名"></a>（三）给库起别名</h3><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> turtle <span class="keyword">as</span> t</span><br><span class="line">t.goto(<span class="number">100</span>, <span class="number">100</span>)</span><br></pre></td></tr></table></figure><br/><h2 id="五、文件"><a href="#五、文件" class="headerlink" title="五、文件"></a>五、文件</h2><h3 id="（一）文件的打开模式"><a href="#（一）文件的打开模式" class="headerlink" title="（一）文件的打开模式"></a>（一）文件的打开模式</h3><table><thead><tr><th>文件的打开模式</th><th>描述</th></tr></thead><tbody><tr><td>‘r’</td><td>只读模式，默认值，如果文件不存在，返回FileNotFound</td></tr><tr><td>‘w’</td><td>覆盖写模式，文件不存在则创建，存在则完全覆盖</td></tr><tr><td>‘x’</td><td>创建写模式，文件不存在则创建，存在则返回FileExistsError</td></tr><tr><td>‘a’</td><td>追加写模式，文件不存在则创建，存在则在文件最后追加内容</td></tr><tr><td>‘b’</td><td>二进制文件模式</td></tr><tr><td>‘t’</td><td>文本文件模式，默认值</td></tr><tr><td>‘+’</td><td>与 r &#x2F; w &#x2F; x &#x2F; a 一同使用，在原功能基础上增加同时读写功能</td></tr></tbody></table><h3 id="（二）文件内容的读取"><a href="#（二）文件内容的读取" class="headerlink" title="（二）文件内容的读取"></a>（二）文件内容的读取</h3><table><thead><tr><th>操作方法</th><th>描述</th></tr></thead><tbody><tr><td>f.read(size &#x3D; -1)</td><td>读入全部内容，如果给出参数，读入前size长度<br />&gt;&gt;&gt;s &#x3D; f.read(2)<br />中国</td></tr><tr><td>f.readline(size &#x3D; -1)</td><td>读入一行内容，如果给出参数，读入该行前size长度<br />&gt;&gt;&gt;s &#x3D; f.readline()<br />中国是一个伟大的国家！</td></tr><tr><td>f.readlines(hint &#x3D; -1)</td><td>读入文件所有行，以每行为元素形成列表<br />如果给出参数，读入前 hint 行<br />[‘中国是一个伟大的国家！’]</td></tr></tbody></table><h3 id="（三）文件的写入"><a href="#（三）文件的写入" class="headerlink" title="（三）文件的写入"></a>（三）文件的写入</h3><table><thead><tr><th>操作方法</th><th>描述</th></tr></thead><tbody><tr><td>f.write(s)</td><td>向文件写入一个字符串或字节流<br />&gt;&gt;&gt;f.write(“中国是一个伟大的国家！”)</td></tr><tr><td>f.writelines(lines)</td><td>将一个元素全为字符串的列表写入文件<br />&gt;&gt;&gt;ls &#x3D; [“中国”, “法国”, “美国”]<br />&gt;&gt;&gt;f.writelines(ls)<br />中国法国美国</td></tr><tr><td>f.seek(offset)</td><td>改变当前文件操作指针的位置， offset 含义如下：<br />0 - 文件开头；1 - 当前位置；2 - 文件结尾<br />&gt;&gt;&gt;f.seek(0)  # 回到文件开头</td></tr></tbody></table><br/><h2 id="六、Python常用库"><a href="#六、Python常用库" class="headerlink" title="六、Python常用库"></a>六、Python常用库</h2><h3 id="（一）jieba库"><a href="#（一）jieba库" class="headerlink" title="（一）jieba库"></a>（一）jieba库</h3><p>jieba库主要用于分词，其常用函数包括：</p><table><thead><tr><th>函数</th><th>描述</th></tr></thead><tbody><tr><td>jieba.lcut(s)</td><td>精确模式，返回一个列表类型的分词结果<br />&gt;&gt;&gt;jieba.lcut(‘中国是一个伟大的国家’)<br />[‘中国’, ‘是’, ‘一个’, ‘伟大’, ‘的’, ‘国家’]</td></tr><tr><td>jieba.lcut(s,cut_all&#x3D;True)</td><td>全模式，返回一个列表类型的分词结果，存在冗余<br />&gt;&gt;&gt;jieba.lcut(‘中国是一个伟大的国家’,cut_all&#x3D;True)<br />[‘中国’, ‘国是’, ‘一个’, ‘伟大’, ‘的’, ‘国家’]</td></tr><tr><td>jieba.lcut_for_search(s)</td><td>搜索引擎模式，返回一个列表类型的分词结果，存在冗余<br />&gt;&gt;&gt;jieba.lcut_for_search(‘中华人民共和国是伟大的’)<br />[‘中华’, ‘华人’, ‘人民’, ‘共和’, ‘共和国’, ‘中华人民共和国’, ‘是’, ‘伟大’, ‘的’]</td></tr><tr><td>jieba.add_word(w)</td><td>向分词词典增加新词<br />&gt;&gt;&gt;jieba.add_word(‘蟒蛇语言’)</td></tr></tbody></table><h3 id="（二）wordcloud库"><a href="#（二）wordcloud库" class="headerlink" title="（二）wordcloud库"></a>（二）wordcloud库</h3><p>w &#x3D; wordcloud.WordCloud()</p><table><thead><tr><th>方法</th><th>描述</th></tr></thead><tbody><tr><td>w.generate(txt)</td><td>向WordCloud对象 w 中加载文本txt<br />&gt;&gt;&gt;w.generate(“Python and WordCloud”)</td></tr><tr><td>w.to_file(filename)</td><td>将词云输出为图像文件，.png或 .jpg格式<br />&gt;&gt;&gt;w.to_file(“outfile.png”)</td></tr></tbody></table><p>配置对象参数：</p><table><thead><tr><th>参数</th><th>描述</th></tr></thead><tbody><tr><td>min_font_size</td><td>指定词云中字体的最小字号，默认4号<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(min_font_size &#x3D; 10)</td></tr><tr><td>max_font_size</td><td>指定词云中字体的最大字号，根据高度自动调节<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(max_font_size &#x3D; 20)</td></tr><tr><td>font_step</td><td>指定词云中字体字号的步进间隔，默认为1<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(font_step &#x3D; 2)</td></tr><tr><td>font_path</td><td>指定字体文件的路径，默认None<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(font_path &#x3D; “myyh.ttc”)</td></tr><tr><td>max_words</td><td>指定词云显示的最大单次数量，默认200<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(max_words &#x3D; 20)</td></tr><tr><td>stop_words</td><td>指定词云的排除词列表，即不显示的单词列表<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(stop_words &#x3D; {“Python”})</td></tr><tr><td>mask</td><td>指定词云形状，默认为长方形，需要引用 imread() 函数<br />&gt;&gt;&gt;from scipy.misc import imread<br />&gt;&gt;&gt;mk &#x3D; imread(“pic.png”)<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(mask &#x3D; mk)</td></tr><tr><td>background_color</td><td>指定词云图片的背景颜色，默认为黑色<br />&gt;&gt;&gt;w &#x3D; wordcloud.WordCloud(background_color &#x3D; “white”)</td></tr></tbody></table><h3 id="（三）机器学习相关的库"><a href="#（三）机器学习相关的库" class="headerlink" title="（三）机器学习相关的库"></a>（三）机器学习相关的库</h3><ol><li>Scikit-learn 库、TensorFlow库</li></ol><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> tensorflow <span class="keyword">as</span> tf</span><br><span class="line">init = tf.global_variables_initializer()</span><br><span class="line">sess = tf.Session()</span><br><span class="line">sess.run(init)</span><br><span class="line">res = sess.run(result)</span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;result:&#x27;</span>, res)</span><br></pre></td></tr></table></figure><ol start="2"><li>MXNet：基于神经网络的深度学习计算框架</li></ol><ul><li><p>提供可扩展的神经网络及深度学习计算功能</p></li><li><p>可用于自动驾驶、机器翻译、语音识别等众多领域</p></li></ul><h3 id="（四）网络爬虫相关的库"><a href="#（四）网络爬虫相关的库" class="headerlink" title="（四）网络爬虫相关的库"></a>（四）网络爬虫相关的库</h3><p>可以使用 request 库、Scrapy 库、pyspider 库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> requests</span><br><span class="line">r = requests.get(<span class="string">&#x27;https://api.github.com/user&#x27;</span>,auth = (<span class="string">&#x27;user&#x27;</span>,<span class="string">&#x27;pass&#x27;</span>))</span><br><span class="line">r.status_code</span><br><span class="line">r.headers[<span class="string">&#x27;content-type&#x27;</span>]</span><br><span class="line">r.encoding</span><br><span class="line">r.text</span><br></pre></td></tr></table></figure><h3 id="（五）Web信息提取"><a href="#（五）Web信息提取" class="headerlink" title="（五）Web信息提取"></a>（五）Web信息提取</h3><p>Beautiful Soup 库、Re 库（标准库）、goose3  库</p><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">from</span> goose3 <span class="keyword">import</span> Goose</span><br><span class="line"><span class="keyword">from</span> goose3.text <span class="keyword">import</span> StopWordsChinese</span><br><span class="line"><span class="comment"># 初始化，设置中文分词</span></span><br><span class="line">g = Goose(&#123;<span class="string">&#x27;stopwords_class&#x27;</span>: StopWordsChinese&#125;)</span><br><span class="line"><span class="comment"># 文章地址</span></span><br><span class="line">url = <span class="string">&#x27;https://sniperstar.github.io/2021/11/13/%E7%88%B1%E6%83%85/#more&#x27;</span></span><br><span class="line"><span class="comment"># 获取文章内容</span></span><br><span class="line">article = g.extract(url=url)</span><br><span class="line"><span class="comment"># 标题</span></span><br><span class="line"><span class="built_in">print</span>(<span class="string">&#x27;标题:&#x27;</span>, article.title)</span><br><span class="line"><span class="comment"># 显示正文</span></span><br><span class="line"><span class="built_in">print</span>(article.cleaned_text)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Python基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 编程语言 </tag>
            
            <tag> Python </tag>
            
            <tag> 数据类型 </tag>
            
            <tag> 网络爬虫 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>MySQL基础语句（一）</title>
      <link href="/2023/11/03/00025/"/>
      <url>/2023/11/03/00025/</url>
      
        <content type="html"><![CDATA[<p>本文介绍了MySQL数据库常用的基础语句，包括创建数据库、创建数据表、对数据表的内容进行增删改查等等。</p><h2 id="一、基础数据库操作"><a href="#一、基础数据库操作" class="headerlink" title="一、基础数据库操作"></a>一、基础数据库操作</h2><h4 id="1-登录数据库（注意：结尾没有分号）"><a href="#1-登录数据库（注意：结尾没有分号）" class="headerlink" title="1. 登录数据库（注意：结尾没有分号）"></a>1. 登录数据库（注意：结尾没有分号）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">mysql -uroot -p123456</span><br></pre></td></tr></table></figure><h4 id="2-创建数据库"><a href="#2-创建数据库" class="headerlink" title="2. 创建数据库"></a>2. 创建数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create database mydb;</span><br></pre></td></tr></table></figure><h4 id="3-查询数据库"><a href="#3-查询数据库" class="headerlink" title="3. 查询数据库"></a>3. 查询数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show databases;</span><br></pre></td></tr></table></figure><h4 id="4-删除数据库"><a href="#4-删除数据库" class="headerlink" title="4. 删除数据库"></a>4. 删除数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop database mydb;</span><br></pre></td></tr></table></figure><h4 id="5-选择数据库"><a href="#5-选择数据库" class="headerlink" title="5. 选择数据库"></a>5. 选择数据库</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">use mydb;</span><br></pre></td></tr></table></figure><h4 id="6-查询数据表"><a href="#6-查询数据表" class="headerlink" title="6. 查询数据表"></a>6. 查询数据表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">show tables;</span><br></pre></td></tr></table></figure><h4 id="7-创建数据表"><a href="#7-创建数据表" class="headerlink" title="7. 创建数据表"></a>7. 创建数据表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">create table student(id int,name varchar(255),age int,address varchar(255));</span><br></pre></td></tr></table></figure><h4 id="8-查询表结构"><a href="#8-查询表结构" class="headerlink" title="8. 查询表结构"></a>8. 查询表结构</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">desc student;</span><br></pre></td></tr></table></figure><h4 id="9-删除数据表"><a href="#9-删除数据表" class="headerlink" title="9. 删除数据表"></a>9. 删除数据表</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">drop table student;</span><br></pre></td></tr></table></figure><h4 id="10-数据表添加列"><a href="#10-数据表添加列" class="headerlink" title="10. 数据表添加列"></a>10. 数据表添加列</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student add height int(11);</span><br></pre></td></tr></table></figure><h4 id="11-数据表删除列"><a href="#11-数据表删除列" class="headerlink" title="11. 数据表删除列"></a>11. 数据表删除列</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student drop height;</span><br></pre></td></tr></table></figure><h4 id="12-数据列改名"><a href="#12-数据列改名" class="headerlink" title="12. 数据列改名"></a>12. 数据列改名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student change column name username varchar(255);</span><br></pre></td></tr></table></figure><h4 id="13-数据列修改数据类型"><a href="#13-数据列修改数据类型" class="headerlink" title="13. 数据列修改数据类型"></a>13. 数据列修改数据类型</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student modify column id varchar(255);</span><br></pre></td></tr></table></figure><h4 id="14-修改表名"><a href="#14-修改表名" class="headerlink" title="14. 修改表名"></a>14. 修改表名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">alter table student rename to user;</span><br></pre></td></tr></table></figure><h4 id="15-插入数据项"><a href="#15-插入数据项" class="headerlink" title="15. 插入数据项"></a>15. 插入数据项</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">insert into user(id,username,age,address) value (1,&quot;Jack&quot;,18,&quot;ChongQing&quot;);</span><br></pre></td></tr></table></figure><h4 id="16-删除数据项"><a href="#16-删除数据项" class="headerlink" title="16. 删除数据项"></a>16. 删除数据项</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">delete from user where username=&quot;Jack&quot;;</span><br></pre></td></tr></table></figure><h4 id="17-修改数据项"><a href="#17-修改数据项" class="headerlink" title="17. 修改数据项"></a>17. 修改数据项</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">update user set age = 19 where username = &quot;Tom&quot;;</span><br></pre></td></tr></table></figure><h4 id="18-查询数据表全部数据项"><a href="#18-查询数据表全部数据项" class="headerlink" title="18. 查询数据表全部数据项"></a>18. 查询数据表全部数据项</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user;</span><br></pre></td></tr></table></figure><br/><h2 id="二、逻辑运算符"><a href="#二、逻辑运算符" class="headerlink" title="二、逻辑运算符"></a>二、逻辑运算符</h2><h4 id="1-between-最小值-and-最大值"><a href="#1-between-最小值-and-最大值" class="headerlink" title="1. between 最小值 and 最大值"></a>1. between 最小值 and 最大值</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">#查询年龄在12到18之间的用户</span><br><span class="line">select * from user where age between 12 and 18;</span><br><span class="line">#也可以用&gt;和&lt;符号写</span><br><span class="line">select * from user where age&gt;=12 and age&lt;=18;</span><br></pre></td></tr></table></figure><h4 id="2-in（取值范围）"><a href="#2-in（取值范围）" class="headerlink" title="2. in（取值范围）"></a>2. in（取值范围）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">select * from user where age in(11,19);</span><br></pre></td></tr></table></figure><h4 id="3-like（通配符）"><a href="#3-like（通配符）" class="headerlink" title="3. like（通配符）"></a>3. like（通配符）</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询用户名为L开头的用户</span><br><span class="line">select * from user where username like &quot;L%&quot;;</span><br></pre></td></tr></table></figure><h4 id="4-as-为表名称或者列名称指定别名"><a href="#4-as-为表名称或者列名称指定别名" class="headerlink" title="4. as 为表名称或者列名称指定别名"></a>4. as 为表名称或者列名称指定别名</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询地址为BeiJing的用户的用户名 且将其username字段名指定别名为name</span><br><span class="line">select username as name from user where address=&quot;BeiJing&quot;;</span><br></pre></td></tr></table></figure><h4 id="5-null"><a href="#5-null" class="headerlink" title="5. null"></a>5. null</h4><figure class="highlight plaintext"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#查询address为null的用户 注意这里是is</span><br><span class="line">select * from user where address is null;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> MySQL数据库 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> MySQL </tag>
            
            <tag> 数据库 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用的Java与MySQL数据类型对照表</title>
      <link href="/2023/11/02/00024/"/>
      <url>/2023/11/02/00024/</url>
      
        <content type="html"><![CDATA[<p>本文整理了在Java开发中常用的数据类型与MySQL中的数据类型的对应关系。</p><h3 id="对照表："><a href="#对照表：" class="headerlink" title="对照表："></a>对照表：</h3><table><thead><tr><th>所属类</th><th>Java数据类型</th><th>MySQL数据类型</th></tr></thead><tbody><tr><td>java.lang.Byte</td><td>byte</td><td>TINYINT</td></tr><tr><td>java.lang.Short</td><td>short</td><td>SMALLINT</td></tr><tr><td>java.lang.Integer</td><td>Integer(int)</td><td>INT</td></tr><tr><td>java.lang.Long</td><td>Long(long)</td><td>BIGINT</td></tr><tr><td>java.lang.Float</td><td>Float(float)</td><td>FLOAT</td></tr><tr><td>java.lang.Double</td><td>Double(double)</td><td>DOUBLE</td></tr><tr><td>java.lang.BigDecimal</td><td>BigDecimal</td><td>DECIMAL</td></tr><tr><td>java.lang.Boolean</td><td>Boolean(boolean)</td><td>TINYINT(1)</td></tr><tr><td>java.uitl.Date</td><td>Date</td><td>DATE</td></tr><tr><td>java.sql.Time</td><td>Time</td><td>TIME</td></tr><tr><td>java.sql.Timestamp</td><td>Timestamp</td><td>TIMESTAMP</td></tr><tr><td>java.uitl.Calendar</td><td>Calendar</td><td>TIMESTAMP</td></tr><tr><td>java.sql.Blob</td><td>Blob</td><td>BLOB</td></tr><tr><td>java.time.LocalDate</td><td>LocalDate</td><td>DATE</td></tr><tr><td>java.time.LocalTime</td><td>LocalTime</td><td>TIME</td></tr><tr><td>java.time.LocalDateTime</td><td>LocalDateTime</td><td>LOCALDATETIME</td></tr><tr><td>java.lang.String</td><td>String</td><td>VARCHAR</td></tr><tr><td>java.lang.String</td><td>String</td><td>CHAR</td></tr><tr><td>java.lang.String</td><td>String</td><td>TINYTEXT</td></tr><tr><td>java.lang.String</td><td>String</td><td>MEDIUMTEXT</td></tr><tr><td>java.lang.String</td><td>String</td><td>TEXT</td></tr><tr><td>java.lang.String</td><td>String</td><td>LONGTEXT</td></tr><tr><td>java.io.Serializable</td><td>Serializable</td><td>VARBINARY&#x2F;BLOB</td></tr></tbody></table><p>MySQL中存储较长的论文时可以使用LONGTEXT类型，对应Java的String类；存储图片、音乐时可以使用TINYBLOB、BLOB、MEDIUMBLOB、LONGBLOB等二进制类型。</p>]]></content>
      
      
      <categories>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> MySQL </tag>
            
            <tag> 数据类型 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java集合</title>
      <link href="/2023/10/26/00023/"/>
      <url>/2023/10/26/00023/</url>
      
        <content type="html"><![CDATA[<p>本文介绍了ArrayList类、LinkedList类、HashSet类、TreeSet类、HashMap类、Collection工具类常用的成员方法。</p><h2 id="ArrayList类："><a href="#ArrayList类：" class="headerlink" title="ArrayList类："></a>ArrayList类：</h2><ol><li>集合是一种存储空间可变的存储模型，存储的数据容量可以发生改变。</li><li>ArrayList集合的底层是数组实现的。</li><li>ArrayList的长度可以变化。</li></ol><h3 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h3><table><thead><tr><th>方法名</th><th>说明</th></tr></thead><tbody><tr><td>public boolean remove(Object o)</td><td>删除指定的元素，返回删除是否成功</td></tr><tr><td>public E remove(int index)</td><td>删除指定索引处的元素，返回被删除的元素</td></tr><tr><td>public E set(int index,E element)</td><td>修改指定索引处的元素，返回被修改的元素</td></tr><tr><td>public E get(int index)</td><td>返回指定索引处的元素</td></tr><tr><td>public int size()</td><td>返回集合中的元素的个数</td></tr><tr><td>public boolean add(E e)</td><td>将指定的元素追加到此集合的末尾</td></tr><tr><td>public void add(int index,E element)</td><td>在此集合中的指定位置插入指定的元素</td></tr></tbody></table><h3 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.ArrayList;</span><br><span class="line"><span class="keyword">import</span> java.util.Collections;</span><br><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">ArrayListDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// List&lt;String&gt; list = new ArrayList&lt;&gt;(); 泛型</span></span><br><span class="line">        <span class="comment">// ArrayList arrayList1 = new ArrayList&lt;&gt;(); 可以添加不同类型元素</span></span><br><span class="line">        ArrayList&lt;String&gt; arrayList = <span class="keyword">new</span> <span class="title class_">ArrayList</span>&lt;&gt;();</span><br><span class="line">        arrayList.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        arrayList.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        arrayList.add(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">        arrayList.add(<span class="string">&quot;Mike&quot;</span>);</span><br><span class="line">        arrayList.add(<span class="string">&quot;aabyte&quot;</span>);</span><br><span class="line">        System.out.println(arrayList); <span class="comment">// [Tom, Lucy, Jack, Mike, aabyte]</span></span><br><span class="line">        <span class="comment">// public boolean remove(Object o)：删除指定的元素，返回删除是否成功</span></span><br><span class="line">        System.out.println(arrayList.remove(<span class="string">&quot;Lucy&quot;</span>)); <span class="comment">// true</span></span><br><span class="line">        System.out.println(arrayList); <span class="comment">// [Tom, Jack, Mike, aabyte]</span></span><br><span class="line">        <span class="comment">// public E remove(int index)：删除指定索引处的元素，返回被删除的元素</span></span><br><span class="line">        System.out.println(arrayList.remove(<span class="number">2</span>)); <span class="comment">// Mike</span></span><br><span class="line">        System.out.println(arrayList); <span class="comment">// [Tom, Jack, aabyte]</span></span><br><span class="line">        <span class="comment">// public E set(int index,E element)：修改指定索引处的元素，返回被修改的元素</span></span><br><span class="line">        System.out.println(arrayList.set(<span class="number">2</span>,<span class="string">&quot;AaByte&quot;</span>)); <span class="comment">// aabyte</span></span><br><span class="line">        System.out.println(arrayList); <span class="comment">// [Tom, Jack, AaByte]</span></span><br><span class="line">        <span class="comment">// public E get(int index)：返回指定索引处的元素</span></span><br><span class="line">        System.out.println(arrayList.get(<span class="number">1</span>)); <span class="comment">// Jack</span></span><br><span class="line">        <span class="comment">// 排序</span></span><br><span class="line">        Collections.sort(arrayList); <span class="comment">//自然排序规则 从小到大排序</span></span><br><span class="line">        arrayList.forEach(System.out::println);</span><br><span class="line">        <span class="comment">// 自定义排序规则</span></span><br><span class="line">        Collections.sort(arrayList, <span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(String o1, String o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o1.compareTo(o2);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">//简写为lambda表达式</span></span><br><span class="line">        Collections.sort(arrayList, String::compareTo);</span><br><span class="line">        <span class="comment">// 遍历集合的3种方式</span></span><br><span class="line">        <span class="comment">// 1.普通遍历</span></span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; arrayList.size(); ++i)&#123;</span><br><span class="line">            System.out.println(arrayList.get(i));</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 2.增强for遍历</span></span><br><span class="line">        <span class="keyword">for</span>(String s : arrayList)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">// 3.迭代器遍历</span></span><br><span class="line">        Iterator&lt;String&gt; iterator = arrayList.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            <span class="type">String</span> <span class="variable">str</span> <span class="operator">=</span> iterator.next();</span><br><span class="line">            System.out.println(str);</span><br><span class="line">            iterator.remove(); <span class="comment">// 遍历的同时删除</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Vector和ArrayList的成员方法类似，不同之处在于：Vector线程安全、ArrayList非线程安全，但ArrayList性能更佳，所以单线程情况下推荐使用ArrayList。</p><br/><h2 id="LinkedList类："><a href="#LinkedList类：" class="headerlink" title="LinkedList类："></a>LinkedList类：</h2><p>LinkedList底层由双向链表实现，增删效率比ArrayList高，改查效率不及ArrayList。</p><h3 id="代码演示：-1"><a href="#代码演示：-1" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"><span class="keyword">import</span> java.util.LinkedList;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">LinkedListDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        LinkedList&lt;String&gt; linkedList = <span class="keyword">new</span> <span class="title class_">LinkedList</span>&lt;&gt;();</span><br><span class="line">        linkedList.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        linkedList.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        linkedList.add(<span class="string">&quot;Mike&quot;</span>);</span><br><span class="line">        linkedList.add(<span class="string">&quot;Jane&quot;</span>);</span><br><span class="line">        linkedList.add(<span class="string">&quot;aabyte&quot;</span>);</span><br><span class="line"></span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line">        <span class="comment">//默认删除第一个</span></span><br><span class="line">        System.out.println(linkedList.remove());</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line">        <span class="comment">//删除指定元素</span></span><br><span class="line">        System.out.println(linkedList.remove(<span class="string">&quot;aabyte&quot;</span>)); <span class="comment">// true</span></span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        linkedList.set(<span class="number">1</span>,<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">        System.out.println(linkedList);</span><br><span class="line">        <span class="comment">//查询</span></span><br><span class="line">        System.out.println(linkedList.get(<span class="number">1</span>));</span><br><span class="line">        <span class="comment">//遍历 增强for</span></span><br><span class="line">        <span class="keyword">for</span> (String s : linkedList) &#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历 迭代器</span></span><br><span class="line">        Iterator&lt;String&gt; iterator= linkedList.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="HashSet类："><a href="#HashSet类：" class="headerlink" title="HashSet类："></a>HashSet类：</h2><h3 id="代码演示：-2"><a href="#代码演示：-2" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashSet;</span><br><span class="line"><span class="keyword">import</span> java.util.Iterator;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">SetDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//Set&lt;String&gt; set = new HashSet&lt;&gt;();</span></span><br><span class="line">        HashSet&lt;String&gt; hashSet = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        hashSet.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;Jane&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;Mike&quot;</span>);</span><br><span class="line">        hashSet.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        System.out.println(hashSet); <span class="comment">// [Tom, Lucy, Jane] 不能存放重复元素</span></span><br><span class="line">        hashSet.remove(<span class="string">&quot;Jane&quot;</span>);</span><br><span class="line">        <span class="comment">//增强for遍历</span></span><br><span class="line">        <span class="keyword">for</span>(String s : hashSet)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//迭代器遍历</span></span><br><span class="line">        Iterator&lt;String&gt; iterator = hashSet.iterator();</span><br><span class="line">        <span class="keyword">while</span>(iterator.hasNext())&#123;</span><br><span class="line">            System.out.println(iterator.next());</span><br><span class="line">        &#125;</span><br><span class="line">        HashSet&lt;String&gt; hashSet1 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        hashSet1.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        hashSet1.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        hashSet1.add(<span class="string">&quot;Java&quot;</span>);</span><br><span class="line">        hashSet1.add(<span class="string">&quot;Python&quot;</span>);</span><br><span class="line"></span><br><span class="line">        hashSet.addAll(hashSet1); <span class="comment">//并集</span></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">        hashSet.removeAll(hashSet1); <span class="comment">//差集</span></span><br><span class="line">        System.out.println(hashSet);</span><br><span class="line">        HashSet&lt;String&gt; hashSet2 = <span class="keyword">new</span> <span class="title class_">HashSet</span>&lt;&gt;();</span><br><span class="line">        hashSet2.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        hashSet2.add(<span class="string">&quot;Mike&quot;</span>);</span><br><span class="line">        hashSet2.retainAll(hashSet); <span class="comment">//交集</span></span><br><span class="line">        System.out.println(hashSet2);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="TreeSet类："><a href="#TreeSet类：" class="headerlink" title="TreeSet类："></a>TreeSet类：</h2><p>其构造器可以传入比较器，所以TreeSet常用来排序。</p><h3 id="代码演示：-3"><a href="#代码演示：-3" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.Comparator;</span><br><span class="line"><span class="keyword">import</span> java.util.TreeSet;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">TreeSetDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        TreeSet&lt;String&gt; treeSet = <span class="keyword">new</span> <span class="title class_">TreeSet</span>&lt;&gt;();</span><br><span class="line">        treeSet.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;aabyte&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Jane&quot;</span>);</span><br><span class="line">        System.out.println(treeSet); <span class="comment">//默认排序 字典序 [Jack, Jane, Lucy, Tom, aabyte]</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">//降序</span></span><br><span class="line">        treeSet = <span class="keyword">new</span> <span class="title class_">TreeSet</span>&lt;&gt;(<span class="keyword">new</span> <span class="title class_">Comparator</span>&lt;String&gt;() &#123;</span><br><span class="line">            <span class="meta">@Override</span></span><br><span class="line">            <span class="keyword">public</span> <span class="type">int</span> <span class="title function_">compare</span><span class="params">(String o1, String o2)</span> &#123;</span><br><span class="line">                <span class="keyword">return</span> o2.compareTo(o1);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;);</span><br><span class="line">        <span class="comment">// treeSet = new TreeSet&lt;&gt;(Comparator.reverseOrder()); lambda等价写法</span></span><br><span class="line">        treeSet.add(<span class="string">&quot;Tom&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Jack&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;aabyte&quot;</span>);</span><br><span class="line">        treeSet.add(<span class="string">&quot;Jane&quot;</span>);</span><br><span class="line">        System.out.println(treeSet); <span class="comment">// [aabyte, Tom, Lucy, Jane, Jack]</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="HashMap类："><a href="#HashMap类：" class="headerlink" title="HashMap类："></a>HashMap类：</h2><p>双列集合，以键值对的形式存储，key不可重复，value可重复。</p><h3 id="代码演示：-4"><a href="#代码演示：-4" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.util.HashMap;</span><br><span class="line"><span class="keyword">import</span> java.util.Hashtable;</span><br><span class="line"><span class="keyword">import</span> java.util.Map;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">CollentionDemo3</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//以键值对的形式存储 key value  key不可重复</span></span><br><span class="line">        HashMap&lt;String, String&gt; hashMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;(); <span class="comment">//非线程安全</span></span><br><span class="line">        Hashtable&lt;String, Integer&gt; hashtable= <span class="keyword">new</span> <span class="title class_">Hashtable</span>&lt;&gt;(); <span class="comment">//线程安全</span></span><br><span class="line">        Map&lt;Integer,Student&gt; studentMap = <span class="keyword">new</span> <span class="title class_">HashMap</span>&lt;&gt;();</span><br><span class="line">        studentMap.put(<span class="number">1</span>, <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Jack&quot;</span>,<span class="string">&quot;2011050721&quot;</span>));</span><br><span class="line">        studentMap.put(<span class="number">2</span>, <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;2011050722&quot;</span>));</span><br><span class="line">        studentMap.put(<span class="number">3</span>, <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Jerry&quot;</span>,<span class="string">&quot;2011050723&quot;</span>));</span><br><span class="line">        studentMap.put(<span class="number">4</span>, <span class="keyword">new</span> <span class="title class_">Student</span>(<span class="string">&quot;Lucy&quot;</span>,<span class="string">&quot;2011050724&quot;</span>));</span><br><span class="line">        System.out.println(studentMap.size());</span><br><span class="line">        <span class="keyword">for</span>(Integer key: studentMap.keySet())&#123;</span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> studentMap.get(key);</span><br><span class="line">            System.out.println(s.getName());</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//遍历</span></span><br><span class="line">        <span class="keyword">for</span>(Map.Entry&lt;Integer,Student&gt; entry:studentMap.entrySet())&#123;</span><br><span class="line">            <span class="type">Integer</span> <span class="variable">i</span> <span class="operator">=</span> entry.getKey(); <span class="comment">//获取key</span></span><br><span class="line">            <span class="type">Student</span> <span class="variable">s</span> <span class="operator">=</span> entry.getValue(); <span class="comment">//获取value</span></span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println(studentMap.get(<span class="number">0</span>));</span><br><span class="line">        <span class="type">int</span> <span class="variable">k</span> <span class="operator">=</span> <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">if</span>(!studentMap.containsKey(<span class="number">1</span>))&#123;</span><br><span class="line">            studentMap.put(k, <span class="keyword">new</span> <span class="title class_">Student</span>());</span><br><span class="line">        &#125;</span><br><span class="line">        studentMap.remove(<span class="number">1</span>); <span class="comment">//按key删除元素</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>Student类：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Student</span> &#123;</span><br><span class="line">    String name;</span><br><span class="line">    String id;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">()</span> &#123;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="title function_">Student</span><span class="params">(String name, String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getName</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setName</span><span class="params">(String name)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.name = name;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">getId</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">void</span> <span class="title function_">setId</span><span class="params">(String id)</span> &#123;</span><br><span class="line">        <span class="built_in">this</span>.id = id;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="keyword">public</span> String <span class="title function_">toString</span><span class="params">()</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">&quot;Student&#123;&quot;</span> +</span><br><span class="line">                <span class="string">&quot;name=&#x27;&quot;</span> + name + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&quot;, id=&#x27;&quot;</span> + id + <span class="string">&#x27;\&#x27;&#x27;</span> +</span><br><span class="line">                <span class="string">&#x27;&#125;&#x27;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="Collections工具类："><a href="#Collections工具类：" class="headerlink" title="Collections工具类："></a>Collections工具类：</h2><ol><li>Collections 是一个操作 Set、List 和 Map 等集合的工具类。</li><li>Collections 中提供了一系列静态方法对集合元素进行排序、查询和修改操作。</li></ol><h3 id="排序："><a href="#排序：" class="headerlink" title="排序："></a>排序：</h3><p>均为static方法。</p><ol><li>reverse （List）：反转 List 中元素的排序；</li><li>shuffle （List） ： 对 List 集合元素进行随机排序；</li><li>sort （List） ： 根据元素的自然顺序对指定的 List 集合元素按升序排序；</li><li>sort （List，Comparator） ：根据指定的 Comparator 产生的顺序对 List 集合元素进行排序；</li><li>swap （List ，int，int） ：将指定 List 集合中的 i 处元素 和 j 处元素进行交换；</li></ol><h3 id="查找、替换："><a href="#查找、替换：" class="headerlink" title="查找、替换："></a>查找、替换：</h3><ol><li>Object max ( Collection ) ：根据元素的自然顺序，返回给定集合中的最大元素。</li><li>Object max ( Collection , Comparator ) ：根据 Comparator 指定的顺序，返回给定集合中的最大元素。</li><li>Object min ( Collection ) ：根据元素的自然顺序，返回给定集合中的最小元素。</li><li>Object min ( Collection , Comparator ) ：根据 Comparator 指定的顺序，返回给定集合中的最小元素。</li><li>int frequency ( Collection , Object ) ： 返回指定集合中指定元素的出现次数。</li><li>void copy ( List dest , List src ) ： 将 src 中的内容复制到 dest 中。</li><li>boolean replaceAll ( List list , Object oldVal , Object newVal ) ： 使用新值替换List对象的所有旧值。</li></ol>]]></content>
      
      
      <categories>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 编程语言 </tag>
            
            <tag> 集合 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java字符串</title>
      <link href="/2023/10/26/00022/"/>
      <url>/2023/10/26/00022/</url>
      
        <content type="html"><![CDATA[<p>本文介绍了String类、StringBuffer类、StringBuilder类的区别和各自的使用方法。</p><h2 id="String类："><a href="#String类：" class="headerlink" title="String类："></a>String类：</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s0</span> <span class="operator">=</span> <span class="string">&quot;hello world&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s1</span> <span class="operator">=</span> <span class="string">&quot;Hello world&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s2</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">String</span>(<span class="string">&quot;Hello world&quot;</span>);</span><br><span class="line">        System.out.println(s1.equals(s2));  <span class="comment">//true 比较内容</span></span><br><span class="line">        System.out.println(s1 == s2);  <span class="comment">//false  比较地址</span></span><br><span class="line">        System.out.println(s0.equalsIgnoreCase(s1)); <span class="comment">//忽略大小写比较</span></span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">s3</span> <span class="operator">=</span> s1 + s2; <span class="comment">//用+号拼接 性能较低</span></span><br><span class="line">        System.out.println(s3);</span><br><span class="line">        <span class="type">String</span> <span class="variable">s4</span> <span class="operator">=</span> s1.concat(s2); <span class="comment">//contact方法拼接</span></span><br><span class="line">        System.out.println(s4);</span><br><span class="line"></span><br><span class="line">        <span class="type">String</span> <span class="variable">s5</span> <span class="operator">=</span> <span class="string">&quot;aabytea&quot;</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> <span class="variable">i</span> <span class="operator">=</span> <span class="number">0</span>; i &lt; s5.length(); ++i)&#123;</span><br><span class="line">            System.out.println(s5.charAt(i)); <span class="comment">//取String的单个字符</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="type">char</span>[] arr = s5.toCharArray(); <span class="comment">//String转字符数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s6</span> <span class="operator">=</span> <span class="string">&quot;aabytec&quot;</span>;</span><br><span class="line">        System.out.println(s5.compareTo(s6)); <span class="comment">//比较字符串的字典序 s5 - s6</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s7</span> <span class="operator">=</span> <span class="string">&quot;abbccddeeffggabcd&quot;</span>;</span><br><span class="line">        <span class="comment">//str.indexOf(char ch, int fromIndex)  返回str从索引fromIndex开始 第一次出现字符ch的位置</span></span><br><span class="line">        <span class="comment">//省略fromIndex则默认从0开始</span></span><br><span class="line">        System.out.println(s7.indexOf(<span class="string">&#x27;c&#x27;</span>,<span class="number">0</span>)); <span class="comment">//4</span></span><br><span class="line">        <span class="comment">//str.indexOf(String s, int fromIndex)  返回str从索引fromIndex开始 第一次出现字符串s的位置</span></span><br><span class="line">        System.out.println(s7.indexOf(<span class="string">&quot;abcd&quot;</span>,<span class="number">0</span>)); <span class="comment">//13</span></span><br><span class="line">        System.out.println(s7.contains(<span class="string">&quot;abcd&quot;</span>)); <span class="comment">//true 是否包含字串</span></span><br><span class="line">        <span class="comment">//同理 lastIndexOf 从反向搜索</span></span><br><span class="line">        System.out.println(s7.lastIndexOf(<span class="string">&quot;dde&quot;</span>)); <span class="comment">//5</span></span><br><span class="line">        System.out.println(s7.lastIndexOf(<span class="string">&#x27;b&#x27;</span>)); <span class="comment">//14</span></span><br><span class="line">        System.out.println(s7.lastIndexOf(<span class="string">&#x27;b&#x27;</span>,<span class="number">5</span>)); <span class="comment">//2</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s8</span> <span class="operator">=</span> <span class="string">&quot;Java Php MySQL Java&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">s9</span> <span class="operator">=</span> s8.replaceAll(<span class="string">&quot;Java&quot;</span>,<span class="string">&quot;Python&quot;</span>); <span class="comment">//Python Php MySQL Python</span></span><br><span class="line">        System.out.println(s9);</span><br><span class="line">        System.out.println(s8.startsWith(<span class="string">&quot;Java&quot;</span>)); <span class="comment">//true</span></span><br><span class="line">        System.out.println(s8.endsWith(<span class="string">&quot;Java&quot;</span>));  <span class="comment">//true</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">s10</span> <span class="operator">=</span> <span class="string">&quot;abcdefghiJKLMN&quot;</span>;</span><br><span class="line">        System.out.println(s10.substring(<span class="number">2</span>,<span class="number">8</span>)); <span class="comment">//cdefgh  截取子串</span></span><br><span class="line">        System.out.println(s10.toUpperCase());  <span class="comment">//转大写 ABCDEFGHIJKLMN</span></span><br><span class="line">        System.out.println(s10.toLowerCase());  <span class="comment">//转小写 abcdefghijklmn</span></span><br><span class="line">        <span class="comment">//将字符串按照某个分隔符分割为数组</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str1</span> <span class="operator">=</span> <span class="string">&quot;Tom,Lily,Jerry,Lucy,Kyle&quot;</span>;</span><br><span class="line">        String[] strArr = str1.split(<span class="string">&quot;,&quot;</span>);</span><br><span class="line">        <span class="keyword">for</span>(String s : strArr)&#123;</span><br><span class="line">            System.out.println(s);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//替换内容</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str2</span> <span class="operator">=</span> str1.replace(<span class="string">&quot;Tom&quot;</span>,<span class="string">&quot;John&quot;</span>);</span><br><span class="line">        System.out.println(str1);</span><br><span class="line">        System.out.println(str2);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str3</span> <span class="operator">=</span> <span class="string">&quot;abcdeabcde123456789&quot;</span>;</span><br><span class="line">        <span class="type">String</span> <span class="variable">str4</span> <span class="operator">=</span> str3.replaceAll(<span class="string">&quot;a&quot;</span>,<span class="string">&quot;MMM&quot;</span>);</span><br><span class="line">        System.out.println(str4);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str5</span> <span class="operator">=</span> str3.replaceAll(<span class="string">&quot;\\d&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        System.out.println(str5);</span><br><span class="line">        <span class="type">String</span> <span class="variable">str6</span> <span class="operator">=</span> str3.replaceAll(<span class="string">&quot;\\w&quot;</span>,<span class="string">&quot;*&quot;</span>);</span><br><span class="line">        System.out.println(str6);</span><br><span class="line">        <span class="comment">//去除字符串前后的空格（包括制表符、换行符）</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">str7</span> <span class="operator">=</span> <span class="string">&quot;   Java   \n&quot;</span>;</span><br><span class="line">        System.out.println(str7);</span><br><span class="line">        System.out.println(str7.trim());</span><br><span class="line">        <span class="comment">//正则表达式去除所有空格</span></span><br><span class="line">        System.out.println(str7.replaceAll(<span class="string">&quot;\\s&quot;</span>,<span class="string">&quot;&quot;</span>));</span><br><span class="line">        <span class="comment">//String 和 int double之间的转换</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">numStr1</span> <span class="operator">=</span> <span class="string">&quot;1234&quot;</span>;</span><br><span class="line">        <span class="type">int</span> <span class="variable">num1</span> <span class="operator">=</span> Integer.parseInt(numStr1);</span><br><span class="line">        <span class="type">String</span> <span class="variable">numStr2</span> <span class="operator">=</span> <span class="string">&quot;564.45&quot;</span>;</span><br><span class="line">        <span class="type">double</span> <span class="variable">num2</span> <span class="operator">=</span> Double.parseDouble(numStr2);</span><br><span class="line">        System.out.println(num1 + num2); <span class="comment">//1798.45</span></span><br><span class="line">        <span class="type">Integer</span> <span class="variable">n</span> <span class="operator">=</span> Integer.valueOf(numStr1);</span><br><span class="line">        <span class="type">String</span> <span class="variable">numStr3</span> <span class="operator">=</span> Integer.toString(n); <span class="comment">//Integer转String</span></span><br><span class="line">        System.out.println(numStr3);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h2 id="StringBuffer类："><a href="#StringBuffer类：" class="headerlink" title="StringBuffer类："></a>StringBuffer类：</h2><ol><li>StringBuffer类是对String类的增强，它还是lang包中的，即java.lang.StringBuffer类。</li><li>StringBuffer类代表可变的字符串，可以对字符串的内容进行增删。</li><li>StringBuffer类的很多方法都与String类相同，只不过StringBuffer是可变长度的。</li><li>StringBuffer是一个容器。</li><li>StringBuffer是final类，不能被继承。</li></ol><h3 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h3><table><thead><tr><th>方法</th><th>功能</th></tr></thead><tbody><tr><td>public StringBuffer append(String str)</td><td>将指定的字符串追加到此字符序列</td></tr><tr><td>public StringBuffer delete(int start, int end)</td><td>移除此序列的子字符串中的字符。该子字符串从指定的 start 处开始，一直到索引 end - 1 处的字符，如果不存在这种字符，则一直到序列尾部。如果 start 等于 end，则不发生任何更改</td></tr><tr><td>public StringBuffer replace(int start,int end,String str)</td><td>使用给定 String 中的字符替换此序列的子字符串中的字符。该子字符串从指定的 start 处开始，一直到索引 end - 1 处的字符，如果不存在这种字符，则一直到序列尾部。先将子字符串中的字符移除，然后将指定的 String 插入 start。（如果需要，序列将延长以适应指定的字符串）</td></tr><tr><td>public int indexOf(String str)</td><td>返回第一次出现的指定子字符串在该字符串中的索引</td></tr><tr><td>public StringBuffer insert(int offset, String str)</td><td>将字符串插入此字符序列中。 按顺序将 String 参数中的字符插入此序列中的指定位置，将该位置处原来的字符向后移，此序列将增加该参数的长度。如果 str 为 null，则向此序列中追加 4 个字符 “null”</td></tr><tr><td>public char charAt(int index)</td><td>返回此序列中指定索引处的 char 值。第一个 char 值在索引 0 处，第二个在索引 1 处，依此类推，这类似于数组索引。 index 参数必须大于等于 0，且小于此序列的长度</td></tr><tr><td>public int length()</td><td>返回长度（字符数）不是容量</td></tr></tbody></table><h3 id="代码演示："><a href="#代码演示：" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBufferDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line">        <span class="type">StringBuffer</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuffer</span>(<span class="string">&quot;aabyteMMMM&quot;</span>);</span><br><span class="line">        <span class="comment">//拼接</span></span><br><span class="line">        s.append(<span class="string">&quot;000&quot;</span>);</span><br><span class="line">        s.append(<span class="string">&quot;Lucy&quot;</span>).append(<span class="number">100</span>).append(<span class="literal">true</span>).append(<span class="number">10.5</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aabyteMMMM000Lucy100true10.5</span></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        <span class="comment">//删除索引为 &gt;= start &amp;&amp; &lt; end 处的字符</span></span><br><span class="line">        <span class="comment">//解读: 删除 8~13 的字符 [8, 13)</span></span><br><span class="line">        s.delete(<span class="number">8</span>, <span class="number">13</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aabyteMMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        <span class="comment">//使用 MySQL 替换 索引2-5的字符 [2,5)</span></span><br><span class="line">        s.replace(<span class="number">2</span>, <span class="number">5</span>, <span class="string">&quot;MySQL&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//查找</span></span><br><span class="line">        <span class="comment">//查找指定的子串在字符串第一次出现的索引，如果找不到返回-1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">indexOf</span> <span class="operator">=</span> s.indexOf(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        System.out.println(indexOf);<span class="comment">// 10</span></span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        <span class="comment">//解读，在索引为9的位置插入 &quot;JAVA&quot;,原来索引为9的内容自动后移</span></span><br><span class="line">        s.insert(<span class="number">9</span>, <span class="string">&quot;JAVA&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMJAVAMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//长度</span></span><br><span class="line">        <span class="comment">//返回字符的个数，与容量无关</span></span><br><span class="line">        System.out.println(s.length()); <span class="comment">// 29</span></span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMJAVAMLucy100true10.5</span></span><br><span class="line">        <span class="comment">// charAt()</span></span><br><span class="line">        <span class="comment">// 返回此序列中指定索引处的 char 值，与容量无关</span></span><br><span class="line">        System.out.println(s.charAt(<span class="number">0</span>)); <span class="comment">// a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">aabyteMMMM000Lucy100true10<span class="number">.5</span></span><br><span class="line">aabyteMMLucy100true10<span class="number">.5</span></span><br><span class="line">aaMySQLeMMLucy100true10<span class="number">.5</span></span><br><span class="line"><span class="number">10</span></span><br><span class="line">aaMySQLeMJAVAMLucy100true10<span class="number">.5</span></span><br><span class="line"><span class="number">29</span></span><br><span class="line">aaMySQLeMJAVAMLucy100true10<span class="number">.5</span></span><br><span class="line">a</span><br></pre></td></tr></table></figure><br/><h2 id="StringBuilder类："><a href="#StringBuilder类：" class="headerlink" title="StringBuilder类："></a>StringBuilder类：</h2><ol><li><p>StringBuilder 类保存了一个可变的字符序列。此类提供了一个与 StringBuffer 类兼容的API。该类被设计用作 StringBuffer 类的一个简易替换，用在字符串缓冲区被单个线程使用的时候。</p></li><li><p>StringBuilder 类不保证同步（即不是线程安全的），但它要比StringBuffer 类的速度快，在单线程中，优先使用该类。</p></li><li><p>StringBuilder 类的直接父类 是 AbstractStringBuilder 类。</p></li><li><p>StringBuilder 实现了 Serializable 接口，代表了 StringBuffer 类的对象可以串行化【即可以进行网络编程】。</p></li><li><p>在父类 AbstractStringBuilder 中包含属性 char[] value，没有 final 修饰（与 String 类不同），因此该 value 数组存储字符串的位置在堆内存中，而不是在方法区的常量池中。</p></li><li><p>StringBuilder 类是一个 final 类，不能被继承。</p></li><li><p>因为StringBuilder 类对象的字符序列是存储在 char[] value 属性中的，所以在改变字符序列时(增加&#x2F;删除)， 不用每次都更换对象地址(即不是每次创建新对象)， 因此其效率高于 String 类。</p></li><li><p>StringBuilder 类没有实现多线程同步（即它不是线程安全的）。</p></li></ol><h3 id="String、StringBuffer-和-StringBuilder-的比较："><a href="#String、StringBuffer-和-StringBuilder-的比较：" class="headerlink" title="String、StringBuffer 和 StringBuilder 的比较："></a>String、StringBuffer 和 StringBuilder 的比较：</h3><ol><li>StringBuilder和StringBuffer非常类似，均代表可变的字符序列，而且方法也一样。</li><li>String: 不可变字符序列，效率低，但是复用率高。</li><li>StringBuffer: 可变字符序列、效率较高（增删）、线程安全。</li><li>StringBuilder: 可变字符序列、效率最高、但线程不安全。</li><li>每次对String进行拼接操作时，都会产生一个新的对象，随着操作次数增多，会严重影响程序性能。</li></ol><h3 id="代码演示：-1"><a href="#代码演示：-1" class="headerlink" title="代码演示："></a>代码演示：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">StringBuilderDemo</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">//初始化</span></span><br><span class="line">        <span class="type">StringBuilder</span> <span class="variable">s</span> <span class="operator">=</span> <span class="keyword">new</span> <span class="title class_">StringBuilder</span>(<span class="string">&quot;aabyteMMMM&quot;</span>);</span><br><span class="line">        <span class="comment">//拼接</span></span><br><span class="line">        s.append(<span class="string">&quot;000&quot;</span>);</span><br><span class="line">        s.append(<span class="string">&quot;Lucy&quot;</span>).append(<span class="number">100</span>).append(<span class="literal">true</span>).append(<span class="number">10.5</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aabyteMMMM000Lucy100true10.5</span></span><br><span class="line">        <span class="comment">//删除</span></span><br><span class="line">        <span class="comment">//删除索引为 &gt;= start &amp;&amp; &lt; end 处的字符</span></span><br><span class="line">        <span class="comment">//解读: 删除 8~13 的字符 [8, 13)</span></span><br><span class="line">        s.delete(<span class="number">8</span>, <span class="number">13</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aabyteMMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//修改</span></span><br><span class="line">        <span class="comment">//使用 MySQL 替换 索引2-5的字符 [2,5)</span></span><br><span class="line">        s.replace(<span class="number">2</span>, <span class="number">5</span>, <span class="string">&quot;MySQL&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//查找</span></span><br><span class="line">        <span class="comment">//查找指定的子串在字符串第一次出现的索引，如果找不到返回-1</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">indexOf</span> <span class="operator">=</span> s.indexOf(<span class="string">&quot;Lucy&quot;</span>);</span><br><span class="line">        System.out.println(indexOf);<span class="comment">// 10</span></span><br><span class="line">        <span class="comment">//插入</span></span><br><span class="line">        <span class="comment">//解读，在索引为9的位置插入 &quot;JAVA&quot;,原来索引为9的内容自动后移</span></span><br><span class="line">        s.insert(<span class="number">9</span>, <span class="string">&quot;JAVA&quot;</span>);</span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMJAVAMLucy100true10.5</span></span><br><span class="line">        <span class="comment">//长度</span></span><br><span class="line">        <span class="comment">//返回字符的个数，与容量无关</span></span><br><span class="line">        System.out.println(s.length()); <span class="comment">// 29</span></span><br><span class="line">        System.out.println(s); <span class="comment">// aaMySQLeMJAVAMLucy100true10.5</span></span><br><span class="line">        <span class="comment">// charAt()</span></span><br><span class="line">        <span class="comment">// 返回此序列中指定索引处的 char 值，与容量无关</span></span><br><span class="line">        System.out.println(s.charAt(<span class="number">0</span>)); <span class="comment">// a</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>字符串存在大量修改操作 + 单线程情况  &#x3D;  推荐使用StringBuilder</li><li>字符串存在大量修改操作 + 多线程情况  &#x3D;  推荐使用StringBuffer</li><li>字符串很少修改 + 被多个对象引用 &#x3D; 推荐使用String</li></ul>]]></content>
      
      
      <categories>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 字符串 </tag>
            
            <tag> Java </tag>
            
            <tag> 编程语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Java日期时间</title>
      <link href="/2023/10/25/00021/"/>
      <url>/2023/10/25/00021/</url>
      
        <content type="html"><![CDATA[<p>在开发中经常需要处理日期和时间，Java提供了一套专门用于处理日期时间的API，在日期时间类中了包含LocalDate类、LocalTime类、Instant类、Duration类以及Period类等，这些类都包含在java.time包中。</p><table><thead><tr><th align="left">类的名称</th><th align="left">功能描述</th></tr></thead><tbody><tr><td align="left">Instant</td><td align="left">表示时刻，代表的是时间戳</td></tr><tr><td align="left">LocalDate</td><td align="left">不包含具体时间的日期</td></tr><tr><td align="left">LocalTime</td><td align="left">不包含日期的时间</td></tr><tr><td align="left">LocalDateTime</td><td align="left">包含了日期和时间</td></tr><tr><td align="left">Duration</td><td align="left">基于时间的值测量时间量</td></tr><tr><td align="left">Period</td><td align="left">计算日期时间差异，只能精确到年月日</td></tr><tr><td align="left">Clock</td><td align="left">时钟系统，用于查找当前时刻</td></tr></tbody></table><h2 id="Instant（时间戳）类"><a href="#Instant（时间戳）类" class="headerlink" title="Instant（时间戳）类"></a>Instant（时间戳）类</h2><p>Instant 类代表的是某个时间。其内部是由两个Long字段组成，</p><p>第一部分是保存自标准Java计算时代（即1970年1月1日开始）至当前时间的秒数，即时间戳（Timestamp）。该时间戳表示从参考时间点开始经过的秒数。</p><p>第二部分是保存纳秒数。纳秒是时间的更精细单位，表示每秒钟的十亿分之一。</p><h3 id="常用方法："><a href="#常用方法：" class="headerlink" title="常用方法："></a>常用方法：</h3><ul><li>now()：使用系统时钟获取当前瞬时。</li><li>now(Clock clock)：使用指定时钟获取当前瞬时。</li><li>ofEpochSecond(long epochSecond)：使用自标准Java计算时代开始的秒数获得一个Instant实例。</li><li>ofEpochMilli(long epochMilli)：使用自标准Java计算时代开始的毫秒数获得一个Instant实例。</li><li>getEpochSecond()：获取时间戳的秒数部分。</li><li>getNano()：获取时间戳的纳秒数部分。</li><li>parse(CharSequence text)：将表示时间的字符串转换为对应的Instant对象。</li><li>from(TemporalAccessor tenporal)：从时间对象获取一个Instant的实例。</li><li>plusSeconds(long seconds) 和 plusMillis(long millis)：在时间戳的基础上增加指定的秒数或毫秒数。</li><li>minusSeconds() 和 minusMillis()：在时间戳的基础上减去指定的秒数或毫秒数。</li><li>isBefore() 和 isAfter() 方法：比较两个时间戳的先后顺序。</li></ul><h3 id="示例代码："><a href="#示例代码：" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Clock;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">InstantExample</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前时间的瞬时实例</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">now</span> <span class="operator">=</span> Instant.now();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前时间：&quot;</span> + now);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用指定时钟获取当前时间的瞬时实例</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">clock</span> <span class="operator">=</span> Clock.systemUTC();</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">nowWithClock</span> <span class="operator">=</span> Instant.now(clock);</span><br><span class="line">        System.out.println(<span class="string">&quot;当前时间（使用指定时钟）：&quot;</span> + nowWithClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用从自标准Java计算时代开始的秒数创建Instant实例</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">epochSecondInstant</span> <span class="operator">=</span> Instant.ofEpochSecond(<span class="number">1234567890</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;自1970年1月1日起的秒数对应的时间：&quot;</span> + epochSecondInstant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 使用从自标准Java计算时代开始的毫秒数创建Instant实例</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">epochMilliInstant</span> <span class="operator">=</span> Instant.ofEpochMilli(<span class="number">1627368000000L</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;自1970年1月1日起的毫秒数对应的时间：&quot;</span> + epochMilliInstant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取时间戳的秒数部分</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">seconds</span> <span class="operator">=</span> now.getEpochSecond();</span><br><span class="line">        System.out.println(<span class="string">&quot;时间戳的秒数部分：&quot;</span> + seconds);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取时间戳的纳秒数部分</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">nanos</span> <span class="operator">=</span> now.getNano();</span><br><span class="line">        System.out.println(<span class="string">&quot;时间戳的纳秒数部分：&quot;</span> + nanos);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 将表示时间的字符串转换为Instant对象</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">timeString</span> <span class="operator">=</span> <span class="string">&quot;2023-08-14T10:30:00Z&quot;</span>;</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">parsedInstant</span> <span class="operator">=</span> Instant.parse(timeString);</span><br><span class="line">        System.out.println(<span class="string">&quot;解析后的时间：&quot;</span> + parsedInstant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在时间戳的基础上增加指定的秒数或毫秒数</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">plusSecondsInstant</span> <span class="operator">=</span> now.plusSeconds(<span class="number">3600</span>);</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">plusMillisInstant</span> <span class="operator">=</span> now.plusMillis(<span class="number">1000</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;增加1小时后的时间：&quot;</span> + plusSecondsInstant);</span><br><span class="line">        System.out.println(<span class="string">&quot;增加1秒后的时间：&quot;</span> + plusMillisInstant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 在时间戳的基础上减去指定的秒数或毫秒数</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">minusSecondsInstant</span> <span class="operator">=</span> now.minusSeconds(<span class="number">1800</span>);</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">minusMillisInstant</span> <span class="operator">=</span> now.minusMillis(<span class="number">500</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;减去30分钟后的时间：&quot;</span> + minusSecondsInstant);</span><br><span class="line">        System.out.println(<span class="string">&quot;减去0.5秒后的时间：&quot;</span> + minusMillisInstant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 比较两个时间戳的先后顺序</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">earlierInstant</span> <span class="operator">=</span> Instant.parse(<span class="string">&quot;2023-08-14T09:00:00Z&quot;</span>);</span><br><span class="line">        <span class="type">Instant</span> <span class="variable">laterInstant</span> <span class="operator">=</span> Instant.parse(<span class="string">&quot;2023-08-14T11:00:00Z&quot;</span>);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isBefore</span> <span class="operator">=</span> earlierInstant.isBefore(laterInstant);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isAfter</span> <span class="operator">=</span> earlierInstant.isAfter(laterInstant);</span><br><span class="line">        System.out.println(<span class="string">&quot;earlierInstant是否在laterInstant之前：&quot;</span> + isBefore);</span><br><span class="line">        System.out.println(<span class="string">&quot;earlierInstant是否在laterInstant之后：&quot;</span> + isAfter);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果："><a href="#运行结果：" class="headerlink" title="运行结果："></a>运行结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line">当前时间：<span class="number">2023</span>-<span class="number">10</span>-25T05:09:<span class="number">44.</span>739476300Z</span><br><span class="line">当前时间（使用指定时钟）：<span class="number">2023</span>-<span class="number">10</span>-25T05:09:<span class="number">44.</span>743463Z</span><br><span class="line">自<span class="number">1970</span>年<span class="number">1</span>月<span class="number">1</span>日起的秒数对应的时间：<span class="number">2009</span>-<span class="number">02</span>-13T23:<span class="number">31</span>:30Z</span><br><span class="line">自<span class="number">1970</span>年<span class="number">1</span>月<span class="number">1</span>日起的毫秒数对应的时间：<span class="number">2021</span>-<span class="number">07</span>-27T06:<span class="number">40</span>:00Z</span><br><span class="line">时间戳的秒数部分：<span class="number">1698210584</span></span><br><span class="line">时间戳的纳秒数部分：<span class="number">739476300</span></span><br><span class="line">解析后的时间：<span class="number">2023</span>-08-14T10:<span class="number">30</span>:00Z</span><br><span class="line">增加<span class="number">1</span>小时后的时间：<span class="number">2023</span>-<span class="number">10</span>-25T06:09:<span class="number">44.</span>739476300Z</span><br><span class="line">增加<span class="number">1</span>秒后的时间：<span class="number">2023</span>-<span class="number">10</span>-25T05:09:<span class="number">45.</span>739476300Z</span><br><span class="line">减去<span class="number">30</span>分钟后的时间：<span class="number">2023</span>-<span class="number">10</span>-25T04:<span class="number">39</span>:<span class="number">44.</span>739476300Z</span><br><span class="line">减去<span class="number">0.5</span>秒后的时间：<span class="number">2023</span>-<span class="number">10</span>-25T05:09:<span class="number">44.</span>239476300Z</span><br><span class="line">earlierInstant是否在laterInstant之前：<span class="literal">true</span></span><br><span class="line">earlierInstant是否在laterInstant之后：<span class="literal">false</span></span><br></pre></td></tr></table></figure><br/><h2 id="LocalData-日期-类"><a href="#LocalData-日期-类" class="headerlink" title="LocalData(日期)类"></a><strong>LocalData(<strong>日期</strong>)类</strong></h2><p>LocalData类是Java 8引入的日期类，用于表示日期（年、月、日）信息。该类具有以下方法：</p><h3 id="常用方法：-1"><a href="#常用方法：-1" class="headerlink" title="常用方法："></a>常用方法：</h3><ul><li>now()：这是一个静态方法，返回表示当前日期的LocalDate对象。例如，LocalDate.now()将返回表示今天日期的对象。</li><li>of(int year, int month, int dayOfMonth)：这是另一个静态方法，通过指定年、月、日创建LocalDate对象。参数year表示年份，month表示月份（1到12之间），dayOfMonth表示月份中的某一天。</li><li>format(DateTimeFormatter formatter)：该方法可将LocalDate对象按照指定的格式转换为字符串表示。需要传入一个DateTimeFormatter对象，可以使用预定义的格式或自定义格式。例如，date.format(DateTimeFormatter.ofPattern(“yyyy-MM-dd”))将返回带有“年-月-日”格式的日期字符串。</li><li>plusYears(long years) &#x2F; minusYears(long years)：这些方法用于在现有的LocalDate对象上增加或减少指定的年数。参数years表示要增加或减少的年数。</li><li>plusMonths(long months) &#x2F; minusMonths(long months)：与上述方法类似，这些方法用于在现有的LocalDate对象上增加或减少指定的月数。</li><li>plusDays(long days) &#x2F; minusDays(long days)：这些方法用于在现有的LocalDate对象上增加或减少指定的天数。</li><li>isBefore(LocalDate other) &#x2F; isAfter(LocalDate other)：这两个方法用于比较两个LocalDate对象的先后顺序。isBefore()方法返回一个布尔值，表示该日期是否在参数日期之前；isAfter()方法返回一个布尔值，表示该日期是否在参数日期之后。</li><li>getYear() &#x2F; getMonthValue() &#x2F; getDayOfMonth()：这些方法用于获取LocalDate对象的年、月、日信息。</li><li>isLeapYear():用于判断指定年份是否为闰年。</li></ul><h3 id="示例代码：-1"><a href="#示例代码：-1" class="headerlink" title="示例代码："></a>示例代码：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前日期</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">currentDate</span> <span class="operator">=</span> LocalDate.now();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前日期：&quot;</span> + currentDate);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建指定日期</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">customDate</span> <span class="operator">=</span> LocalDate.of(<span class="number">2023</span>, <span class="number">8</span>, <span class="number">14</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义日期：&quot;</span> + customDate);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 格式化日期为字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">formattedDate</span> <span class="operator">=</span> customDate.format(DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;格式化后的日期：&quot;</span> + formattedDate);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增减年份</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">futureDate</span> <span class="operator">=</span> customDate.plusYears(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;增加两年后的日期：&quot;</span> + futureDate);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断日期先后</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isBefore</span> <span class="operator">=</span> customDate.isBefore(currentDate);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isAfter</span> <span class="operator">=</span> customDate.isAfter(currentDate);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义日期是否在当前日期之前：&quot;</span> + isBefore);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义日期是否在当前日期之后：&quot;</span> + isAfter);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取年、月、日</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> customDate.getYear();</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> customDate.getMonthValue();</span><br><span class="line">        <span class="type">int</span> <span class="variable">dayOfMonth</span> <span class="operator">=</span> customDate.getDayOfMonth();</span><br><span class="line">        System.out.println(<span class="string">&quot;年：&quot;</span> + year);</span><br><span class="line">        System.out.println(<span class="string">&quot;月：&quot;</span> + month);</span><br><span class="line">        System.out.println(<span class="string">&quot;日：&quot;</span> + dayOfMonth);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断闰年</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isLeapYear</span> <span class="operator">=</span> customDate.isLeapYear();</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义日期所在年份是否为闰年：&quot;</span> + isLeapYear);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果：-1"><a href="#运行结果：-1" class="headerlink" title="运行结果："></a>运行结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line">当前日期：<span class="number">2023</span>-<span class="number">10</span>-<span class="number">25</span></span><br><span class="line">自定义日期：<span class="number">2023</span>-08-<span class="number">14</span></span><br><span class="line">格式化后的日期：<span class="number">2023</span>-08-<span class="number">14</span></span><br><span class="line">增加两年后的日期：<span class="number">2025</span>-08-<span class="number">14</span></span><br><span class="line">自定义日期是否在当前日期之前：<span class="literal">true</span></span><br><span class="line">自定义日期是否在当前日期之后：<span class="literal">false</span></span><br><span class="line">年：<span class="number">2023</span></span><br><span class="line">月：<span class="number">8</span></span><br><span class="line">日：<span class="number">14</span></span><br><span class="line">自定义日期所在年份是否为闰年：<span class="literal">false</span></span><br></pre></td></tr></table></figure><br/><h2 id="LocalTime-时间-类"><a href="#LocalTime-时间-类" class="headerlink" title="LocalTime(时间)类"></a>LocalTime(时间)类</h2><p>LocalTime类用来表示时间，通常表示的是小时分钟秒。与LocalData类一样，该类不能代表时间线上的即时信息，只是时间的描述。在LocalTime类中提供了获取时间对象的方法，与LocalData用法类似。</p><p>同时LocalTime类也提供了与日期类相对应的时间格式化、增减时分秒等常用方法，这些方法与LocalData(日期)类相对应，这里我们不再详细列举。</p><h3 id="示例代码"><a href="#示例代码" class="headerlink" title="示例代码:"></a>示例代码:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前时间</span></span><br><span class="line">        <span class="type">LocalTime</span> <span class="variable">currentTime</span> <span class="operator">=</span> LocalTime.now();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前时间：&quot;</span> + currentTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建指定时间</span></span><br><span class="line">        <span class="type">LocalTime</span> <span class="variable">customTime</span> <span class="operator">=</span> LocalTime.of(<span class="number">12</span>, <span class="number">30</span>, <span class="number">45</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义时间：&quot;</span> + customTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 格式化时间为字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">formattedTime</span> <span class="operator">=</span> customTime.format(DateTimeFormatter.ofPattern(<span class="string">&quot;HH:mm:ss&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;格式化后的时间：&quot;</span> + formattedTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增减小时数</span></span><br><span class="line">        <span class="type">LocalTime</span> <span class="variable">futureTime</span> <span class="operator">=</span> customTime.plusHours(<span class="number">2</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;增加两小时后的时间：&quot;</span> + futureTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断时间先后</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isBefore</span> <span class="operator">=</span> customTime.isBefore(currentTime);</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isAfter</span> <span class="operator">=</span> customTime.isAfter(currentTime);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义时间是否在当前时间之前：&quot;</span> + isBefore);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义时间是否在当前时间之后：&quot;</span> + isAfter);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取小时、分钟、秒</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">hour</span> <span class="operator">=</span> customTime.getHour();</span><br><span class="line">        <span class="type">int</span> <span class="variable">minute</span> <span class="operator">=</span> customTime.getMinute();</span><br><span class="line">        <span class="type">int</span> <span class="variable">second</span> <span class="operator">=</span> customTime.getSecond();</span><br><span class="line">        System.out.println(<span class="string">&quot;小时：&quot;</span> + hour);</span><br><span class="line">        System.out.println(<span class="string">&quot;分钟：&quot;</span> + minute);</span><br><span class="line">        System.out.println(<span class="string">&quot;秒：&quot;</span> + second);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果：-2"><a href="#运行结果：-2" class="headerlink" title="运行结果："></a>运行结果：</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">当前时间：<span class="number">13</span>:<span class="number">13</span>:<span class="number">29.649140600</span></span><br><span class="line">自定义时间：<span class="number">12</span>:<span class="number">30</span>:<span class="number">45</span></span><br><span class="line">格式化后的时间：<span class="number">12</span>:<span class="number">30</span>:<span class="number">45</span></span><br><span class="line">增加两小时后的时间：<span class="number">14</span>:<span class="number">30</span>:<span class="number">45</span></span><br><span class="line">自定义时间是否在当前时间之前：<span class="literal">true</span></span><br><span class="line">自定义时间是否在当前时间之后：<span class="literal">false</span></span><br><span class="line">小时：<span class="number">12</span></span><br><span class="line">分钟：<span class="number">30</span></span><br><span class="line">秒：<span class="number">45</span></span><br></pre></td></tr></table></figure><br/><h2 id="LocalDataTime-日期时间-类"><a href="#LocalDataTime-日期时间-类" class="headerlink" title="LocalDataTime(日期时间)类"></a>LocalDataTime(日期时间)类</h2><p>LocalDataTime类是日期（LocalDate）类与时间（LocalTime）类的综合，它即包含日期也包含时间，通过查看API可以知道，LocalDataTime类中的方法包含了LocalData类与LocalTime类的方法。</p><p>需要注意的是，LocalDateTime默认的格式是 2020-02-29T21:23:26.774，这可能与我们经常使用的格式不太符合，所以它经常和DateTimeFormatter一起使用指定格式，除了LocalData与LocalTime类中的方法，额外提供了转换的方法。</p><h3 id="常用方法：-2"><a href="#常用方法：-2" class="headerlink" title="常用方法："></a>常用方法：</h3><p>以下是一些LocalDateTime类常用的方法：</p><ul><li>now()：静态方法，返回当前日期和时间的LocalDateTime对象。</li><li>of(int year, int month, int dayOfMonth, int hour, int minute) &#x2F; of(int year, int month, int dayOfMonth, int hour, int minute, int second)：静态方法，通过指定年、月、日、小时、分钟以及秒数（可选）创建LocalDateTime对象。</li><li>parse(CharSequence text)：静态方法，将字符串解析为LocalDateTime对象。</li><li>format(DateTimeFormatter formatter)：将LocalDateTime对象按照指定格式转换为字符串表示。</li><li>toLocalDate()：获取LocalDateTime对象的日期部分，返回LocalDate对象。</li><li>toLocalTime()：获取LocalDateTime对象的时间部分，返回LocalTime对象。</li><li>plusYears(long years) &#x2F; minusYears(long years)：在现有的LocalDateTime对象上增加或减少指定年数。</li><li>plusMonths(long months) &#x2F; minusMonths(long months)：在现有的LocalDateTime对象上增加或减少指定月数。</li><li>plusDays(long days) &#x2F; minusDays(long days)：在现有的LocalDateTime对象上增加或减少指定天数。</li><li>plusHours(long hours) &#x2F; minusHours(long hours)：在现有的LocalDateTime对象上增加或减少指定小时数。</li><li>plusMinutes(long minutes) &#x2F; minusMinutes(long minutes)：在现有的LocalDateTime对象上增加或减少指定分钟数。</li><li>plusSeconds(long seconds) &#x2F; minusSeconds(long seconds)：在现有的LocalDateTime对象上增加或减少指定秒数。</li><li>getYear() &#x2F; getMonthValue() &#x2F; getDayOfMonth()：获取LocalDateTime对象的年、月、日信息。</li></ul><h3 id="示例代码-1"><a href="#示例代码-1" class="headerlink" title="示例代码:"></a>示例代码:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalDateTime;</span><br><span class="line"><span class="keyword">import</span> java.time.LocalTime;</span><br><span class="line"><span class="keyword">import</span> java.time.format.DateTimeFormatter;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取当前日期和时间</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">currentDateTime</span> <span class="operator">=</span> LocalDateTime.now();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前日期和时间：&quot;</span> + currentDateTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建指定的日期和时间</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">customDateTime</span> <span class="operator">=</span> LocalDateTime.of(<span class="number">2023</span>, <span class="number">10</span>, <span class="number">24</span>, <span class="number">12</span>, <span class="number">30</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;自定义日期和时间：&quot;</span> + customDateTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 格式化日期时间为字符串</span></span><br><span class="line">        <span class="type">String</span> <span class="variable">formattedDateTime</span> <span class="operator">=</span> customDateTime.format(DateTimeFormatter.ofPattern(<span class="string">&quot;yyyy-MM-dd HH:mm:ss&quot;</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;格式化后的日期和时间：&quot;</span> + formattedDateTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 增减年数、月数、天数、小时数、分钟数、秒数</span></span><br><span class="line">        <span class="type">LocalDateTime</span> <span class="variable">futureDateTime</span> <span class="operator">=</span> customDateTime.plusYears(<span class="number">1</span>).minusMonths(<span class="number">2</span>).plusDays(<span class="number">15</span>).minusHours(<span class="number">3</span>).plusMinutes(<span class="number">10</span>).plusSeconds(<span class="number">30</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;操作后的日期和时间：&quot;</span> + futureDateTime);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取日期和时间部分</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">datePart</span> <span class="operator">=</span> customDateTime.toLocalDate();</span><br><span class="line">        <span class="type">LocalTime</span> <span class="variable">timePart</span> <span class="operator">=</span> customDateTime.toLocalTime();</span><br><span class="line">        System.out.println(<span class="string">&quot;日期部分：&quot;</span> + datePart);</span><br><span class="line">        System.out.println(<span class="string">&quot;时间部分：&quot;</span> + timePart);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取年、月、日信息</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">year</span> <span class="operator">=</span> customDateTime.getYear();</span><br><span class="line">        <span class="type">int</span> <span class="variable">month</span> <span class="operator">=</span> customDateTime.getMonthValue();</span><br><span class="line">        <span class="type">int</span> <span class="variable">dayOfMonth</span> <span class="operator">=</span> customDateTime.getDayOfMonth();</span><br><span class="line">        System.out.println(<span class="string">&quot;年：&quot;</span> + year);</span><br><span class="line">        System.out.println(<span class="string">&quot;月：&quot;</span> + month);</span><br><span class="line">        System.out.println(<span class="string">&quot;日：&quot;</span> + dayOfMonth);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果:"></a>运行结果:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">当前日期和时间：<span class="number">2023</span>-<span class="number">10</span>-25T13:<span class="number">19</span>:<span class="number">39.667325400</span></span><br><span class="line">自定义日期和时间：<span class="number">2023</span>-<span class="number">10</span>-24T12:<span class="number">30</span></span><br><span class="line">格式化后的日期和时间：<span class="number">2023</span>-<span class="number">10</span>-<span class="number">24</span> <span class="number">12</span>:<span class="number">30</span>:<span class="number">00</span></span><br><span class="line">操作后的日期和时间：<span class="number">2024</span>-09-08T09:<span class="number">40</span>:<span class="number">30</span></span><br><span class="line">日期部分：<span class="number">2023</span>-<span class="number">10</span>-<span class="number">24</span></span><br><span class="line">时间部分：<span class="number">12</span>:<span class="number">30</span></span><br><span class="line">年：<span class="number">2023</span></span><br><span class="line">月：<span class="number">10</span></span><br><span class="line">日：<span class="number">24</span></span><br></pre></td></tr></table></figure><br/><h2 id="Duration-时间间隔-类"><a href="#Duration-时间间隔-类" class="headerlink" title="Duration(时间间隔)类"></a>Duration(时间间隔)类</h2><p>Duration类是Java 8引入的一个用于表示时间间隔的类。它可用于计算两个时间点之间的差异，以及在不同单位（如秒、分钟、小时等）之间进行转换。</p><h3 id="常用方法：-3"><a href="#常用方法：-3" class="headerlink" title="常用方法："></a>常用方法：</h3><p>以下是一些Duration类常用的方法：</p><ul><li>ofDays(long days) &#x2F; ofHours(long hours) &#x2F; ofMinutes(long minutes)：静态方法，创建一个持续时间，表示指定的天数、小时数或分钟数。</li><li>ofSeconds(long seconds) &#x2F; ofMillis(long milliseconds) &#x2F; ofNanos(long nanos)：静态方法，创建一个持续时间，表示指定的秒数、毫秒数或纳秒数。</li><li>between(Temporal startInclusive, Temporal endExclusive)：静态方法，创建一个持续时间，表示从起始时间到结束时间之间的差异。</li><li>plus(Duration duration) &#x2F; minus(Duration duration)：在现有的Duration对象上增加或减少另一个Duration对象的持续时间。</li><li>toDays() &#x2F; toHours() &#x2F; toMinutes()：将持续时间转换为对应的天数、小时数或分钟数。</li><li>toSeconds() &#x2F; toMillis() &#x2F; toNanos()：将持续时间转换为对应的秒数、毫秒数或纳秒数。</li><li>getSeconds() &#x2F; getNano()：获取持续时间中的秒数和纳秒数。</li><li>isNegative() &#x2F; isZero()：判断持续时间是否为负值或零值。</li></ul><h3 id="示例代码-2"><a href="#示例代码-2" class="headerlink" title="示例代码:"></a>示例代码:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建一个持续时间，表示5小时30分钟15秒</span></span><br><span class="line">        <span class="type">Duration</span> <span class="variable">duration1</span> <span class="operator">=</span> Duration.ofHours(<span class="number">5</span>).plusMinutes(<span class="number">30</span>).plusSeconds(<span class="number">15</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Duration 1: &quot;</span> + duration1); <span class="comment">// 输出：PT5H30M15S</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个持续时间，表示1分钟</span></span><br><span class="line">        <span class="type">Duration</span> <span class="variable">duration2</span> <span class="operator">=</span> Duration.ofMinutes(<span class="number">1</span>);</span><br><span class="line">        System.out.println(<span class="string">&quot;Duration 2: &quot;</span> + duration2); <span class="comment">// 输出：PT1M</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算两个持续时间之间的差异</span></span><br><span class="line">        <span class="type">Duration</span> <span class="variable">difference</span> <span class="operator">=</span> duration1.minus(duration2);</span><br><span class="line">        System.out.println(<span class="string">&quot;Difference: &quot;</span> + difference); <span class="comment">// 输出：PT5H29M15S</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取持续时间的小时数、分钟数和秒数</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">hours</span> <span class="operator">=</span> difference.toHours();</span><br><span class="line">        <span class="type">long</span> <span class="variable">minutes</span> <span class="operator">=</span> difference.toMinutesPart();</span><br><span class="line">        <span class="type">long</span> <span class="variable">seconds</span> <span class="operator">=</span> difference.toSecondsPart();</span><br><span class="line">        System.out.println(<span class="string">&quot;Hours: &quot;</span> + hours); <span class="comment">// 输出：5</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Minutes: &quot;</span> + minutes); <span class="comment">// 输出：29</span></span><br><span class="line">        System.out.println(<span class="string">&quot;Seconds: &quot;</span> + seconds); <span class="comment">// 输出：15</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断持续时间是否为负值或零值</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isNegative</span> <span class="operator">=</span> difference.isNegative();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isZero</span> <span class="operator">=</span> difference.isZero();</span><br><span class="line">        System.out.println(<span class="string">&quot;是负的? &quot;</span> + isNegative); <span class="comment">// 输出：false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;是零吗? &quot;</span> + isZero); <span class="comment">// 输出：false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-1"><a href="#运行结果-1" class="headerlink" title="运行结果:"></a>运行结果:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">Duration <span class="number">1</span>: PT5H30M15S</span><br><span class="line">Duration <span class="number">2</span>: PT1M</span><br><span class="line">Difference: PT5H29M15S</span><br><span class="line">Hours: <span class="number">5</span></span><br><span class="line">Minutes: <span class="number">29</span></span><br><span class="line">Seconds: <span class="number">15</span></span><br><span class="line">是负的? <span class="literal">false</span></span><br><span class="line">是零吗? <span class="literal">false</span></span><br></pre></td></tr></table></figure><br/><h2 id="Period-日期间隔-类"><a href="#Period-日期间隔-类" class="headerlink" title="Period(日期间隔)类"></a>Period(日期间隔)类</h2><p> Period主要用于计算两个日期的间隔，与Duration相同，也是通过between计算日期间隔，并提供了获取年月日的三个常用方法，分别是 getYears()、getMonths()和getDays()。</p><h3 id="示例代码-3"><a href="#示例代码-3" class="headerlink" title="示例代码:"></a>示例代码:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.LocalDate;</span><br><span class="line"><span class="keyword">import</span> java.time.Period;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 创建两个日期</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">startDate</span> <span class="operator">=</span> LocalDate.of(<span class="number">2023</span>, <span class="number">1</span>, <span class="number">1</span>);</span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">endDate</span> <span class="operator">=</span> LocalDate.of(<span class="number">2023</span>, <span class="number">4</span>, <span class="number">30</span>);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 计算日期之间的差异</span></span><br><span class="line">        <span class="type">Period</span> <span class="variable">period</span> <span class="operator">=</span> Period.between(startDate, endDate);</span><br><span class="line">        System.out.println(<span class="string">&quot;日期间隔: &quot;</span> + period); <span class="comment">// 输出：P3M29D</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取年、月、日的差异</span></span><br><span class="line">        <span class="type">int</span> <span class="variable">years</span> <span class="operator">=</span> period.getYears();</span><br><span class="line">        <span class="type">int</span> <span class="variable">months</span> <span class="operator">=</span> period.getMonths();</span><br><span class="line">        <span class="type">int</span> <span class="variable">days</span> <span class="operator">=</span> period.getDays();</span><br><span class="line">        System.out.println(<span class="string">&quot;年: &quot;</span> + years); <span class="comment">// 输出：0</span></span><br><span class="line">        System.out.println(<span class="string">&quot;月: &quot;</span> + months); <span class="comment">// 输出：3</span></span><br><span class="line">        System.out.println(<span class="string">&quot;日: &quot;</span> + days); <span class="comment">// 输出：29</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 添加日期间隔到指定日期</span></span><br><span class="line">        <span class="type">LocalDate</span> <span class="variable">newDate</span> <span class="operator">=</span> startDate.plus(period);</span><br><span class="line">        System.out.println(<span class="string">&quot;新日期: &quot;</span> + newDate); <span class="comment">// 输出：2023-04-30</span></span><br><span class="line"></span><br><span class="line">        <span class="comment">// 判断日期间隔是否为负值或零值</span></span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isNegative</span> <span class="operator">=</span> period.isNegative();</span><br><span class="line">        <span class="type">boolean</span> <span class="variable">isZero</span> <span class="operator">=</span> period.isZero();</span><br><span class="line">        System.out.println(<span class="string">&quot;是否为负值? &quot;</span> + isNegative); <span class="comment">// 输出：false</span></span><br><span class="line">        System.out.println(<span class="string">&quot;是否为零值? &quot;</span> + isZero); <span class="comment">// 输出：false</span></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-2"><a href="#运行结果-2" class="headerlink" title="运行结果:"></a>运行结果:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">日期间隔: P3M29D</span><br><span class="line">年: <span class="number">0</span></span><br><span class="line">月: <span class="number">3</span></span><br><span class="line">日: <span class="number">29</span></span><br><span class="line">新日期: <span class="number">2023</span>-<span class="number">04</span>-<span class="number">30</span></span><br><span class="line">是否为负值? <span class="literal">false</span></span><br><span class="line">是否为零值? <span class="literal">false</span></span><br></pre></td></tr></table></figure><br/><h2 id="Clock（获取时区）类"><a href="#Clock（获取时区）类" class="headerlink" title="Clock（获取时区）类"></a>Clock（获取时区）类</h2><p>Clock类是Java中用于获取当前时间、日期和时区信息的抽象类。它提供了一种通用的方式来访问系统时钟，并以不同的时区获取当前时间。</p><h3 id="常用方法：-4"><a href="#常用方法：-4" class="headerlink" title="常用方法："></a>常用方法：</h3><ul><li>systemDefaultZone()：静态方法，返回使用系统默认时区的系统时钟。</li><li>systemUTC()：静态方法，返回使用协调世界时（UTC）的系统时钟。</li><li>tick(Clock fixedClock, Duration tickDuration)：静态方法，返回一个包装了指定时钟的”滴答”时钟，每次前进指定的时长。</li><li>fixed(Instant fixedInstant, ZoneId zone)：静态方法，返回一个固定的时钟，始终返回指定的瞬间和时区。</li><li>offset(Clock baseClock, Duration offsetDuration)：静态方法，返回一个相对于基准时钟偏移指定持续时间的时钟。</li><li>millis()：实例方法，返回从1970年1月1日午夜开始的毫秒数。</li><li>instant()：实例方法，返回当前时钟的当前瞬间。</li><li>getZone()：实例方法，返回时钟的时区信息。</li></ul><h3 id="示例代码-4"><a href="#示例代码-4" class="headerlink" title="示例代码:"></a>示例代码:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.time.Clock;</span><br><span class="line"><span class="keyword">import</span> java.time.Duration;</span><br><span class="line"><span class="keyword">import</span> java.time.Instant;</span><br><span class="line"><span class="keyword">import</span> java.time.ZoneId;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="keyword">class</span> <span class="title class_">Test</span> &#123;</span><br><span class="line">    <span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title function_">main</span><span class="params">(String[] args)</span> &#123;</span><br><span class="line">        <span class="comment">// 获取系统默认时区的时钟</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">systemDefaultClock</span> <span class="operator">=</span> Clock.systemDefaultZone();</span><br><span class="line">        System.out.println(<span class="string">&quot;系统默认时钟：&quot;</span> + systemDefaultClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取使用协调世界时（UTC）的系统时钟</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">systemUTCClock</span> <span class="operator">=</span> Clock.systemUTC();</span><br><span class="line">        System.out.println(<span class="string">&quot;系统UTC时钟：&quot;</span> + systemUTCClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个滴答时钟，每次前进1秒钟</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">tickClock</span> <span class="operator">=</span> Clock.tick(systemDefaultClock, Duration.ofSeconds(<span class="number">1</span>));</span><br><span class="line">        System.out.println(<span class="string">&quot;滴答时钟：&quot;</span> + tickClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个固定的时钟，始终返回指定的瞬间和时区</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">fixedInstant</span> <span class="operator">=</span> Instant.parse(<span class="string">&quot;2022-01-01T00:00:00Z&quot;</span>);</span><br><span class="line">        <span class="type">ZoneId</span> <span class="variable">fixedZone</span> <span class="operator">=</span> ZoneId.of(<span class="string">&quot;Asia/Shanghai&quot;</span>);<span class="comment">//亚洲/上海</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">fixedClock</span> <span class="operator">=</span> Clock.fixed(fixedInstant, fixedZone);</span><br><span class="line">        System.out.println(<span class="string">&quot;固定时钟：&quot;</span> + fixedClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 创建一个相对于基准时钟偏移10秒钟的时钟</span></span><br><span class="line">        <span class="type">Clock</span> <span class="variable">baseClock</span> <span class="operator">=</span> Clock.systemDefaultZone();</span><br><span class="line">        <span class="type">Duration</span> <span class="variable">offsetDuration</span> <span class="operator">=</span> Duration.ofSeconds(<span class="number">10</span>);</span><br><span class="line">        <span class="type">Clock</span> <span class="variable">offsetClock</span> <span class="operator">=</span> Clock.offset(baseClock, offsetDuration);</span><br><span class="line">        System.out.println(<span class="string">&quot;偏移时钟：&quot;</span> + offsetClock);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取当前时钟的毫秒数</span></span><br><span class="line">        <span class="type">long</span> <span class="variable">millis</span> <span class="operator">=</span> systemDefaultClock.millis();</span><br><span class="line">        System.out.println(<span class="string">&quot;毫秒数：&quot;</span> + millis);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取当前时钟的当前瞬间</span></span><br><span class="line">        <span class="type">Instant</span> <span class="variable">instant</span> <span class="operator">=</span> systemDefaultClock.instant();</span><br><span class="line">        System.out.println(<span class="string">&quot;当前瞬间：&quot;</span> + instant);</span><br><span class="line"></span><br><span class="line">        <span class="comment">// 获取当前时钟的时区信息</span></span><br><span class="line">        <span class="type">ZoneId</span> <span class="variable">zone</span> <span class="operator">=</span> systemDefaultClock.getZone();</span><br><span class="line">        System.out.println(<span class="string">&quot;时区：&quot;</span> + zone);</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h3 id="运行结果-3"><a href="#运行结果-3" class="headerlink" title="运行结果:"></a>运行结果:</h3><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line">系统默认时钟：SystemClock[Asia/Shanghai]</span><br><span class="line">系统UTC时钟：SystemClock[Z]</span><br><span class="line">滴答时钟：TickClock[SystemClock[Asia/Shanghai],PT1S]</span><br><span class="line">固定时钟：FixedClock[<span class="number">2022</span>-<span class="number">01</span>-01T00:<span class="number">00</span>:00Z,Asia/Shanghai]</span><br><span class="line">偏移时钟：OffsetClock[SystemClock[Asia/Shanghai],PT10S]</span><br><span class="line">毫秒数：<span class="number">1698211710976</span></span><br><span class="line">当前瞬间：<span class="number">2023</span>-<span class="number">10</span>-25T05:<span class="number">28</span>:<span class="number">30.</span>976562Z</span><br><span class="line">时区：Asia/Shanghai</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Java基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Java </tag>
            
            <tag> 开发语言 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的个人乐库管理系统</title>
      <link href="/2023/10/24/00020/"/>
      <url>/2023/10/24/00020/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的个人乐库管理系统，采用面向对象的思维进行设计，包含以下功能模块：</p><ul><li>歌曲添加</li><li>歌曲删除</li><li>歌曲修改</li><li>歌曲查询</li><li>歌曲浏览</li><li>个人收藏夹</li><li>歌曲分组显示</li><li>清空系统数据</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><p>主菜单界面</p><p><img src="/img/images/00020/00020_2.png" alt="一"></p><p>歌曲浏览功能界面</p><p><img src="/img/images/00020/00020_3.png" alt="二"></p><p>个人收藏夹功能界面</p><p><img src="/img/images/00020/00020_4.png" alt="三"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//歌曲类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Song</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;       <span class="comment">//歌曲名</span></span><br><span class="line">string singer;     <span class="comment">//演唱者</span></span><br><span class="line">string author;     <span class="comment">//作词</span></span><br><span class="line">string composer;   <span class="comment">//作曲</span></span><br><span class="line">string album;      <span class="comment">//所属专辑</span></span><br><span class="line">string length;     <span class="comment">//歌曲时长</span></span><br><span class="line">string language;   <span class="comment">//语言</span></span><br><span class="line">string date;       <span class="comment">//发行日期</span></span><br><span class="line"><span class="type">int</span> hot;           <span class="comment">//热度 初始值为0 每被查找一次  热度+1</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">Song</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Song</span>(string name, string singer, string author, string composer, string album, string length, string language, string date, <span class="type">int</span> hot)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;singer = singer;</span><br><span class="line"><span class="keyword">this</span>-&gt;author = author;</span><br><span class="line"><span class="keyword">this</span>-&gt;composer = composer;</span><br><span class="line"><span class="keyword">this</span>-&gt;album = album;</span><br><span class="line"><span class="keyword">this</span>-&gt;length = length;</span><br><span class="line"><span class="keyword">this</span>-&gt;language = language;</span><br><span class="line"><span class="keyword">this</span>-&gt;date = date;</span><br><span class="line"><span class="keyword">this</span>-&gt;hot = hot;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Song</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性值：把歌曲对象的所有属性值格式化输出在一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showSongInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; name;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; singer;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  author;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; composer;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; album;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; length;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; language ;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; date;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; hot &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性值：把歌曲对象的所有属性名格式化输出在一行</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;歌曲名&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;演唱者&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  <span class="string">&quot;作词&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;作曲&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;所属专辑&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;歌曲长度&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;语言&quot;</span> ;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;发行日期&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;热度&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//个人乐库管理系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">SongSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//以下为 SongSystem 类中的所有属性</span></span><br><span class="line">vector&lt;Song&gt; songs;   <span class="comment">//乐库：包含所有的歌曲</span></span><br><span class="line">vector&lt;Song&gt; mySongs; <span class="comment">//个人收藏夹</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//以下为 SongSystem 类中的所有方法</span></span><br><span class="line"><span class="comment">//加【】的方法对应主菜单中的某一项功能</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">SongSystem</span>();</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">SongSystem</span>(vector&lt;Song&gt; songs, vector&lt;Song&gt; mySongs);</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">SongSystem</span>();</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//主菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【歌曲添加】： 输入的歌曲的各项属性 添加至乐库中</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【歌曲删除】： 输入歌曲名、演唱者，通过这两个属性 定位到某一首歌曲（精确查找） ，然后选择是否删除这首歌曲</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【歌曲修改】： 输入歌曲名、演唱者，通过这两个属性 定位到某一首歌曲（精确查找） ，然后选择是否修改这首歌曲</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【歌曲查找】： 关键词可以选择歌曲名或者演唱者，这里所用的查找方式为模糊匹配查找</span></span><br><span class="line"><span class="comment">//例如：查找歌曲 “背对背拥抱”，输入关键词 “背对背 ”即可查找到</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历歌曲列表：输出容器 ss 内所有歌曲</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displaySong</span><span class="params">(vector&lt;Song&gt;&amp; ss)</span></span>;</span><br><span class="line"><span class="comment">//遍历歌曲列表：输出容器 ss 内 前 n 首歌曲，不满 n 首则全部输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displaySong</span><span class="params">(vector&lt;Song&gt;&amp; ss, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//【歌曲浏览】： 1.打印输出乐库所有歌曲的表单   2.打印输出热歌榜（按歌曲热度从高到低取前10首）</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【个人收藏夹】：用户可以选择乐库中的歌曲 添加至 个人收藏夹中，也可以从自己的收藏夹中删除歌曲</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">favorites</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【歌曲分组显示】 按演唱者对乐库中所有歌曲进行分组并输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">groupList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//【清空系统数据】</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//以下为 SongSystem 类中所有方法的具体实现</span></span><br><span class="line"><span class="comment">//无参构造</span></span><br><span class="line">SongSystem::<span class="built_in">SongSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line">SongSystem::<span class="built_in">SongSystem</span>(vector&lt;Song&gt; songs, vector&lt;Song&gt; mySongs)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;songs = songs;</span><br><span class="line"><span class="keyword">this</span>-&gt;mySongs = mySongs;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">SongSystem::~<span class="built_in">SongSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化系统：从文件中读取信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主菜单：用户可以在此界面调用系统各个功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t**********欢迎来到个人乐库管理系统**********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t你可以进行以下操作:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             1   歌曲添加                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             2   歌曲删除                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             3   歌曲修改                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             4   歌曲查找                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             5   歌曲浏览                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             6   个人收藏夹               |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             7   歌曲分组显示             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             8   清空系统数据             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             0   退出                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertList</span>();  <span class="comment">//歌曲添加</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteList</span>();  <span class="comment">//歌曲删除</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateList</span>();  <span class="comment">//歌曲修改</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectList</span>();  <span class="comment">//歌曲查找</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayList</span>(); <span class="comment">//歌曲浏览</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">favorites</span>();   <span class="comment">//个人收藏夹</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">groupList</span>();   <span class="comment">//歌曲分组显示</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearList</span>();   <span class="comment">//清空系统数据</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);             <span class="comment">//退出</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;songs.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="comment">//读取乐库的歌曲</span></span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//读取乐库歌曲的数量，同时也是接下来循环的循环次数</span></span><br><span class="line">ifs &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">Song s;</span><br><span class="line">ifs &gt;&gt; s.name &gt;&gt; s.singer &gt;&gt; s.author &gt;&gt; s.composer &gt;&gt; s.album &gt;&gt; s.length &gt;&gt; s.language &gt;&gt; s.date &gt;&gt; s.hot;</span><br><span class="line">songs.<span class="built_in">push_back</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取个人收藏夹歌曲的数量，同时也是接下来循环的循环次数</span></span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">ifs &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">Song s;</span><br><span class="line">ifs &gt;&gt; s.name &gt;&gt; s.singer &gt;&gt; s.author &gt;&gt; s.composer &gt;&gt; s.album &gt;&gt; s.length &gt;&gt; s.language &gt;&gt; s.date &gt;&gt; s.hot;</span><br><span class="line">mySongs.<span class="built_in">push_back</span>(s);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;songs.txt&quot;</span>, ios::out);</span><br><span class="line"><span class="comment">//把乐库歌曲的数量的值写入到文件中</span></span><br><span class="line">ofs &lt;&lt; songs.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="comment">//把乐库所有歌曲的信息写入至文件songs.txt中，每行一首歌曲</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; songs[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].singer &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].author</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].composer&lt;&lt; <span class="string">&quot; &quot;</span>  &lt;&lt; songs[i].album &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].length</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].language &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].date &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; songs[i].hot &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//把个人收藏夹歌曲的数量的值写入到文件中</span></span><br><span class="line">ofs &lt;&lt; mySongs.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="comment">//把个人收藏夹所有歌曲的信息写入至文件songs.txt中，每行一首歌曲</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; mySongs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; mySongs[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].singer &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].author</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].composer&lt;&lt; <span class="string">&quot; &quot;</span>  &lt;&lt; mySongs[i].album &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].length</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].language &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].date &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; mySongs[i].hot &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//关闭文件</span></span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【歌曲添加】</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::insertList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t**************************************欢迎来到歌曲添加功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//1. 输出乐库所有歌曲，供用户查看</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t乐库【&quot;</span> &lt;&lt; songs.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;首】：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;songs);</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="comment">//2. 用户选择是否添加歌曲</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加歌曲信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请选择【1-2】：&quot;</span>;</span><br><span class="line">string sel;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Song s;</span><br><span class="line"><span class="comment">//3. 用户输入歌曲信息</span></span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入歌曲信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.singer;</span><br><span class="line"><span class="comment">//4. 输入歌曲名、演唱者后，将这两个信息与乐库已存在的歌曲作对比，如果有重复则给出提示</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s.name == songs[i].name &amp;&amp; s.singer == songs[i].singer)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该首歌曲信息已存在，请勿重复添加！&quot;</span> &lt;&lt; endl;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t作词：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.author;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t作曲：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.composer;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t所属专辑：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.album;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t歌曲时长：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.length;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t语言：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.language;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t发行日期（yyyy-mm-dd格式输入）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.date;</span><br><span class="line"><span class="comment">//初始热度定义为 0</span></span><br><span class="line">s.hot = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//5. 将刚才输入无误的歌曲 添加至乐库歌曲容器 songs 中</span></span><br><span class="line">songs.<span class="built_in">push_back</span>(s);</span><br><span class="line"><span class="comment">//数据有所变化，将实时数据保存至文件</span></span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t该首歌曲信息添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【歌曲删除】： 输入歌曲名、演唱者，定位到歌曲 ，然后进行删除</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::deleteList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t**************************************欢迎来到歌曲删除功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//1. 输出乐库所有歌曲，供用户查看</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t乐库【&quot;</span> &lt;&lt; songs.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;首】：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;songs); <span class="comment">//遍历歌曲列表</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="comment">//2. 用户选择是否删除歌曲</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按歌曲名、演唱者删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//3. 输入歌曲名、演唱者后，将这两个信息与乐库已存在的歌曲作对比，如果匹配成功则给出是否确认删除的提示</span></span><br><span class="line">string keyName, keySinger;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除歌曲的歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除歌曲的演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keySinger;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Song&gt;::iterator it = songs.<span class="built_in">begin</span>(); it != songs.<span class="built_in">end</span>(); ++it) <span class="comment">//用迭代器遍历歌曲列表</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;name == keyName &amp;&amp; it-&gt;singer == keySinger) <span class="comment">//如果歌曲名和演唱者信息都匹配成功</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除歌曲的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showSongInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t确认删除？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">songs.<span class="built_in">erase</span>(it); <span class="comment">//调用vector容器的成员函数 erase()</span></span><br><span class="line"><span class="built_in">writeFile</span>();     <span class="comment">//将变化后的数据写入到文件songs.txt中</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到此首歌曲，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【歌曲修改】： 输入歌曲名、演唱者，定位到歌曲 ，然后进行修改</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::updateList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t**************************************欢迎来到歌曲修改功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//1. 输出乐库所有歌曲，供用户查看</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t乐库【&quot;</span> &lt;&lt; songs.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;首】：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;songs); <span class="comment">//遍历歌曲列表</span></span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 修改歌曲信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyName, keySinger;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改歌曲的歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改歌曲的演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keySinger;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (songs[i].name == keyName &amp;&amp; songs[i].singer == keySinger) <span class="comment">//如果歌曲名和演唱者信息都匹配成功</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改歌曲的基本信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">songs[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Song s = songs[i];</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入修改后的歌曲信息：&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.name;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.singer;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; songs.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果修改后的歌曲名和演唱者和歌曲列表中其他歌曲重复</span></span><br><span class="line"><span class="keyword">if</span>(s.name == songs[j].name &amp;&amp; s.singer == songs[j].singer &amp;&amp; i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t无法修改为已经添加进系统中的歌曲！&quot;</span> &lt;&lt; endl;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t作词：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.author;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t作曲：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.composer;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t所属专辑：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.album;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t歌曲时长：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.length;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t语言：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.language;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t发行日期（yyyy-mm-dd格式输入）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.date;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">songs[i] = s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到此首歌曲，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【歌曲查找】：关键词可以选择歌曲名或者演唱者</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::selectList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************************欢迎来到歌曲查找功能***************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//这里的查找功能均采用模糊查找</span></span><br><span class="line"><span class="comment">//例：需要查找歌曲 “背对背拥抱 ”，那么输入“背对背 ”即可</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按歌曲名查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 按演唱者查找&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询歌曲的歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(songs[i].name.<span class="built_in">find</span>(keyName) != string::npos)  <span class="comment">//模糊查找  找到了</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">songs[i].hot += <span class="number">1</span>;  <span class="comment">//热度+1</span></span><br><span class="line"><span class="comment">//更新收藏夹里的歌曲的热度</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span>  j = <span class="number">0</span>; j &lt; mySongs.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(songs[i].name == mySongs[j].name &amp;&amp; songs[i].singer == mySongs[j].singer)</span><br><span class="line">&#123;</span><br><span class="line">mySongs[j] = songs[i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">songs[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到此首歌曲！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keySinger;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询歌曲的演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keySinger;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(songs[i].singer.<span class="built_in">find</span>(keySinger) != string::npos)  <span class="comment">//模糊查找  找到了</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">songs[i].hot += <span class="number">1</span>;  <span class="comment">//没被查找一次则该歌曲热度+1</span></span><br><span class="line">songs[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到该歌手的歌曲！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历歌曲容器ss  这个函数是为了实现 歌曲浏览 功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::displaySong</span><span class="params">(vector&lt;Song&gt;&amp; ss)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">ss[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历歌曲容器ss  最多输出前 n 首歌曲，这个函数是为了实现 热歌榜  功能</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::displaySong</span><span class="params">(vector&lt;Song&gt;&amp; ss, <span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> num = n &lt; ss.<span class="built_in">size</span>() ? n : ss.<span class="built_in">size</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; num; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">ss[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将歌曲列表按演唱者姓名字典序升序排列, cmp1函数为sort函数的参数，代表排序规则</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmp1</span><span class="params">(<span class="type">const</span> Song&amp; s1,<span class="type">const</span> Song&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> s1.singer &lt; s2.singer;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//将歌曲列表按热度降序排列, cmp2函数为sort函数的参数，代表排序规则</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmp2</span><span class="params">(<span class="type">const</span> Song&amp; s1,<span class="type">const</span> Song&amp; s2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> s1.hot &gt; s2.hot;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【歌曲浏览】</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::displayList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************************欢迎来到歌曲浏览功能***************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 浏览乐库&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 浏览热歌榜&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t乐库【&quot;</span> &lt;&lt; songs.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;首】：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">sort</span>(songs.<span class="built_in">begin</span>(), songs.<span class="built_in">end</span>(), cmp1); <span class="comment">//将歌曲列表按演唱者姓名字典序升序排列</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;songs);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t热歌榜：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">sort</span>(songs.<span class="built_in">begin</span>(), songs.<span class="built_in">end</span>(), cmp2); <span class="comment">//将歌曲列表按热度降序排列，即热歌榜</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;songs, <span class="number">10</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【个人收藏夹】用户可以通过个人收藏夹功能收藏乐库中的歌曲或者将收藏夹中的歌曲删除</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::favorites</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************************欢迎来到个人收藏夹功能*************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t我的收藏夹【目前&quot;</span> &lt;&lt; mySongs.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot;首歌曲】：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">sort</span>(mySongs.<span class="built_in">begin</span>(), mySongs.<span class="built_in">end</span>(), cmp1); <span class="comment">//将歌曲列表按演唱者姓名字典序升序排列</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displaySong</span>(<span class="keyword">this</span>-&gt;mySongs);</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加歌曲至个人收藏夹&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 从个人收藏夹删除歌曲&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line">Song s;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待添加歌曲的歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(songs[i].name.<span class="built_in">find</span>(keyName) != string::npos)  <span class="comment">//模糊查找  找到了</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">s = songs[i];</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">songs[i].<span class="built_in">showSongInfo</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到此首歌曲！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认收藏？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">mySongs.<span class="built_in">push_back</span>(s);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t收藏成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName, keySinger;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除歌曲的歌曲名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除歌曲的演唱者：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keySinger;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Song&gt;::iterator it = mySongs.<span class="built_in">begin</span>(); it != mySongs.<span class="built_in">end</span>(); ++it) <span class="comment">//用迭代器遍历歌曲列表</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;name == keyName &amp;&amp; it-&gt;singer == keySinger) <span class="comment">//如果歌曲名和演唱者信息都匹配成功</span></span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除歌曲的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showSongInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t确认删除？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">mySongs.<span class="built_in">erase</span>(it); <span class="comment">//调用删除函数</span></span><br><span class="line"><span class="built_in">writeFile</span>();     <span class="comment">//写入文件</span></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t系统中无法查询到此首歌曲，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//歌曲分组显示 按演唱者分组</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::groupList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到歌曲分组显示功能**************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t歌曲分组显示：&quot;</span>&lt;&lt; endl &lt;&lt; endl;</span><br><span class="line"><span class="comment">//定义STL集合ss  集合set特点：插入元素时自动去重 升序排列</span></span><br><span class="line">set&lt;string&gt; ss;</span><br><span class="line"><span class="comment">//将乐库中所有歌曲的歌手姓名添加至集合 ss 中</span></span><br><span class="line"><span class="comment">//这一步是为了不重复地获取乐库中所有的歌手姓名</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; songs.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line">ss.<span class="built_in">insert</span>(songs[i].singer);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//利用迭代器遍历集合ss</span></span><br><span class="line"><span class="keyword">for</span>(set&lt;string&gt;::iterator it = ss.<span class="built_in">begin</span>(); it != ss.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; cnt &lt;&lt; <span class="string">&quot;组--演唱者：&quot;</span> &lt;&lt; (*it) &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Song::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; songs.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(songs[j].singer == (*it))</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">songs[j].<span class="built_in">showSongInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//【清空系统数据】：清空系统所有数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">SongSystem::clearList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到清空系统数据功能*************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">songs.<span class="built_in">clear</span>();</span><br><span class="line">mySongs.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">SongSystem ssy;  <span class="comment">//定义个人乐库管理系统类的对象</span></span><br><span class="line">ssy.<span class="built_in">init</span>();      <span class="comment">//初始化</span></span><br><span class="line">ssy.<span class="built_in">menu</span>();      <span class="comment">//调用 ssy 的主菜单 menu() 函数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的学生选课管理系统</title>
      <link href="/2023/10/23/00019/"/>
      <url>/2023/10/23/00019/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的学生选课管理系统，采用面向对象的思维进行设计，包含管理员和学生两个功能模块。</p><h2 id="管理员模块"><a href="#管理员模块" class="headerlink" title="管理员模块"></a>管理员模块</h2><ul><li>添加课程信息</li><li>删除课程信息</li><li>修改课程信息</li><li>查询课程信息</li><li>学生信息管理</li><li>课程信息一览表</li><li>课程排序</li><li>清空系统数据</li><li>注销登录</li></ul><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><ul><li>课程信息一览表</li><li>选课</li><li>退课</li><li>注销登录</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><p>添加课程信息界面</p><p><img src="/img/images/00019/00019_2.png" alt="一"></p><p>学生信息管理功能界面</p><p><img src="/img/images/00019/00019_3.png" alt="二"></p><p>选课功能界面</p><p><img src="/img/images/00019/00019_4.png" alt="三"></p><p>退课功能界面</p><p><img src="/img/images/00019/00019_5.png" alt="四"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//课程类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Course</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string cNum;       <span class="comment">//课程编号</span></span><br><span class="line">string cName;      <span class="comment">//课程名称</span></span><br><span class="line"><span class="type">double</span> cCredit;    <span class="comment">//课程学分</span></span><br><span class="line"><span class="type">double</span> cTime;      <span class="comment">//课程学时</span></span><br><span class="line">string cMethod;    <span class="comment">//考核方式：考试 or 考察</span></span><br><span class="line">string cNature;    <span class="comment">//课程性质：选修 or 必修  or 素质</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">Course</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Course</span>(string cNum, string cName, <span class="type">double</span> cCredit, <span class="type">double</span> cTime, string cMethod, string cNature)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;cNum = cNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;cName = cName;</span><br><span class="line"><span class="keyword">this</span>-&gt;cCredit = cCredit;</span><br><span class="line"><span class="keyword">this</span>-&gt;cTime = cTime;</span><br><span class="line"><span class="keyword">this</span>-&gt;cMethod = cMethod;</span><br><span class="line"><span class="keyword">this</span>-&gt;cNature = cNature;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出课程表的某一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showCourseInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; cNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt; cName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; cCredit;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; cTime;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; cMethod;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; cNature &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出课程表表头</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;课程编号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt; <span class="string">&quot;课程名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;课程学分&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;课程学时&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;考核方式&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;课程属性&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//人类 用来实例化管理员的</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string num;   <span class="comment">//账号</span></span><br><span class="line">string pwd;   <span class="comment">//密码</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(string num, string pwd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;num = num;</span><br><span class="line"><span class="keyword">this</span>-&gt;pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//学生类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Student</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string stuNum;         <span class="comment">//学号</span></span><br><span class="line">string stuName;        <span class="comment">//姓名</span></span><br><span class="line">string gradeNum;       <span class="comment">//年级</span></span><br><span class="line">string department;     <span class="comment">//专业</span></span><br><span class="line">string classNum;       <span class="comment">//班级</span></span><br><span class="line">vector&lt;Course&gt; clist;  <span class="comment">//所选课程</span></span><br><span class="line"><span class="type">int</span> ctSize;            <span class="comment">//选课门数</span></span><br><span class="line">string pwd;            <span class="comment">//教务密码</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Student</span>(string stuNum, string stuName, string gradeNum, string department, string classNum,vector&lt;Course&gt; clist, <span class="type">int</span> ctSize, string pwd)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;stuNum = stuNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;stuName = stuName;</span><br><span class="line"><span class="keyword">this</span>-&gt;gradeNum = gradeNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;department = department;</span><br><span class="line"><span class="keyword">this</span>-&gt;classNum = classNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;clist = clist;</span><br><span class="line"><span class="keyword">this</span>-&gt;ctSize = ctSize;</span><br><span class="line"><span class="keyword">this</span>-&gt;pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Student</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//学生信息表的某一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showStudentInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; stuNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  stuName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; gradeNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">25</span>) &lt;&lt; department;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; classNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; ctSize;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; pwd &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">////学生信息表的表头</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;学号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  <span class="string">&quot;姓名&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;年级&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">25</span>) &lt;&lt; <span class="string">&quot;专业&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;班级&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">15</span>) &lt;&lt; <span class="string">&quot;选课数量&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;教务密码&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选课管理系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">CourseSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Course&gt; cs;   <span class="comment">//课程列表</span></span><br><span class="line">vector&lt;Student&gt; ss;  <span class="comment">//学生列表</span></span><br><span class="line">Person admin;        <span class="comment">//管理员</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">CourseSystem</span>();</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">CourseSystem</span>(vector&lt;Course&gt; cs, vector&lt;Student&gt; ss, Person admin);</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">CourseSystem</span>();</span><br><span class="line"><span class="comment">//设置管理员的账号密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAdmin</span><span class="params">(string num, string pwd)</span></span>;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//登录菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//登录函数：学生和管理员都通过login函数登录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">login</span><span class="params">(string sel)</span></span>;</span><br><span class="line"><span class="comment">//管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">aMenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//学生菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sMenu</span><span class="params">(Student&amp; s)</span></span>;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历课程列表 即遍历容器cs</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历学生列表 即遍历容器ss</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseSs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//添加课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//删除课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//修改课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//查询课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//管理学生功能：包含添加学生和删除学生  </span></span><br><span class="line"><span class="comment">//管理员在这里添加学生信息后  就可以用学生信息进行学生登录  账号：学生学号  密码：学生教务密码 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">managePs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//课程信息一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//将课程列表按课程编号升序排列</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmpNum</span><span class="params">(<span class="type">const</span> Course&amp; c1,<span class="type">const</span> Course&amp; c2)</span></span>;</span><br><span class="line"><span class="comment">//将课程列表按课程学分升序排列,学分相同则按编号升序排列</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmpCredit</span><span class="params">(<span class="type">const</span> Course&amp; c1,<span class="type">const</span> Course&amp; c2)</span></span>;</span><br><span class="line"><span class="comment">//课程排序：1.按课程编号排序  2.按课程学分排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sortCs</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//清空系统数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearSystem</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//学生选课</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertClist</span><span class="params">(Student&amp; s)</span></span>;</span><br><span class="line"><span class="comment">//学生退课</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteClist</span><span class="params">(Student&amp; s)</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类  无参构造函数  类外实现 </span></span><br><span class="line">CourseSystem::<span class="built_in">CourseSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类  有参构造函数  类外实现 </span></span><br><span class="line">CourseSystem::<span class="built_in">CourseSystem</span>(vector&lt;Course&gt; cs, vector&lt;Student&gt; ss, Person admin)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;cs = cs;</span><br><span class="line"><span class="keyword">this</span>-&gt;ss = ss;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin = admin;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类  析构函数  类外实现 </span></span><br><span class="line">CourseSystem::~<span class="built_in">CourseSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类  设置管理员的账号密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::setAdmin</span><span class="params">(string num, string pwd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.num = num;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类 登录菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t*********欢迎来到学生选课管理系统***********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t你可以进行以下操作:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             1   管理员登录               |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             2   学生登录                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             0   退出                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 登录函数：学生和管理员都通过login函数登录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::login</span><span class="params">(string sel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t请填写用户信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person p;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入账号：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.num;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line"><span class="keyword">if</span>(p.num == <span class="keyword">this</span>-&gt;admin.num &amp;&amp; p.pwd == <span class="keyword">this</span>-&gt;admin.pwd)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t管理员登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">Student s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入账号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.stuNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.pwd;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;ss.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s.stuNum == ss[i].stuNum &amp;&amp; s.pwd == ss[i].pwd)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t学生登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sMenu</span>(ss[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::aMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t***********欢迎来到学生选课管理系统****************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.num &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               1   添加课程信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               2   删除课程信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               3   修改课程信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               4   查询课程信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               5   学生信息管理                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               6   课程信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               7   课程排序                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               8   清空系统数据                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">managePs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sortCs</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearSystem</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 学生菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::sMenu</span><span class="params">(Student&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t**********欢迎来到学生选课系统**************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; s.stuName &lt;&lt;<span class="string">&quot;（学生）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        1   课程信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        2   选课                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        3   退课                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayCs</span>(); <span class="comment">//课程信息一览表</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sMenu</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertClist</span>(s);  <span class="comment">//报名</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sMenu</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteClist</span>(s);  <span class="comment">//退课</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sMenu</span>(s);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)     <span class="comment">//注销登录</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//读取文件course.txt  对应容器 cs</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;course.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> csSize = <span class="number">0</span>; <span class="comment">//用来接收活动数量的值</span></span><br><span class="line">ifs &gt;&gt; csSize;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; csSize; i++)</span><br><span class="line">&#123;</span><br><span class="line">Course c;</span><br><span class="line">ifs &gt;&gt; c.cNum &gt;&gt; c.cName &gt;&gt; c.cCredit &gt;&gt; c.cTime &gt;&gt; c.cMethod &gt;&gt; c.cNature;</span><br><span class="line">cs.<span class="built_in">push_back</span>(c);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件student  对应容器 ss</span></span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;student.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> ssSize = <span class="number">0</span>; <span class="comment">//用来接收学生数量的值</span></span><br><span class="line">jfs &gt;&gt; ssSize;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ssSize; i++)</span><br><span class="line">&#123;</span><br><span class="line">Student s;</span><br><span class="line">jfs &gt;&gt; s.stuNum &gt;&gt; s.stuName &gt;&gt; s.gradeNum &gt;&gt; s.department &gt;&gt; s.classNum &gt;&gt; s.ctSize &gt;&gt; s.pwd;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; s.ctSize; j++)</span><br><span class="line">&#123;</span><br><span class="line">Course cc;</span><br><span class="line">jfs &gt;&gt; cc.cNum &gt;&gt; cc.cName &gt;&gt; cc.cCredit &gt;&gt; cc.cTime &gt;&gt; cc.cMethod &gt;&gt; cc.cNature;</span><br><span class="line">s.clist.<span class="built_in">push_back</span>(cc);</span><br><span class="line">&#125;</span><br><span class="line">ss.<span class="built_in">push_back</span>(s);</span><br><span class="line">&#125;</span><br><span class="line">jfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类 写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//写入文件course.txt  对应容器 cs</span></span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;course.txt&quot;</span>, ios::out);</span><br><span class="line">ofs &lt;&lt; cs.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入课程数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; cs[i].cNum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cs[i].cName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cs[i].cCredit &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">    &lt;&lt; cs[i].cTime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cs[i].cMethod &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; cs[i].cNature &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件student.txt  对应容器 ss</span></span><br><span class="line">ofstream pfs;</span><br><span class="line">pfs.<span class="built_in">open</span>(<span class="string">&quot;student.txt&quot;</span>, ios::out);</span><br><span class="line">pfs &lt;&lt; ss.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入课程数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; ss[i].stuNum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].stuName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].gradeNum &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">    &lt;&lt; ss[i].department &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].classNum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].clist.<span class="built_in">size</span>() &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].pwd &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ss[i].clist.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; ss[i].clist[j].cNum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].clist[j].cName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].clist[j].cCredit &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">    &lt;&lt; ss[i].clist[j].cTime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].clist[j].cMethod &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ss[i].clist[j].cNature &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">pfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 遍历课程列表 即遍历容器cs</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::traverseCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 遍历学生列表 即遍历容器ss</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::traverseSs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Student::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">ss[i].<span class="built_in">showStudentInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 添加课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::insertCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到添加课程信息功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加课程信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t开始信息录入：&quot;</span>&lt;&lt;endl;</span><br><span class="line">Course c;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程编号（长度6位）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cNum;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c.cNum == cs[i].cNum)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该课程编号已被其他课程使用，请重新输入！&quot;</span> &lt;&lt; endl;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程学分：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cCredit;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程学时：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t考核方式（考试 or 考察）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cMethod;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程性质（选修 or 必修 or 素质）：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cNature;</span><br><span class="line">cs.<span class="built_in">push_back</span>(c);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t课程信息添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类 删除课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::deleteCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到删除课程信息功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按课程编号删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyNum;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的课程编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Course&gt;::iterator it = cs.<span class="built_in">begin</span>(); it != cs.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;cNum == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t编号&quot;</span> &lt;&lt; keyNum &lt;&lt; <span class="string">&quot;课程基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showCourseInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t如果删除该课程，则所有已选择该课程的学生的课表也会将该课程去除！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该课程？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ss.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(vector&lt;Course&gt;::iterator ie = ss[j].clist.<span class="built_in">begin</span>(); ie != ss[j].clist.<span class="built_in">end</span>(); ++ie)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ie-&gt;cNum == it-&gt;cNum)</span><br><span class="line">&#123;</span><br><span class="line">ss[j].clist.<span class="built_in">erase</span>(ie);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cs.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程信息，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 修改课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::updateCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到修改课程信息功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 修改课程信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改课程的编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cs[i].cNum == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改课程当前信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Course c = cs[i];</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的课程名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; cs.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(c.cName == cs[j].cName &amp;&amp; i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该课程名称已被系统录入，请重新输入：&quot;</span> &lt;&lt; endl;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的课程学分：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cCredit;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的课程学时：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的考核方式：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cMethod;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的课程性质：&quot;</span>;</span><br><span class="line">cin &gt;&gt; c.cNature;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ss.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; ss[j].clist.<span class="built_in">size</span>(); k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ss[j].clist[k].cNum == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">ss[j].clist[k] = c;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cs[i] = c;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程信息，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//CourseSystem类 查询课程信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::selectCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到查询课程信息功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按课程编号查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返课程名称查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 按课程学分查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t4 按课程性质查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t5 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-5】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-5】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string key;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询课程的编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t课程基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cs[i].cNum == key)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string key;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询课程的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t课程基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cs[i].cName == key)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> credit;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询课程的学分：&quot;</span>;</span><br><span class="line">cin &gt;&gt; credit;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t课程基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cs[i].cCredit == credit)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string key;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询课程的性质：&quot;</span>;</span><br><span class="line">cin &gt;&gt; key;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t课程基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (cs[i].cNature == key)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此课程！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 管理学生功能：包含添加学生和删除学生 </span></span><br><span class="line"><span class="comment">//管理员在这里添加学生信息后  就可以用学生信息进行学生登录  账号：学生学号  密码：学生教务密码 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::managePs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到学生信息管理功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t学生信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseSs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 删除学生&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Student s;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入学生信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t学号（10位）：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; s.stuNum;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ss.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s.stuNum == ss[i].stuNum)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该学号已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t姓名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.stuName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t年级：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.gradeNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t专业：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.department;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t班级：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.classNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t设置该学生教务系统密码：&quot;</span>;</span><br><span class="line">cin &gt;&gt; s.pwd;</span><br><span class="line">s.ctSize = <span class="number">0</span>;</span><br><span class="line">ss.<span class="built_in">push_back</span>(s);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t添加成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyNum;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除学生的学号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (vector&lt;Student&gt;::iterator it = ss.<span class="built_in">begin</span>(); it != ss.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;stuNum == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除学生的基本信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Student::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showStudentInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该学生？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ss.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t查无此人，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 课程信息一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::displayCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到课程信息一览表功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 将课程列表按课程编号升序排列   </span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CourseSystem::cmpNum</span><span class="params">(<span class="type">const</span> Course&amp; c1,<span class="type">const</span> Course&amp; c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> c1.cNum &lt; c2.cNum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 将课程列表按课程学分升序排列,学分相同则按编号升序排列</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">CourseSystem::cmpCredit</span><span class="params">(<span class="type">const</span> Course&amp; c1,<span class="type">const</span> Course&amp; c2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(c1.cNum != c2.cNum) <span class="keyword">return</span> c1.cCredit &lt; c2.cCredit;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> c1.cNum &lt; c2.cNum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 课程排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::sortCs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到课程信息排序功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按课程编号排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 按课程学分排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sort</span>(cs.<span class="built_in">begin</span>(), cs.<span class="built_in">end</span>(), cmpNum);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t按课程编号升序排列如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sort</span>(cs.<span class="built_in">begin</span>(), cs.<span class="built_in">end</span>(), cmpCredit);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t按课程学分升序排列如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 清空系统数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::clearSystem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到清空系统数据功能***************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.num &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cs.<span class="built_in">clear</span>();</span><br><span class="line">ss.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 学生选课</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::insertClist</span><span class="params">(Student&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************************欢迎来到选课功能********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：课程信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseCs</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表2：您的当前课表如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.clist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">s.clist[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 选课&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入想选择的课程编号：&quot;</span>;</span><br><span class="line">Course c;</span><br><span class="line">cin &gt;&gt; c.cNum;</span><br><span class="line"><span class="type">bool</span> check1 = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.clist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(s.clist[i].cNum == c.cNum)</span><br><span class="line">&#123;</span><br><span class="line">check1 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该课程已在您的课表中，无需重复选课！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> check2 = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(cs[i].cNum == c.cNum)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该课程信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cs[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">c = cs[i];</span><br><span class="line">check2 = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check2)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认选择该课程？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">string str;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; str;</span><br><span class="line"><span class="keyword">if</span>(str == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">s.clist.<span class="built_in">push_back</span>(c);</span><br><span class="line">s.ctSize = s.clist.<span class="built_in">size</span>();</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t选课成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t未查询到该课程信息！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//CourseSystem类 学生退课</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">CourseSystem::deleteClist</span><span class="params">(Student&amp; s)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************************欢迎来到退课功能********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表2：已选课程一览表&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.clist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">s.clist[i].<span class="built_in">showCourseInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 退课&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入想退出的课程编号：&quot;</span>;</span><br><span class="line">Course c;</span><br><span class="line">cin &gt;&gt; c.cNum;</span><br><span class="line"><span class="type">bool</span> check1 = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(vector&lt;Course&gt;::iterator it = s.clist.<span class="built_in">begin</span>(); it != s.clist.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(it-&gt;cNum == c.cNum)</span><br><span class="line">&#123;</span><br><span class="line">check1 = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该课程信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Course::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showCourseInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认退出？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">s.clist.<span class="built_in">erase</span>(it);</span><br><span class="line">s.ctSize = s.clist.<span class="built_in">size</span>();</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t退出成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!check1)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t您的课表中没有该课程，无需退出！&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主函数 </span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">CourseSystem csm;</span><br><span class="line">csm.<span class="built_in">init</span>();</span><br><span class="line">csm.<span class="built_in">setAdmin</span>(<span class="string">&quot;admin&quot;</span>,<span class="string">&quot;123&quot;</span>); <span class="comment">//设置管理员的账号和密码</span></span><br><span class="line">csm.<span class="built_in">menu</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可（系统管理员默认账号：admin  密码：123）。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的小超市食品管理系统</title>
      <link href="/2023/10/23/00018/"/>
      <url>/2023/10/23/00018/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的小超市食品管理系统，采用面向对象的思维进行设计，包含以下功能模块：</p><ul><li>显示库存及销售记录</li><li>添加库存食品</li><li>删除库存食品</li><li>修改库存食品</li><li>查询库存食品</li><li>库存食品排序</li><li>食品销售</li><li>清空系统数据</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><ul><li>主菜单界面</li></ul><p><img src="/img/images/00018/00018_2.png" alt="主菜单"></p><ul><li>显示库存及销售记录界面</li></ul><p><img src="/img/images/00018/00018_3.png" alt="界面"></p><ul><li>添加库存食品界面</li></ul><p><img src="/img/images/00018/00018_4.png" alt="界面"></p><ul><li>食品销售界面</li></ul><p><img src="/img/images/00018/00018_5.png" alt="界面"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//获取系统当前时间</span></span><br><span class="line"><span class="function"><span class="type">static</span> string <span class="title">getTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">time_t</span> t = <span class="built_in">time</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tm</span>* now = <span class="built_in">localtime</span>(&amp;t);</span><br><span class="line">std::stringstream time;</span><br><span class="line">time &lt;&lt; now-&gt;tm_year + <span class="number">1900</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mon + <span class="number">1</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mday &lt;&lt; <span class="string">&quot;_&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_hour &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_min &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_sec;</span><br><span class="line"><span class="keyword">return</span> time.<span class="built_in">str</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//食品类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Food</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string foodName;    <span class="comment">//食品名称</span></span><br><span class="line"><span class="type">double</span> foodAmount;  <span class="comment">//食品库存量</span></span><br><span class="line">string foodUnit;    <span class="comment">//食品单位 如 吨、艘、个、斤</span></span><br><span class="line">string foodKind;    <span class="comment">//食品种类</span></span><br><span class="line"><span class="comment">//无参构造</span></span><br><span class="line"><span class="built_in">Food</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造</span></span><br><span class="line"><span class="built_in">Food</span>(string foodName, <span class="type">double</span> foodAmount, string foodUnit,string foodKind)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;foodName = foodName;</span><br><span class="line"><span class="keyword">this</span>-&gt;foodAmount = foodAmount;</span><br><span class="line"><span class="keyword">this</span>-&gt;foodUnit = foodUnit;</span><br><span class="line"><span class="keyword">this</span>-&gt;foodKind = foodKind;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构</span></span><br><span class="line">~<span class="built_in">Food</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showFdInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; foodName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  foodAmount;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  foodUnit;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  foodKind &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性名，只显示总积分</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  <span class="string">&quot;库存量&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;单位&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  <span class="string">&quot;种类&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//销售记录类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Record</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string foodName;    <span class="comment">//食品名称</span></span><br><span class="line"><span class="type">double</span> foodAmount;  <span class="comment">//变更数量</span></span><br><span class="line">string foodUnit;    <span class="comment">//食品单位</span></span><br><span class="line"><span class="type">double</span> foodPrice;   <span class="comment">//售出单价</span></span><br><span class="line"><span class="type">double</span> eachPrice;   <span class="comment">//本单收入</span></span><br><span class="line">string updateTime;  <span class="comment">//发生时间</span></span><br><span class="line"><span class="type">double</span> totalPrice;  <span class="comment">//总的销售额 = 收入 - |支出|</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showRecInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; foodName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt;  foodAmount;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt;  foodUnit;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  foodPrice;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt;  eachPrice;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt;  updateTime &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性名</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt;  <span class="string">&quot;数量&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt;  <span class="string">&quot;单位&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;单价&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;本单收入&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt;  <span class="string">&quot;销售时间&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//超市管理系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FoodSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Food&gt; flist; <span class="comment">//货物库存</span></span><br><span class="line">vector&lt;Record&gt; rlist; <span class="comment">//销售记录</span></span><br><span class="line"><span class="built_in">FoodSystem</span>() &#123; &#125;</span><br><span class="line"><span class="built_in">FoodSystem</span>(vector&lt;Food&gt; flist,vector&lt;Record&gt; rlist)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;flist = flist;</span><br><span class="line"><span class="keyword">this</span>-&gt;rlist = rlist;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//读取库存文件</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;flist.txt&quot;</span>, ios::in);</span><br><span class="line">Food f;</span><br><span class="line"><span class="keyword">while</span>(ifs &gt;&gt; f.foodName &gt;&gt; f.foodAmount &gt;&gt; f.foodUnit &gt;&gt; f.foodKind)</span><br><span class="line">&#123;</span><br><span class="line">flist.<span class="built_in">push_back</span>(f);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//读取操作记录文件</span></span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;rlist.txt&quot;</span>, ios::in);</span><br><span class="line">Record r;</span><br><span class="line"><span class="keyword">while</span>(jfs &gt;&gt; r.foodName &gt;&gt; r.foodAmount &gt;&gt; r.foodUnit &gt;&gt; r.foodPrice &gt;&gt; r.eachPrice &gt;&gt; r.updateTime &gt;&gt; r.totalPrice)</span><br><span class="line">&#123;</span><br><span class="line">rlist.<span class="built_in">push_back</span>(r);</span><br><span class="line">&#125;</span><br><span class="line">jfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//写入库存文件</span></span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;flist.txt&quot;</span>, ios::out);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; flist[i].foodName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; flist[i].foodAmount &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; flist[i].foodUnit &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; flist[i].foodKind &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//写入操作记录文件</span></span><br><span class="line">ofstream pfs;</span><br><span class="line">pfs.<span class="built_in">open</span>(<span class="string">&quot;rlist.txt&quot;</span>, ios::out);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rlist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; rlist[i].foodName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].foodAmount &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].foodUnit</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].foodPrice &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].eachPrice &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].updateTime</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rlist[i].totalPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">pfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t*********欢迎来到小超市食品管理系统*********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        1   显示库存及销售记录            |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        2   添加库存食品                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        3   删除库存食品                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        4   修改库存食品                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        5   查询库存食品                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        6   库存食品排序                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        7   食品销售                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        8   清空系统数据                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        0   退出                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-8】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">display</span>();  <span class="comment">//显示库存</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sortFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">sellFood</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearSystem</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历食品容器 clist</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">flist[i].<span class="built_in">showFdInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历记录容器 rlist</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseRecord</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Record::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rlist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">rlist[i].<span class="built_in">showRecInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示信息列表  包含库存和历史操作记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">display</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t********************欢迎来到显示信息列表功能**********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t表1：超市库存信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseFood</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t食品种类数量（注意：此处按名称细分）：&quot;</span>&lt;&lt;flist.<span class="built_in">size</span>()&lt;&lt;<span class="string">&quot;种&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t\t表2：销售记录信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseRecord</span>();</span><br><span class="line"><span class="keyword">if</span>(rlist.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t当前销售总额： ￥0&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t当前销售总额： ￥&quot;</span>&lt;&lt; rlist.<span class="built_in">back</span>().totalPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加库存食品</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t*****************欢迎来到添加库存食品功能*********************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//显示当前库存信息</span></span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\t\t当前库存：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traverseFood</span>();</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 添加库存食品&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请选择【1-2】：&quot;</span>;</span><br><span class="line">string sel;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Food f;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入添加的食品信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t食品名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; f.foodName;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(f.foodName == flist[i].foodName)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t系统中已存在该食品，如要添加该食品库存，请通过修改功能直接修改此食品库存!&quot;</span>&lt;&lt;endl;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(check) <span class="keyword">break</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t添加数量：&quot;</span>;</span><br><span class="line">cin&gt;&gt;f.foodAmount;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t食品单位：&quot;</span>;</span><br><span class="line">cin&gt;&gt;f.foodUnit;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t食品种类：&quot;</span>;</span><br><span class="line">cin&gt;&gt;f.foodKind;</span><br><span class="line">flist.<span class="built_in">push_back</span>(f);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t\t添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除库存食品</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t*********************欢迎来到删除库存食品功能*********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前库存：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traverseFood</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按食品名称删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待删除食品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Food&gt;::iterator it = flist.<span class="built_in">begin</span>(); it != flist.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;foodName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t待删除食品的库存信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showFdInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t确认删除？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">flist.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t超市中没有此类食品，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改食品库存信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t******************欢迎来到修改食品库存信息功能******************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前库存：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traverseFood</span>();</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按食品名称修改库存&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> )</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待修改库存的食品名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flist[i].foodName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t待修改食品的库存信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">flist[i].<span class="built_in">showFdInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Food f;</span><br><span class="line">f.foodName = flist[i].foodName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的食品库存量：&quot;</span>;</span><br><span class="line">cin&gt;&gt; f.foodAmount;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的食品单位：&quot;</span>;</span><br><span class="line">cin &gt;&gt; f.foodUnit;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的食品种类：&quot;</span>;</span><br><span class="line">cin &gt;&gt; f.foodKind;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">flist[i] = f;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t无法查询到此线路，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 查询食品库存信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t****************欢迎来到查询食品库存信息功能******************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按食品名称查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 按食品种类查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询食品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flist[i].foodName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">flist[i].<span class="built_in">showFdInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t超市中不存在此种食品！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyKind;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询食品的种类：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyKind;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; flist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (flist[i].foodKind == keyKind)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">flist[i].<span class="built_in">showFdInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t超市中不存在此类食品！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将食品列表按食品名称字典序升序排列</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">bool</span> <span class="title">cmp</span><span class="params">(<span class="type">const</span> Food&amp; f1,<span class="type">const</span> Food&amp; f2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> f1.foodName &lt; f2.foodName;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sortFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t******************欢迎来到食品排序功能*********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t库存信息表：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traverseFood</span>();</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">string sel;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按食品名称字典序排序&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">sort</span>(flist.<span class="built_in">begin</span>(), flist.<span class="built_in">end</span>(), cmp);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t排序成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//售货 即添加元素到rlist中  从clist中 删除元素</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">sellFood</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t*******************欢迎来到食品销售功能***********************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="comment">//显示当前库存信息</span></span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\t\t超市当前库存：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traverseFood</span>();</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 销售食品&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待售食品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Food&gt;::iterator it = flist.<span class="built_in">begin</span>(); it != flist.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;foodName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>&lt;&lt; it-&gt;foodName &lt;&lt; <span class="string">&quot;的当前库存如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Food::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showFdInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t确认进行销售？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">Record r;</span><br><span class="line">r.foodName = it-&gt;foodName;</span><br><span class="line">r.foodUnit = it-&gt;foodUnit;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t请输入销售数量：&quot;</span>;</span><br><span class="line">cin&gt;&gt;r.foodAmount;</span><br><span class="line"><span class="keyword">while</span>(r.foodAmount &gt; it-&gt;foodAmount)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t已超出库存数量，请重新输入：&quot;</span>;</span><br><span class="line">cin&gt;&gt;r.foodAmount;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t请输入售出单价：&quot;</span>;</span><br><span class="line">cin&gt;&gt;r.foodPrice;</span><br><span class="line">r.eachPrice = r.foodPrice * r.foodAmount;</span><br><span class="line">r.updateTime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line"><span class="keyword">if</span>(rlist.<span class="built_in">size</span>() == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">r.totalPrice = r.foodPrice * r.foodAmount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">r.totalPrice = rlist.<span class="built_in">back</span>().totalPrice + r.foodPrice * r.foodAmount;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(r.foodAmount == it-&gt;foodAmount)</span><br><span class="line">&#123;</span><br><span class="line">flist.<span class="built_in">erase</span>(it);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">it-&gt;foodAmount -= r.foodAmount;</span><br><span class="line">&#125;</span><br><span class="line">rlist.<span class="built_in">push_back</span>(r);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t销售成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t本超市中没有此类食品，无法销售！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空系统数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearSystem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t******************欢迎来到清空系统数据功能*******************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flist.<span class="built_in">clear</span>();</span><br><span class="line">rlist.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FoodSystem fs;</span><br><span class="line">fs.<span class="built_in">init</span>();</span><br><span class="line">fs.<span class="built_in">menu</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>正则表达式</title>
      <link href="/2023/10/23/00016/"/>
      <url>/2023/10/23/00016/</url>
      
        <content type="html"><![CDATA[<p>整理了常用的正则表达式，需要时可供查阅。</p><h2 id="一、校验数字的表达式"><a href="#一、校验数字的表达式" class="headerlink" title="一、校验数字的表达式"></a>一、校验数字的表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line">数字：^[0-9]*$</span><br><span class="line">n位的数字：^\d&#123;n&#125;$</span><br><span class="line">至少n位的数字：^\d&#123;n,&#125;$</span><br><span class="line">m-n位的数字：^\d&#123;m,n&#125;$</span><br><span class="line">零和非零开头的数字：^(0|[1-9][0-9]*)$</span><br><span class="line">非零开头的最多带两位小数的数字：^([1-9][0-9]*)+(.[0-9]&#123;1,2&#125;)?$</span><br><span class="line">带1-2位小数的正数或负数：^(\-)?\d+(\.\d&#123;1,2&#125;)?$</span><br><span class="line">正数、负数、和小数：^(\-|\+)?\d+(\.\d+)?$</span><br><span class="line">有两位小数的正实数：^[0-9]+(.[0-9]&#123;2&#125;)?$</span><br><span class="line">有1~3位小数的正实数：^[0-9]+(.[0-9]&#123;1,3&#125;)?$</span><br><span class="line">非零的正整数：^[1-9]\d*$ 或 ^([1-9][0-9]*)&#123;1,3&#125;$ 或 ^\+?[1-9][0-9]*$</span><br><span class="line">非零的负整数：^\-[1-9][]0-9&quot;*$ 或 ^-[1-9]\d*$</span><br><span class="line">非负整数：^\d+$ 或 ^[1-9]\d*|0$</span><br><span class="line">非正整数：^-[1-9]\d*|0$ 或 ^((-\d+)|(0+))$</span><br><span class="line">非负浮点数：^\d+(\.\d+)?$ 或 ^[1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0$</span><br><span class="line">非正浮点数：^((-\d+(\.\d+)?)|(0+(\.0+)?))$ 或 ^(-([1-9]\d*\.\d*|0\.\d*[1-9]\d*))|0?\.0+|0$</span><br><span class="line">正浮点数：^[1-9]\d*\.\d*|0\.\d*[1-9]\d*$ 或 ^(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*))$</span><br><span class="line">负浮点数：^-([1-9]\d*\.\d*|0\.\d*[1-9]\d*)$ 或 ^(-(([0-9]+\.[0-9]*[1-9][0-9]*)|([0-9]*[1-9][0-9]*\.[0-9]+)|([0-9]*[1-9][0-9]*)))$</span><br><span class="line">浮点数：^(-?\d+)(\.\d+)?$ 或 ^-?([1-9]\d*\.\d*|0\.\d*[1-9]\d*|0?\.0+|0)$</span><br></pre></td></tr></table></figure><br/><h2 id="二、校验字符的表达式"><a href="#二、校验字符的表达式" class="headerlink" title="二、校验字符的表达式"></a>二、校验字符的表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line">汉字：^[\u4e00-\u9fa5]&#123;0,&#125;$</span><br><span class="line">英文和数字：^[A-Za-z0-9]+$ 或 ^[A-Za-z0-9]&#123;4,40&#125;$</span><br><span class="line">长度为3-20的所有字符：^.&#123;3,20&#125;$</span><br><span class="line">由26个英文字母组成的字符串：^[A-Za-z]+$</span><br><span class="line">由26个大写英文字母组成的字符串：^[A-Z]+$</span><br><span class="line">由26个小写英文字母组成的字符串：^[a-z]+$</span><br><span class="line">由数字和26个英文字母组成的字符串：^[A-Za-z0-9]+$</span><br><span class="line">由数字、26个英文字母或者下划线组成的字符串：^\w+$ 或 ^\w&#123;3,20&#125;$</span><br><span class="line">中文、英文、数字包括下划线：^[\u4E00-\u9FA5A-Za-z0-9_]+$</span><br><span class="line">中文、英文、数字但不包括下划线等符号：^[\u4E00-\u9FA5A-Za-z0-9]+$ 或 ^[\u4E00-\u9FA5A-Za-z0-9]&#123;2,20&#125;$</span><br><span class="line">可以输入含有^%&amp;&#x27;,;=?$\&quot;等字符：[^%&amp;&#x27;,;=?$\x22]+</span><br><span class="line">禁止输入含有~的字符：[^~\x22]+</span><br></pre></td></tr></table></figure><br/><h2 id="三、特殊需求表达式"><a href="#三、特殊需求表达式" class="headerlink" title="三、特殊需求表达式"></a>三、特殊需求表达式</h2><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line">Email地址：^\w+([-+.]\w+)*@\w+([-.]\w+)*\.\w+([-.]\w+)*$</span><br><span class="line">域名：[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;(/.[a-zA-Z0-9][-a-zA-Z0-9]&#123;0,62&#125;)+/.?</span><br><span class="line">InternetURL：[a-zA-z]+://[^\s]* 或 ^http://([\w-]+\.)+[\w-]+(/[\w-./?%&amp;=]*)?$</span><br><span class="line">手机号码：^(13[0-9]|14[5|7]|15[0|1|2|3|5|6|7|8|9]|18[0|1|2|3|5|6|7|8|9])\d&#123;8&#125;$</span><br><span class="line">电话号码(&quot;XXX-XXXXXXX&quot;、&quot;XXXX-XXXXXXXX&quot;、&quot;XXX-XXXXXXX&quot;、&quot;XXX-XXXXXXXX&quot;、&quot;XXXXXXX&quot;和&quot;XXXXXXXX)：^((\d&#123;3,4&#125;-)|\d&#123;3.4&#125;-)?\d&#123;7,8&#125;$ </span><br><span class="line">国内电话号码(0511-4405222、021-87888822)：\d&#123;3&#125;-\d&#123;8&#125;|\d&#123;4&#125;-\d&#123;7&#125;</span><br><span class="line">身份证号：</span><br><span class="line">15或18位身份证：^\d&#123;15&#125;|\d&#123;18&#125;$</span><br><span class="line">15位身份证：^[1-9]\d&#123;7&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;3&#125;$</span><br><span class="line">18位身份证：^[1-9]\d&#123;5&#125;[1-9]\d&#123;3&#125;((0\d)|(1[0-2]))(([0|1|2]\d)|3[0-1])\d&#123;4&#125;$</span><br><span class="line">短身份证号码(数字、字母x结尾)：^([0-9])&#123;7,18&#125;(x|X)?$ 或 ^\d&#123;8,18&#125;|[0-9x]&#123;8,18&#125;|[0-9X]&#123;8,18&#125;?$</span><br><span class="line">帐号是否合法(字母开头，允许5-16字节，允许字母数字下划线)：^[a-zA-Z][a-zA-Z0-9_]&#123;4,15&#125;$</span><br><span class="line">密码(以字母开头，长度在6~18之间，只能包含字母、数字和下划线)：^[a-zA-Z]\w&#123;5,17&#125;$</span><br><span class="line">强密码(必须包含大小写字母和数字的组合，不能使用特殊字符，长度在8-10之间)：^(?=.*\d)(?=.*[a-z])(?=.*[A-Z]).&#123;8,10&#125;$  </span><br><span class="line">日期格式：^\d&#123;4&#125;-\d&#123;1,2&#125;-\d&#123;1,2&#125;</span><br><span class="line">一年的12个月(01～09和1～12)：^(0?[1-9]|1[0-2])$</span><br><span class="line">一个月的31天(01～09和1～31)：^((0?[1-9])|((1|2)[0-9])|30|31)$ </span><br><span class="line">钱的输入格式：</span><br><span class="line">1.有四种钱的表示形式我们可以接受:&quot;10000.00&quot; 和 &quot;10,000.00&quot;, 和没有 &quot;分&quot; 的 &quot;10000&quot; 和 &quot;10,000&quot;：^[1-9][0-9]*$ </span><br><span class="line">2.这表示任意一个不以0开头的数字,但是,这也意味着一个字符&quot;0&quot;不通过,所以我们采用下面的形式：^(0|[1-9][0-9]*)$ </span><br><span class="line">3.一个0或者一个不以0开头的数字.我们还可以允许开头有一个负号：^(0|-?[1-9][0-9]*)$ </span><br><span class="line">4.这表示一个0或者一个可能为负的开头不为0的数字.让用户以0开头好了.把负号的也去掉,因为钱总不能是负的吧.下面我们要加的是说明可能的小数部分：^[0-9]+(.[0-9]+)?$ </span><br><span class="line">5.必须说明的是,小数点后面至少应该有1位数,所以&quot;10.&quot;是不通过的,但是 &quot;10&quot; 和 &quot;10.2&quot; 是通过的：^[0-9]+(.[0-9]&#123;2&#125;)?$ </span><br><span class="line">6.这样我们规定小数点后面必须有两位,如果你认为太苛刻了,可以这样：^[0-9]+(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">7.这样就允许用户只写一位小数.下面我们该考虑数字中的逗号了,我们可以这样：^[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">8.1到3个数字,后面跟着任意个 逗号+3个数字,逗号成为可选,而不是必须：^([0-9]+|[0-9]&#123;1,3&#125;(,[0-9]&#123;3&#125;)*)(.[0-9]&#123;1,2&#125;)?$ </span><br><span class="line">备注：这就是最终结果了,别忘了&quot;+&quot;可以用&quot;*&quot;替代如果你觉得空字符串也可以接受的话(奇怪,为什么?)最后,别忘了在用函数时去掉去掉那个反斜杠,一般的错误都在这里</span><br><span class="line">xml文件：^([a-zA-Z]+-?)+[a-zA-Z0-9]+\\.[x|X][m|M][l|L]$</span><br><span class="line">中文字符的正则表达式：[\u4e00-\u9fa5]</span><br><span class="line">双字节字符：[^\x00-\xff]    </span><br><span class="line">(包括汉字在内，可以用来计算字符串的长度(一个双字节字符长度计2，ASCII字符计1))</span><br><span class="line">空白行的正则表达式：\n\s*\r    (可以用来删除空白行)</span><br><span class="line">HTML标记的正则表达式：&lt;(\S*?)[^&gt;]*&gt;.*?&lt;/\1&gt;|&lt;.*? /&gt;    (网上流传的版本太糟糕，上面这个也仅仅能部分，对于复杂的嵌套标记依旧无能为力)</span><br><span class="line">首尾空白字符的正则表达式：^\s*|\s*$或(^\s*)|(\s*$)    (可以用来删除行首行尾的空白字符(包括空格、制表符、换页符等等)，非常有用的表达式)</span><br><span class="line">腾讯QQ号：[1-9][0-9]&#123;4,&#125;    (腾讯QQ号从10000开始)</span><br><span class="line">中国邮政编码：[1-9]\d&#123;5&#125;(?!\d)    (中国邮政编码为6位数字)</span><br><span class="line">IP地址：\d+\.\d+\.\d+\.\d+    (提取IP地址时有用)</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 计算机基础 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> 正则表达式 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的个人财务管理系统</title>
      <link href="/2023/10/23/00017/"/>
      <url>/2023/10/23/00017/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的个人财务管理系统，采用面向对象的思维进行设计，包含以下功能模块：</p><ul><li>添加收支记录</li><li>删除收支记录</li><li>修改收支记录</li><li>查询收支记录</li><li>个人收支记录一览表</li><li>清空系统数据</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><ul><li>主菜单界面</li></ul><p><img src="/img/images/00017/00017_2.png" alt="主菜单"></p><ul><li>个人收支记录一览表界面</li></ul><p><img src="/img/images/00017/00017_3.png" alt="界面"></p><ul><li>添加收支记录界面</li></ul><p><img src="/img/images/00017/00017_4.png" alt="界面"></p><ul><li>查询收支记录界面</li></ul><p><img src="/img/images/00017/00017_5.png" alt="界面"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//收支记录类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Record</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string num;     <span class="comment">//序号  作为主键</span></span><br><span class="line">string date;    <span class="comment">//日期</span></span><br><span class="line"><span class="type">double</span> amount;  <span class="comment">//金额</span></span><br><span class="line">string type;    <span class="comment">//类型  收入 or 支出</span></span><br><span class="line">string remarks; <span class="comment">//备注</span></span><br><span class="line"><span class="built_in">Record</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Record</span>(string num, string date, string type, <span class="type">double</span> amount, string remarks)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;num = num;</span><br><span class="line"><span class="keyword">this</span>-&gt;date = date;</span><br><span class="line"><span class="keyword">this</span>-&gt;type = type;</span><br><span class="line"><span class="keyword">this</span>-&gt;amount = amount;</span><br><span class="line"><span class="keyword">this</span>-&gt;remarks = remarks;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showRecordInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; num;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; date;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; type;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; amount;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; remarks &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;序号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;日期&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;类型&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;金额&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;备注&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//收支记录系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">FinanceSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Record&gt; rs;</span><br><span class="line"><span class="type">double</span> money;</span><br><span class="line"><span class="built_in">FinanceSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">FinanceSystem</span>(vector&lt;Record&gt; rs, <span class="type">double</span> money)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;rs = rs;</span><br><span class="line"><span class="keyword">this</span>-&gt;money = money;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">FinanceSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">(<span class="type">double</span> money)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;money = money; <span class="comment">//设置初始金额</span></span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t*********欢迎来到个人财务管理系统***********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        1   添加收支记录                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        2   删除收支记录                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        3   修改收支记录                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        4   查询收支记录                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        5   个人收支记录一览表            |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        6   清空系统数据                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        0   退出                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-6】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-6】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertRs</span>(); <span class="comment">//添加收支记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteRs</span>(); <span class="comment">//删除收支记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateRs</span>(); <span class="comment">//修改收支记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectRs</span>(); <span class="comment">//查询收支记录</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayRs</span>(); <span class="comment">//显示</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearSystem</span>(); <span class="comment">//清空</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>) <span class="comment">//退出</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;records.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">ifs &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">Record r;</span><br><span class="line">ifs &gt;&gt; r.num &gt;&gt; r.date &gt;&gt; r.amount &gt;&gt; r.type &gt;&gt; r.remarks;</span><br><span class="line">rs.<span class="built_in">push_back</span>(r);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;records.txt&quot;</span>, ios::out);</span><br><span class="line">ofs &lt;&lt; rs.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入收支记录数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; rs[i].num &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rs[i].date &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rs[i].amount &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rs[i].type &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; rs[i].remarks &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历收支记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Record::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">rs[i].<span class="built_in">showRecordInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加收支记录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************欢迎来到添加收支记录信息功能*******************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t个人收支记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseRs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加收支记录&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t开始信息录入：&quot;</span>&lt;&lt;endl;</span><br><span class="line">Record r;</span><br><span class="line"><span class="comment">//编号</span></span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; rs.<span class="built_in">size</span>() + <span class="number">1</span> ;</span><br><span class="line">r.num = ss.<span class="built_in">str</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t日期：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.date;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t类型(支出 or 收入)：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.type;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t金额：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.amount;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t备注：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.remarks;</span><br><span class="line">rs.<span class="built_in">push_back</span>(r);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t收支记录信息添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除收支记录信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************欢迎来到删除收支记录信息功能*******************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t个人收支记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseRs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按收支记录序号删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t注意：删除完成后会自动更新所有记录的序号！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyNum;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的收支记录序号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Record&gt;::iterator it = rs.<span class="built_in">begin</span>(); it != rs.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t序号为&quot;</span> &lt;&lt; keyNum &lt;&lt; <span class="string">&quot;的收支记录如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Record::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showRecordInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该条收支记录？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">rs.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="comment">//删除后更新序号</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; rs.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; j + <span class="number">1</span>;</span><br><span class="line">rs[j].num = ss.<span class="built_in">str</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此条收支记录信息，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改收支记录信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************欢迎来到修改收支记录信息功能*******************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t个人收支记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseRs</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按序号修改收支记录信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改收支记录的序号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (rs[i].num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改收支记录当前信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Record::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">rs[i].<span class="built_in">showRecordInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Record r = rs[i];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的日期：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.date;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的类型：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.type;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的金额：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.amount;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的备注：&quot;</span>;</span><br><span class="line">cin &gt;&gt; r.remarks;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">rs[i] = r;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此条收支记录信息，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询收支记录信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************欢迎来到查询收支记录信息功能*******************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按类型查询收支记录信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyType;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询收支记录的类型：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyType;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Record::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; rs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (rs[i].type == keyType)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">rs[i].<span class="built_in">showRecordInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此类记录！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayRs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***************************欢迎来到个人收支记录一览表功能*****************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：个人收支记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseRs</span>();</span><br><span class="line"><span class="type">double</span> balance = money;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; rs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(rs[i].type == <span class="string">&quot;支出&quot;</span>) balance -= rs[i].amount;</span><br><span class="line"><span class="keyword">else</span> balance += rs[i].amount;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t本月初始资金：&quot;</span> &lt;&lt; money &lt;&lt; <span class="string">&quot;元&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前余额：&quot;</span> &lt;&lt; balance &lt;&lt; <span class="string">&quot;元&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearSystem</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************欢迎来到清空系统数据功能*******************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">rs.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">FinanceSystem fs;</span><br><span class="line">fs.<span class="built_in">init</span>(<span class="number">3000</span>);    <span class="comment">//设置初始金额</span></span><br><span class="line">fs.<span class="built_in">menu</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>算法笔记</title>
      <link href="/2023/10/22/00015/"/>
      <url>/2023/10/22/00015/</url>
      
        <content type="html"><![CDATA[<h1 id="常用STL库"><a href="#常用STL库" class="headerlink" title="常用STL库"></a>常用STL库</h1><p>我的算法笔记，记录了STL中一些常用的库函数以及STL中实现的各种数据结构的基本用法。</p><h3 id="知识点总结"><a href="#知识点总结" class="headerlink" title="知识点总结"></a>知识点总结</h3><h4 id="1-vector"><a href="#1-vector" class="headerlink" title="1.vector"></a>1.vector</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//变长数组</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span>   </span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; v, b;<span class="comment">//定义vector类型</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">vec</span><span class="params">(<span class="number">100</span>)</span></span>;<span class="comment">//定义时指定长度100, 默认值为0, 这个长度可以是变量</span></span><br><span class="line"><span class="type">int</span> num = <span class="number">12</span>;</span><br><span class="line">v.<span class="built_in">push_back</span>(num);<span class="comment">//推入一个新的值到数组最后,这个值可以为任何类型</span></span><br><span class="line">v.<span class="built_in">pop_back</span>();<span class="comment">//删除数组最后的那个值</span></span><br><span class="line">v.<span class="built_in">front</span>();<span class="comment">//数组开头的值</span></span><br><span class="line">v.<span class="built_in">back</span>();<span class="comment">//数组结尾的值</span></span><br><span class="line">v = b;<span class="comment">//数组拷贝</span></span><br><span class="line">v == b;<span class="comment">//数组是否相同</span></span><br><span class="line">v[i];<span class="comment">//数组中第i个值, 范围：0 到 v.size()-1</span></span><br><span class="line">v.<span class="built_in">size</span>();<span class="comment">//容器内的元素个数</span></span><br><span class="line">v.<span class="built_in">empty</span>();<span class="comment">//容器是否为空</span></span><br><span class="line"><span class="comment">// 除了queue和stack外通用的方法</span></span><br><span class="line">v.<span class="built_in">clear</span>();<span class="comment">//清空容器内的所有元素</span></span><br><span class="line">v.<span class="built_in">begin</span>();<span class="comment">//容器的一个元素的迭代器</span></span><br><span class="line">v.<span class="built_in">end</span>();<span class="comment">//容器尾后迭代器</span></span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it;<span class="comment">//定义迭代器</span></span><br><span class="line">iter = v.<span class="built_in">begin</span>();<span class="comment">//数组头“指针”</span></span><br><span class="line">iter = v.<span class="built_in">end</span>();<span class="comment">//数组尾“指针”</span></span><br><span class="line"></span><br><span class="line">vector&lt;<span class="type">int</span>&gt;::iterator it = v.<span class="built_in">begin</span>()+<span class="number">10</span>; </span><br><span class="line">v.<span class="built_in">erase</span>(it);<span class="comment">//删除指定位置的元素</span></span><br><span class="line"></span><br><span class="line">v.<span class="built_in">erase</span>(iterator first,iterator last);<span class="comment">//删除向量中 [first,last) 中元素</span></span><br><span class="line">v.<span class="built_in">erase</span>( <span class="built_in">remove</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(),x), v.<span class="built_in">end</span>());<span class="comment">//删除v中所有值为x的元素 对于string类型也适用</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//v的开始指针指向的是第一个元素，所以指针移动两位，指向第三个元素（下标为2）</span></span><br><span class="line"><span class="comment">//然后在这个元素的前面，注意是前面,插入一个元素。</span></span><br><span class="line">v.<span class="built_in">insert</span>(v.<span class="built_in">begin</span>()+<span class="number">2</span>, <span class="number">30</span>);</span><br></pre></td></tr></table></figure><h4 id="2-list"><a href="#2-list" class="headerlink" title="2.list"></a>2.list</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//双链表</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;list&gt;</span></span></span><br><span class="line">list&lt;<span class="type">int</span>&gt; l;</span><br><span class="line">l.<span class="built_in">push_front</span>(<span class="number">1</span>);<span class="comment">//插入元素到开头</span></span><br><span class="line">l.<span class="built_in">pop_front</span>();<span class="comment">//从开头删掉元素</span></span><br><span class="line">l.<span class="built_in">erase</span>(l.<span class="built_in">begin</span>());<span class="comment">//删除指定迭代器处的元素</span></span><br><span class="line">l.<span class="built_in">insert</span>(l.<span class="built_in">begin</span>(), <span class="number">1</span>);<span class="comment">//在指定迭代器前插入元素</span></span><br><span class="line">l.<span class="built_in">reverse</span>();<span class="comment">//反转整个链表</span></span><br></pre></td></tr></table></figure><h4 id="3-string"><a href="#3-string" class="headerlink" title="3.string"></a>3.string</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//字符串类</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line">string s1,s2;</span><br><span class="line">s1 += s2;</span><br><span class="line">s1.<span class="built_in">append</span>(s2);<span class="comment">//拼接</span></span><br><span class="line"><span class="type">char</span> c = <span class="string">&#x27;m&#x27;</span>;</span><br><span class="line">s1.<span class="built_in">push_back</span>(c);</span><br><span class="line">s1 &gt; s2;</span><br><span class="line">s1 == s2;</span><br><span class="line">s1 &lt; s2;<span class="comment">//按字典序比较字符串</span></span><br><span class="line">s1.<span class="built_in">size</span>();<span class="comment">//字符串长度</span></span><br><span class="line">string s3 = s2;<span class="comment">//字符串赋值</span></span><br></pre></td></tr></table></figure><h4 id="4-queue"><a href="#4-queue" class="headerlink" title="4.queue"></a>4.queue</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//队列</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>);<span class="comment">//将1推入队列</span></span><br><span class="line">q.<span class="built_in">pop</span>();<span class="comment">//推出队列开头的元素</span></span><br><span class="line">q.<span class="built_in">front</span>();<span class="comment">//队列的第一个元素</span></span><br><span class="line">q.<span class="built_in">clear</span>();<span class="comment">//清空队列   </span></span><br><span class="line">q.<span class="built_in">empty</span>();<span class="comment">//队列判空</span></span><br><span class="line">q.<span class="built_in">size</span>();<span class="comment">//队列长度</span></span><br></pre></td></tr></table></figure><h4 id="5-stack"><a href="#5-stack" class="headerlink" title="5.stack"></a>5.stack</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//栈</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line">stack&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">s.<span class="built_in">push</span>(<span class="number">1</span>);<span class="comment">//将1推入堆栈</span></span><br><span class="line">s.<span class="built_in">pop</span>();<span class="comment">//推出堆栈最后的元素</span></span><br><span class="line">s.<span class="built_in">top</span>();<span class="comment">//堆栈的最后的元素</span></span><br><span class="line">s.<span class="built_in">size</span>();<span class="comment">//栈的当前长度</span></span><br><span class="line">s.<span class="built_in">empty</span>();<span class="comment">//判断栈空</span></span><br></pre></td></tr></table></figure><h4 id="6-pair"><a href="#6-pair" class="headerlink" title="6.pair"></a>6.pair</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line">pair&lt;<span class="type">int</span>, string&gt; p;</span><br><span class="line">p.first = <span class="number">1</span>;</span><br><span class="line">p.second = <span class="string">&quot;abc&quot;</span>;</span><br><span class="line">p = <span class="built_in">make_pair</span>(<span class="number">1</span>, <span class="string">&quot;abc&quot;</span>);</span><br><span class="line">p = &#123;<span class="number">1</span>, <span class="string">&quot;abc&quot;</span>&#125;;</span><br><span class="line"></span><br><span class="line">pair&lt;<span class="type">int</span>, string&gt; p[<span class="number">100</span>];</span><br><span class="line"><span class="built_in">sort</span>(p, p + <span class="number">100</span>);</span><br><span class="line"><span class="comment">// 默认优先first从小到大</span></span><br><span class="line"><span class="comment">// 如果first相同则second从小到大</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//pair和其他容器嵌套</span></span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, string&gt; &gt; vp;</span><br><span class="line">queue&lt;pair&lt;<span class="type">float</span>, <span class="type">int</span>&gt; &gt; qp;</span><br><span class="line">queue&lt;pair&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;, <span class="type">int</span>&gt; &gt; qpp;</span><br></pre></td></tr></table></figure><h4 id="7-set"><a href="#7-set" class="headerlink" title="7.set"></a>7.set</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//set保存了不可重复的元素–二叉搜索树-红黑树</span></span><br><span class="line"><span class="comment">//可以用来去重</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;set&gt;</span></span></span><br><span class="line">set&lt;<span class="type">int</span>&gt; s;</span><br><span class="line">s.<span class="built_in">insert</span>(<span class="number">1</span>);<span class="comment">//插入到集合中,重复的话就会插入失败</span></span><br><span class="line">s.<span class="built_in">erase</span>(<span class="number">1</span>);<span class="comment">//从集合中删除</span></span><br><span class="line">s.<span class="built_in">erase</span>(s.<span class="built_in">begin</span>());<span class="comment">//从集合中删除</span></span><br><span class="line">s.<span class="built_in">count</span>(<span class="number">1</span>);<span class="comment">//返回某个元素的个数</span></span><br><span class="line">s.<span class="built_in">find</span>(<span class="number">1</span>);<span class="comment">//返回一个指向被查找到元素的迭代器</span></span><br><span class="line">s.<span class="built_in">empty</span>();<span class="comment">//集合判空</span></span><br><span class="line">s.<span class="built_in">size</span>();<span class="comment">//集合的元素个数</span></span><br><span class="line"></span><br><span class="line">set&lt;<span class="type">int</span>&gt;::iterator it;<span class="comment">//定义前向迭代器  </span></span><br><span class="line"><span class="comment">//中序遍历集合中的所有元素  </span></span><br><span class="line"><span class="keyword">for</span>(it = s.<span class="built_in">begin</span>(); it != s.<span class="built_in">end</span>(); it++)  </span><br><span class="line">&#123;  </span><br><span class="line">cout &lt;&lt; *it &lt;&lt; <span class="string">&quot; &quot;</span>;  </span><br><span class="line">&#125;  </span><br><span class="line"></span><br><span class="line"><span class="comment">//由于set是红黑树，所以满足以下内容</span></span><br><span class="line"><span class="comment">//1 内部有序(默认从小到大)</span></span><br><span class="line"><span class="comment">//2 没有重复值，如果出现重复值会不断被覆盖</span></span><br><span class="line"><span class="comment">//3 几乎所有操作复杂度均为 O(logN)</span></span><br><span class="line"><span class="comment">//4 不可以修改节点上的值</span></span><br><span class="line"><span class="comment">//5 修改操作只能进行插入和删除两个操作</span></span><br></pre></td></tr></table></figure><h4 id="8-map"><a href="#8-map" class="headerlink" title="8.map"></a>8.map</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//map字典（键对集合）——二叉搜索树——红黑树</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;map&gt;</span></span></span><br><span class="line">map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; m;</span><br><span class="line">m.<span class="built_in">insert</span>(<span class="built_in">make_pair</span>(<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>));<span class="comment">//加入字典</span></span><br><span class="line">m.<span class="built_in">insert</span>(&#123;<span class="string">&#x27;a&#x27;</span>, <span class="number">1</span>&#125;);<span class="comment">//加入字典</span></span><br><span class="line">m.<span class="built_in">erase</span>(<span class="string">&#x27;a&#x27;</span>);<span class="comment">//从字典中删除</span></span><br><span class="line">m.<span class="built_in">count</span>(<span class="string">&#x27;a&#x27;</span>);<span class="comment">//字典中是否存在</span></span><br><span class="line">m.<span class="built_in">find</span>(<span class="string">&#x27;a&#x27;</span>);<span class="comment">//返回对应值的迭代器（若无则返回尾后迭代器）</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//通常称map的first元素为key，second元素为value</span></span><br><span class="line"><span class="comment">//由于map是键对红黑树，所以满足以下内容</span></span><br><span class="line"><span class="comment">//1 set的大部分性质；</span></span><br><span class="line"><span class="comment">//2 key不能重复，不能修改，只能删除和添加；</span></span><br><span class="line"><span class="comment">//3 允许value重复，可以对value进行修改；</span></span><br><span class="line"><span class="comment">//4 map是按照key进行排序的；</span></span><br><span class="line"><span class="comment">//5 key和value一定是成对出现的；</span></span><br><span class="line"><span class="comment">//6 map的迭代器指向的内容是一个pair；</span></span><br></pre></td></tr></table></figure><h4 id="9-priority-queue"><a href="#9-priority-queue" class="headerlink" title="9.priority_queue"></a>9.priority_queue</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//优先队列——堆</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line">priority_queue&lt;<span class="type">int</span>&gt; prq;</span><br><span class="line">prq.<span class="built_in">top</span>();<span class="comment">//堆顶上的元素</span></span><br><span class="line">prq.<span class="built_in">pop</span>();<span class="comment">//弹出堆顶上的元素</span></span><br><span class="line">prq.<span class="built_in">push</span>(<span class="number">1</span>);<span class="comment">//推入堆</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//priority_queue默认为最大堆，即堆顶的元素最大</span></span><br><span class="line"><span class="comment">//和queue一样，priority_queue不允许访问除了堆顶元素以外的任何一个元素。</span></span><br><span class="line"><span class="comment">//priority_queue的插入和弹出操作的复杂度均为O(logN)</span></span><br><span class="line"><span class="comment">//priority_queue的复杂度为最差情况下的复杂度，而set和map的复杂度均为稳定复杂度的极限值</span></span><br></pre></td></tr></table></figure><p>小根堆排序：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">priority_queue&lt;<span class="type">int</span>,vector&lt;<span class="type">int</span>&gt;,greater&lt;<span class="type">int</span>&gt; &gt; <span class="built_in">pql</span>(a, a + n);</span><br><span class="line"><span class="keyword">while</span>(!pql.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,pql.<span class="built_in">top</span>());</span><br><span class="line">pql.<span class="built_in">pop</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-algorithm"><a href="#10-algorithm" class="headerlink" title="10.algorithm"></a>10.algorithm</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//STL里的算法库</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="comment">//1 排序函数</span></span><br><span class="line"><span class="built_in">sort</span>(a, a + n);</span><br><span class="line"><span class="built_in">sort</span>(v.<span class="built_in">begin</span>(),v.<span class="built_in">end</span>());<span class="comment">//默认从小到大排序</span></span><br><span class="line"><span class="built_in">sort</span>(a, a + n, <span class="built_in">less</span>&lt;T&gt;());<span class="comment">//从小到大排序</span></span><br><span class="line"><span class="built_in">sort</span>(a, a + n, <span class="built_in">greater</span>&lt;T&gt;());<span class="comment">//从大到小排序</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">compare</span><span class="params">(T&amp; t1, T&amp; t2)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (t1.a != t2.a)</span><br><span class="line"><span class="keyword">return</span> t1.a &gt; t2.a;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t1.b != t2.b)</span><br><span class="line"><span class="keyword">return</span> t1.b &gt; t2.b;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> t1.c &lt; t2.c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(a, a + n, compare);<span class="comment">//自定义排序规则</span></span><br><span class="line"><span class="comment">//先按a值降序排列；</span></span><br><span class="line"><span class="comment">//如果a值相同，再按b值降序排列；</span></span><br><span class="line"><span class="comment">//如果a和b都相同，就按c值升序排列；</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//对向量ret进行去重，需要先排序</span></span><br><span class="line"><span class="built_in">sort</span>(ret.<span class="built_in">begin</span>(), ret.<span class="built_in">end</span>());</span><br><span class="line">ret.<span class="built_in">erase</span>(<span class="built_in">unique</span>(ret.<span class="built_in">begin</span>(), ret.<span class="built_in">end</span>()), ret.<span class="built_in">end</span>());<span class="comment">//unique函数是algorithm里面的</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二分 lower_bound和upper_bound</span></span><br><span class="line"><span class="type">int</span> l = <span class="built_in">lower_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), k) - v.<span class="built_in">begin</span>();</span><br><span class="line"><span class="type">int</span> r = <span class="built_in">upper_bound</span>(v.<span class="built_in">begin</span>(), v.<span class="built_in">end</span>(), k) - v.<span class="built_in">begin</span>();</span><br><span class="line"><span class="comment">//返回第一个大于等于x的地址，减去数组q就得到索引,没有的话就返回q + R + 1</span></span><br><span class="line"><span class="type">int</span> pos_1 = <span class="built_in">lower_bound</span>(q + L, q + R + <span class="number">1</span>, x) - q;</span><br><span class="line"><span class="comment">//返回第一个大于x的地址，减去数组q就得到索引,没有的话就返回q + R + 1</span></span><br><span class="line"><span class="type">int</span> pos_2 = <span class="built_in">upper_bound</span>(q + L, q + R + <span class="number">1</span>, x) - q;  </span><br></pre></td></tr></table></figure><h4 id="11-unordered-map"><a href="#11-unordered-map" class="headerlink" title="11.unordered_map"></a>11.unordered_map</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">unordered_map&lt;string, <span class="type">int</span>&gt; umap;<span class="comment">//创建一个key为string类型，value为int类型的unordered_map</span></span><br><span class="line">string key = <span class="string">&quot;one&quot;</span>;</span><br><span class="line"><span class="type">int</span> value = <span class="number">1</span>;</span><br><span class="line">umap.<span class="built_in">emplace</span>(key, value);<span class="comment">//使用变量方式，插入一个元素</span></span><br><span class="line">umap.<span class="built_in">emplace</span>(<span class="string">&quot;two&quot;</span>, <span class="number">2</span>);  <span class="comment">//也可以直接写上key和value的值</span></span><br><span class="line">umap.<span class="built_in">insert</span>(&#123;<span class="string">&quot;three&quot;</span>, <span class="number">3</span>&#125;);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;If key is one, then value is &quot;</span> &lt;&lt; umap[<span class="string">&quot;one&quot;</span>] &lt;&lt; endl &lt;&lt; endl; <span class="comment">//通过key值来访问value</span></span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : umap)<span class="comment">//遍历整个map，输出key及其对应的value值</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; x.first &lt;&lt; <span class="string">&quot;  &quot;</span> &lt;&lt; x.second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(unordered_map&lt;string, <span class="type">int</span>&gt;::iterator it = umap.<span class="built_in">begin</span>(); it != umap.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; it-&gt;first &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; it-&gt;second &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x : umap)<span class="comment">//遍历整个map，并根据其key值，查看对应的value值</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; umap[x.first] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">auto</span> n = umap.<span class="built_in">erase</span>(<span class="string">&quot;one&quot;</span>);<span class="comment">//删除</span></span><br><span class="line"><span class="keyword">if</span>(n != <span class="number">0</span>) cout &lt;&lt; <span class="string">&quot;delete one successfully!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;failure&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">auto</span> it = umap.<span class="built_in">find</span>(<span class="string">&quot;two&quot;</span>);<span class="comment">//修改</span></span><br><span class="line"><span class="keyword">if</span>(it != umap.<span class="built_in">end</span>()) it-&gt;second = <span class="number">222</span>;</span><br><span class="line">string tmp = <span class="string">&quot;two&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(umap.<span class="built_in">find</span>(tmp) != umap.<span class="built_in">end</span>()) cout &lt;&lt; <span class="string">&quot;find &quot;</span> &lt;&lt; tmp &lt;&lt; <span class="string">&quot; successfully!&quot;</span> &lt;&lt; endl;</span><br><span class="line">    umap.<span class="built_in">clear</span>();</span><br><span class="line">    cout &lt;&lt; <span class="string">&quot;After clear umap, the size of umap is &quot;</span> &lt;&lt; umap.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">if</span>(umap.<span class="built_in">empty</span>()) cout &lt;&lt; <span class="string">&quot;It&#x27;s empty!&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>map: map内部实现了一个红黑树，该结构具有自动排序的功能，因此map内部的所有元素都是有序的，红黑树的每一个节点都代表着map的一个元素，因此，对于map进行的查找，删除，添加等一系列的操作都相当于是对红黑树进行这样的操作，故红黑树的效率决定了map的效率。<br>unordered_map: unordered_map内部实现了一个哈希表，因此其元素的排列顺序是杂乱的，无序的</p><h4 id="12-cstring库"><a href="#12-cstring库" class="headerlink" title="12.cstring库"></a>12.cstring库</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="built_in">strlen</span>();<span class="comment">//字符串长度</span></span><br><span class="line"><span class="built_in">strcmp</span>(s1,s2);<span class="comment">//值为0，则s1==s2  小于0则s1&lt;s2  大于0则s1&gt;s2</span></span><br><span class="line"><span class="built_in">strcpy</span>(s1,s2);<span class="comment">//把s2的内容复制到s1</span></span><br><span class="line"><span class="built_in">memset</span>(str,<span class="number">0</span>,<span class="built_in">sizeof</span>(str));<span class="comment">//暴力清空任意类型数组（清空为0）  </span></span><br><span class="line"><span class="built_in">memcpy</span>();<span class="comment">//暴力拷贝</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="built_in">qsort</span>();<span class="comment">//C语言快排</span></span><br><span class="line"><span class="built_in">rand</span>();<span class="comment">//随机数</span></span><br><span class="line"><span class="built_in">malloc</span>();<span class="comment">//C语言动态分配内存  </span></span><br><span class="line"><span class="built_in">free</span>();</span><br><span class="line">    </span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="built_in">time</span>(<span class="number">0</span>);<span class="comment">//从1970年到现在的秒数（配合随机数）</span></span><br><span class="line"><span class="built_in">clock</span>();<span class="comment">//程序启动到目前为止的毫秒数</span></span><br><span class="line"></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctype&gt;</span></span></span><br><span class="line"><span class="built_in">isdigit</span>();<span class="comment">//判断字符是否为数字</span></span><br><span class="line"><span class="built_in">isalpha</span>();<span class="comment">//判断字符是否为大小写字母</span></span><br></pre></td></tr></table></figure><h4 id="14-类型转换"><a href="#14-类型转换" class="headerlink" title="14.类型转换"></a>14.类型转换</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//数字 转 字符串类型</span></span><br><span class="line"><span class="comment">//1 利用to_string函数</span></span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">int</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">long</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">long</span> <span class="type">long</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">unsigned</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">unsigned</span> <span class="type">long</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">float</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">double</span> val)</span></span>;</span><br><span class="line"><span class="function">string <span class="title">to_string</span> <span class="params">(<span class="type">long</span> <span class="type">double</span> val)</span></span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2 利用stringstream 头文件</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stringstream&gt;</span></span></span><br><span class="line">stringstream tool;</span><br><span class="line">string s;</span><br><span class="line"><span class="type">int</span> a = <span class="number">123554</span>;</span><br><span class="line">tool &lt;&lt; a;</span><br><span class="line">tool &gt;&gt; s;</span><br><span class="line">cout &lt;&lt; s &lt;&lt; endl;<span class="comment">//转换完就可以用了 </span></span><br><span class="line"></span><br><span class="line"><span class="comment">//字符串类型转数字</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line">string str=<span class="string">&#x27;111&#x27;</span>;</span><br><span class="line"><span class="type">int</span> number = <span class="built_in">atoi</span>(str.<span class="built_in">c_str</span>());</span><br></pre></td></tr></table></figure><br/><h1 id="算法基础课题解"><a href="#算法基础课题解" class="headerlink" title="算法基础课题解"></a>算法基础课题解</h1><h3 id="第一讲-基础算法"><a href="#第一讲-基础算法" class="headerlink" title="第一讲 基础算法"></a>第一讲 基础算法</h3><h4 id="1-快速排序"><a href="#1-快速排序" class="headerlink" title="1.快速排序"></a>1.快速排序</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/787/">https://www.acwing.com/problem/content/787/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span>* q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> x = q[l + (r - l) / <span class="number">2</span>], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (q[++i] &lt; x); <span class="comment">//do i++; while (q[i] &lt; x);</span></span><br><span class="line"><span class="keyword">while</span> (q[--j] &gt; x); <span class="comment">//do j--; while (q[j] &gt; x);</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line"><span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"><span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n<span class="number">-1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-第k个数"><a href="#2-第k个数" class="headerlink" title="2.第k个数"></a>2.第k个数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/788/">https://www.acwing.com/problem/content/788/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="type">int</span> n,k;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">quick_sort</span><span class="params">(<span class="type">int</span>* q,<span class="type">int</span> l,<span class="type">int</span> r,<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> q[l];</span><br><span class="line"><span class="type">int</span> x = q[l + (r - l) / <span class="number">2</span>], i = l - <span class="number">1</span>,j = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">do</span> i++; <span class="keyword">while</span>(q[i] &lt; x);</span><br><span class="line"><span class="keyword">do</span> j--; <span class="keyword">while</span>(q[j] &gt; x);</span><br><span class="line"><span class="keyword">if</span>(i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> sl = j - l + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span>(k &lt;= sl) <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q, l, j, k);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="built_in">quick_sort</span>(q,j + <span class="number">1</span>, r, k - sl);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">cout&lt;&lt;<span class="built_in">quick_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>, k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-归并排序"><a href="#3-归并排序" class="headerlink" title="3.归并排序"></a>3.归并排序</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/789/">https://www.acwing.com/problem/content/789/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span>+<span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> q[N],temp[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span>* q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line"><span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>,i = l,j = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i] &lt;= q[j]) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">else</span> temp[k++] = q[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">while</span>(j &lt;= r) temp[k++] = q[j++];</span><br><span class="line"><span class="keyword">for</span>(i = l,j = <span class="number">0</span>; i &lt;= r; i++,j++) q[i] = temp[j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line"><span class="built_in">merge_sort</span>(q, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-逆序对的数量"><a href="#4-逆序对的数量" class="headerlink" title="4.逆序对的数量"></a>4.逆序对的数量</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/790/">https://www.acwing.com/problem/content/790/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> q[N], temp[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">long</span> <span class="type">long</span> <span class="title">merge_sort</span><span class="params">(<span class="type">int</span> l,<span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(l &gt;= r) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> mid = l + (r - l) / <span class="number">2</span>; <span class="comment">//int mid = l + r &gt;&gt; 1;</span></span><br><span class="line">LL res = <span class="built_in">merge_sort</span>(l,mid) + <span class="built_in">merge_sort</span>(mid+<span class="number">1</span>,r);</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>,i = l,j = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(q[i] &lt;= q[j]) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">temp[k++] = q[j++];</span><br><span class="line">res += (mid - i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(i &lt;= mid) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">while</span>(j &lt;= r) temp[k++] = q[j++];</span><br><span class="line"><span class="keyword">for</span>(i = l,j = <span class="number">0</span>; i &lt;= r; i++,j++) q[i] = temp[j];</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin&gt;&gt;q[i];</span><br><span class="line">cout&lt;&lt;<span class="built_in">merge_sort</span>(<span class="number">0</span>,n<span class="number">-1</span>)&lt;&lt;endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-数的范围"><a href="#5-数的范围" class="headerlink" title="5.数的范围"></a>5.数的范围</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/791/">https://www.acwing.com/problem/content/791/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>,r = n - <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &gt;= x) r = mid;</span><br><span class="line">            <span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(q[l] != x) cout &lt;&lt; <span class="string">&quot;-1 -1&quot;</span> &lt;&lt; endl;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; l &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">            <span class="type">int</span> l = <span class="number">0</span>,r = n - <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">            &#123;</span><br><span class="line">                <span class="type">int</span> mid = (l + r + <span class="number">1</span>) / <span class="number">2</span>;</span><br><span class="line">                <span class="keyword">if</span>(q[mid] &lt;= x) l = mid;</span><br><span class="line">                <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            cout &lt;&lt; l &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-数的三次方根"><a href="#6-数的三次方根" class="headerlink" title="6.数的三次方根"></a>6.数的三次方根</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/792/">https://www.acwing.com/problem/content/792/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">double</span> x = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">    <span class="type">double</span> l = <span class="number">-10000</span>,r = <span class="number">10000</span>;</span><br><span class="line">    <span class="keyword">while</span>(r-l &gt; <span class="number">1e-8</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">double</span> mid = (l + r) / <span class="number">2</span>;</span><br><span class="line">        <span class="keyword">if</span>(mid * mid * mid &gt;= x) r = mid;</span><br><span class="line">        <span class="keyword">else</span> l = mid;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, l);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-高精度加法"><a href="#7-高精度加法" class="headerlink" title="7.高精度加法"></a>7.高精度加法</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/793/">https://www.acwing.com/problem/content/793/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Add</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>() || i &lt; B.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; A.<span class="built_in">size</span>()) t += A[i];</span><br><span class="line"><span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Add</span>(A, B);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-高精度减法"><a href="#8-高精度减法" class="headerlink" title="8.高精度减法"></a>8.高精度减法</h4><p>原题链接：<a href="https://www.acwing.com/activity/content/problem/content/826/">https://www.acwing.com/activity/content/problem/content/826/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">cmp</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (A.<span class="built_in">size</span>() != B.<span class="built_in">size</span>()) <span class="keyword">return</span> A.<span class="built_in">size</span>() &gt; B.<span class="built_in">size</span>();</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = A.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (A[i] != B[i]) <span class="keyword">return</span> A[i] &gt; B[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Sub</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, t = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">t = A[i] - t;</span><br><span class="line"><span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t -= B[i];</span><br><span class="line">C.<span class="built_in">push_back</span>((t + <span class="number">10</span>) % <span class="number">10</span>);</span><br><span class="line"><span class="keyword">if</span> (t &lt; <span class="number">0</span>) t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> t = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">cmp</span>(A, B))</span><br><span class="line">&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Sub</span>(A, B);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Sub</span>(B, A);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-高精度乘法"><a href="#9-高精度乘法" class="headerlink" title="9.高精度乘法"></a>9.高精度乘法</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/795/">https://www.acwing.com/problem/content/795/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">C</span><span class="params">(A.size() + B.size(), <span class="number">0</span>)</span></span>; <span class="comment">// 初始化为0,且999*99最多5位</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; B.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">C[i + j] += A[i] * B[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; C.<span class="built_in">size</span>(); i++)   <span class="comment">// i = C.size() - 1时 t 一定小于 10</span></span><br><span class="line">&#123;</span><br><span class="line">t += C[i];</span><br><span class="line">C[i] = t % <span class="number">10</span>;</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>(); <span class="comment">// 必须要去前导 0，因为最高位很可能是 0</span></span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Mul</span>(A, B);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) cout &lt;&lt; C[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-高精度除法"><a href="#10-高精度除法" class="headerlink" title="10.高精度除法"></a>10.高精度除法</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/796/">https://www.acwing.com/problem/content/796/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//int r = 0;</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Div</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, <span class="type">int</span> B, <span class="type">int</span>&amp; r)</span> <span class="comment">//r传入r的地址，便于直接对余数r进行修改</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++) <span class="comment">//对A从最高位开始处理</span></span><br><span class="line">&#123;</span><br><span class="line">r = r * <span class="number">10</span> + A[i]; <span class="comment">//将上次的余数*10在加上当前位的数字，便是该位需要除的被除数</span></span><br><span class="line">C.<span class="built_in">push_back</span>(r / B); <span class="comment">//所得即为商在这一位的数字</span></span><br><span class="line">r = r % B;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//由于在除法运算中，高位到低位运算，因此C的前导零都在vector的前面而不是尾部，</span></span><br><span class="line">    <span class="comment">//vector只有删除最后一个数字pop_back是常数复杂度，</span></span><br><span class="line">    <span class="comment">//而对于删除第一位没有相应的库函数可以使用，而且删除第一位，其余位也要前移，</span></span><br><span class="line"><span class="comment">//因此我们将C翻转，这样0就位于数组尾部，可以使用pop函数删除前导0</span></span><br><span class="line"><span class="built_in">reverse</span>(C.<span class="built_in">begin</span>(), C.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>();</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a;</span><br><span class="line"><span class="type">int</span> B, r = <span class="number">0</span>; <span class="comment">//代表余数</span></span><br><span class="line">cin &gt;&gt; a &gt;&gt; B;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>); </span><br><span class="line">    <span class="comment">//注意这次的A是由高为传输至低位，由于在除法的手算过程中，发现从高位进行处理</span></span><br><span class="line"><span class="keyword">auto</span> C = <span class="built_in">Div</span>(A, B, r);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) cout &lt;&lt; C[i]; <span class="comment">//将C从最高位传给最低位</span></span><br><span class="line">cout &lt;&lt; endl &lt;&lt; r &lt;&lt; endl; <span class="comment">//输出余数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-前缀和"><a href="#11-前缀和" class="headerlink" title="11.前缀和"></a>11.前缀和</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/797/">https://www.acwing.com/problem/content/797/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], s[N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[r] - s[l - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-子矩阵的和"><a href="#12-子矩阵的和" class="headerlink" title="12.子矩阵的和"></a>12.子矩阵的和</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/798/">https://www.acwing.com/problem/content/798/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N][N], s[N][N];</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">//初始化前缀和数组</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            s[i][j] = a[i][j] + s[i - <span class="number">1</span>][j] + s[i][j - <span class="number">1</span>] - s[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">while</span> (q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x1 = <span class="number">0</span>, y1 = <span class="number">0</span>, x2 = <span class="number">0</span>, y2 = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2);</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[x2][y2] - s[x2][y1 - <span class="number">1</span>] - s[x1 - <span class="number">1</span>][y2] + s[x1 - <span class="number">1</span>][y1 - <span class="number">1</span>]);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13-差分"><a href="#13-差分" class="headerlink" title="13.差分"></a>13.差分</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/799/">https://www.acwing.com/problem/content/799/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r, <span class="type">int</span> c)</span> <span class="comment">//差分的核心操作</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b[l] += c;</span><br><span class="line">    b[r + <span class="number">1</span>] -= c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; a[i];</span><br><span class="line">        b[i] = a[i] - a[i - <span class="number">1</span>];  <span class="comment">//构建差分数组 等价于insert(i,i,a[i);</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r, c;</span><br><span class="line">        cin &gt;&gt; l &gt;&gt; r &gt;&gt; c;</span><br><span class="line">        <span class="built_in">insert</span>(l, r, c);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) a[i] = a[i - <span class="number">1</span>] + b[i]; <span class="comment">//求前缀和</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cout &lt;&lt; a[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14-差分矩阵"><a href="#14-差分矩阵" class="headerlink" title="14.差分矩阵"></a>14.差分矩阵</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/800/">https://www.acwing.com/problem/content/800/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N][N], b[N][N];</span><br><span class="line"><span class="type">int</span> n, m, q;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x1, <span class="type">int</span> y1, <span class="type">int</span> x2, <span class="type">int</span> y2, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    b[x1][y1] += c;</span><br><span class="line">    b[x1][y2 + <span class="number">1</span>] -= c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y1] -= c;</span><br><span class="line">    b[x2 + <span class="number">1</span>][y2 + <span class="number">1</span>] += c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;q);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">insert</span>(i, j, i, j, a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">while</span> (q--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x1, y1, x2, y2, c;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d%d&quot;</span>, &amp;x1, &amp;y1, &amp;x2, &amp;y2, &amp;c);</span><br><span class="line">        <span class="built_in">insert</span>(x1, y1, x2, y2, c);</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            a[i][j] = a[i - <span class="number">1</span>][j] + a[i][j - <span class="number">1</span>] - a[i - <span class="number">1</span>][j - <span class="number">1</span>] + b[i][j]; <span class="comment">//求二维前缀和</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-最长连续不重复子序列"><a href="#15-最长连续不重复子序列" class="headerlink" title="15.最长连续不重复子序列"></a>15.最长连续不重复子序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/801/">https://www.acwing.com/problem/content/801/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e6</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], s[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cin &gt;&gt; a[i];</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        s[a[i]]++;</span><br><span class="line">        <span class="keyword">while</span> (s[a[i]] &gt; <span class="number">1</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            s[a[j]]--;</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        res = <span class="built_in">max</span>(res, i - j + <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="16-数组元素的目标和"><a href="#16-数组元素的目标和" class="headerlink" title="16.数组元素的目标和"></a>16.数组元素的目标和</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/802/">https://www.acwing.com/problem/content/802/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>, x = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;n, &amp;m, &amp;x);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>, j = m - <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; a[i] + b[j] &gt; x) j--;</span><br><span class="line">        <span class="keyword">if</span> (a[i] + b[j] == x)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, i, j);</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-判断子序列"><a href="#17-判断子序列" class="headerlink" title="17.判断子序列"></a>17.判断子序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/2818/">https://www.acwing.com/problem/content/2818/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N], b[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;b[i]);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (i &lt; n &amp;&amp; a[i] == b[j]) i++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (i == n) <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="18-二进制中1的个数"><a href="#18-二进制中1的个数" class="headerlink" title="18.二进制中1的个数"></a>18.二进制中1的个数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/803/">https://www.acwing.com/problem/content/803/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lowbit</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> x &amp; -x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x)</span><br><span class="line">&#123;</span><br><span class="line">x -= <span class="built_in">lowbit</span>(x);</span><br><span class="line">res++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="19-区间和"><a href="#19-区间和" class="headerlink" title="19.区间和"></a>19.区间和</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/804/">https://www.acwing.com/problem/content/804/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">300010</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> a[N], s[N];</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; alls;</span><br><span class="line">vector&lt;PII&gt; add, query;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> l = <span class="number">0</span>, r = alls.<span class="built_in">size</span>() - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (l &lt; r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mid = l + r &gt;&gt; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (alls[mid] &gt;= x)    r = mid;</span><br><span class="line"><span class="keyword">else</span> l = mid + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> l + <span class="number">1</span>;     <span class="comment">//前缀和从1开始，因此这里返回下标也从1开始吧</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;b, &amp;c);</span><br><span class="line">add.<span class="built_in">push_back</span>(&#123; b, c &#125;);</span><br><span class="line">alls.<span class="built_in">push_back</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l, r;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line"></span><br><span class="line">query.<span class="built_in">push_back</span>(&#123; l, r &#125;);</span><br><span class="line"></span><br><span class="line">alls.<span class="built_in">push_back</span>(l);</span><br><span class="line">alls.<span class="built_in">push_back</span>(r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="built_in">sort</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>());  <span class="comment">//排序</span></span><br><span class="line">alls.<span class="built_in">erase</span>(<span class="built_in">unique</span>(alls.<span class="built_in">begin</span>(), alls.<span class="built_in">end</span>()), alls.<span class="built_in">end</span>());  <span class="comment">//去重</span></span><br><span class="line"><span class="comment">//处理插入</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> item : add)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="built_in">find</span>(item.first);</span><br><span class="line">a[i] += item.second;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//预处理前缀和</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= alls.<span class="built_in">size</span>(); i++)</span><br><span class="line">s[i] = s[i - <span class="number">1</span>] + a[i];</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理询问</span></span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> item : query)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l = <span class="built_in">find</span>(item.first), r = <span class="built_in">find</span>(item.second);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s[r] - s[l - <span class="number">1</span>]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="20-区间合并"><a href="#20-区间合并" class="headerlink" title="20.区间合并"></a>20.区间合并</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/805/">https://www.acwing.com/problem/content/805/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; <span class="built_in">merge</span>(vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;&amp; vec)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (vec.<span class="built_in">size</span>() == <span class="number">0</span>) <span class="keyword">return</span> &#123;&#125;;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; ans;</span><br><span class="line"><span class="built_in">sort</span>(vec.<span class="built_in">begin</span>(), vec.<span class="built_in">end</span>());</span><br><span class="line">pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; temp = vec[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; vec.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (temp.second &lt; vec[i].first)</span><br><span class="line">&#123;</span><br><span class="line">ans.<span class="built_in">push_back</span>(temp);</span><br><span class="line">temp = vec[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp.second &lt; vec[i].second)</span><br><span class="line">&#123;</span><br><span class="line">temp.second = vec[i].second;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans.<span class="built_in">push_back</span>(temp);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, l = <span class="number">0</span>, r = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; vec;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; l &gt;&gt; r;</span><br><span class="line">vec.<span class="built_in">push_back</span>(&#123; l,r &#125;);</span><br><span class="line">&#125;</span><br><span class="line">vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt; ans = <span class="built_in">merge</span>(vec);</span><br><span class="line">cout &lt;&lt; ans.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h3 id="第二讲-数据结构"><a href="#第二讲-数据结构" class="headerlink" title="第二讲 数据结构"></a>第二讲 数据结构</h3><h4 id="1-单链表"><a href="#1-单链表" class="headerlink" title="1.单链表"></a>1.单链表</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/828/">https://www.acwing.com/problem/content/828/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> head, e[N], ne[N], idx;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">head = <span class="number">-1</span>;</span><br><span class="line">idx = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将x插到头节点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add_to_head</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = x;</span><br><span class="line">ne[idx] = head;</span><br><span class="line">head = idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将x插到下标是k的点后面</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = x;</span><br><span class="line">ne[idx] = ne[k];</span><br><span class="line">ne[k] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//将下标是k的点的后面的点删掉</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ne[k] = ne[ne[k]];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k, x;</span><br><span class="line"><span class="type">char</span> op;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&#x27;H&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="built_in">add_to_head</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&#x27;D&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="keyword">if</span> (!k) head = ne[head];</span><br><span class="line"><span class="built_in">remove</span>(k - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; k &gt;&gt; x;</span><br><span class="line"><span class="built_in">add</span>(k - <span class="number">1</span>, x);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = head; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; e[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-双链表"><a href="#2-双链表" class="headerlink" title="2.双链表"></a>2.双链表</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/829/">https://www.acwing.com/problem/content/829/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> m;</span><br><span class="line"><span class="type">int</span> e[N], l[N], r[N], idx;</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="comment">//0表示左端点，1表示右端点</span></span><br><span class="line">    r[<span class="number">0</span>] = <span class="number">1</span>, l[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">    idx = <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//在下标是k的点的右边，插入x</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> k, <span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    e[idx] = x;</span><br><span class="line">    r[idx] = r[k];</span><br><span class="line">    l[idx] = k;</span><br><span class="line">    l[r[k]] = idx;</span><br><span class="line">    r[k] = idx;</span><br><span class="line">    idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除第k个点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">remove</span><span class="params">(<span class="type">int</span> k)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    r[l[k]] = r[k];</span><br><span class="line">    l[r[k]] = l[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; m;</span><br><span class="line">    <span class="built_in">init</span>();</span><br><span class="line">    <span class="keyword">while</span> (m--)</span><br><span class="line">    &#123;</span><br><span class="line">        string op;</span><br><span class="line">        <span class="type">int</span> k, x;</span><br><span class="line">        cin &gt;&gt; op;</span><br><span class="line">        <span class="keyword">if</span> (op == <span class="string">&quot;L&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(<span class="number">0</span>, x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;R&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(l[<span class="number">1</span>], x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;D&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; k;</span><br><span class="line">            <span class="built_in">remove</span>(k + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;IL&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; k &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(l[k + <span class="number">1</span>], x);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span></span><br><span class="line">        &#123;</span><br><span class="line">            cin &gt;&gt; k &gt;&gt; x;</span><br><span class="line">            <span class="built_in">add</span>(k + <span class="number">1</span>, x);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = r[<span class="number">0</span>]; i != <span class="number">1</span>; i = r[i])</span><br><span class="line">    &#123;</span><br><span class="line">        cout &lt;&lt; e[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-模拟栈"><a href="#3-模拟栈" class="headerlink" title="3.模拟栈"></a>3.模拟栈</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/830/">https://www.acwing.com/problem/content/830/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"><span class="type">int</span> top = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        string s;</span><br><span class="line">        cin &gt;&gt; s;</span><br><span class="line">        <span class="comment">//栈顶所在索引往后移动一格，然后放入x。</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="string">&quot;push&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> a;</span><br><span class="line">            cin &gt;&gt; a;</span><br><span class="line">            st[++top] = a;</span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        <span class="comment">//往前移动一格</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="string">&quot;pop&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            top --;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//返回栈顶元素</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="string">&quot;query&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; st[top] &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="comment">//大于等于 0 栈非空，小于 0 栈空</span></span><br><span class="line">        <span class="keyword">if</span>(s == <span class="string">&quot;empty&quot;</span>)</span><br><span class="line">        &#123;</span><br><span class="line">            cout &lt;&lt; (top == <span class="number">-1</span> ? <span class="string">&quot;YES&quot;</span> : <span class="string">&quot;NO&quot;</span>) &lt;&lt; endl;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-表达式求值"><a href="#4-表达式求值" class="headerlink" title="4.表达式求值"></a>4.表达式求值</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/3305/">https://www.acwing.com/problem/content/3305/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stack&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line">stack&lt;<span class="type">int</span>&gt; num;</span><br><span class="line">stack&lt;<span class="type">char</span>&gt; op;</span><br><span class="line"><span class="comment">//优先级表</span></span><br><span class="line">unordered_map&lt;<span class="type">char</span>, <span class="type">int</span>&gt; h&#123; &#123;<span class="string">&#x27;+&#x27;</span>, <span class="number">1</span>&#125;, &#123;<span class="string">&#x27;-&#x27;</span>, <span class="number">1</span>&#125;, &#123;<span class="string">&#x27;*&#x27;</span>,<span class="number">2</span>&#125;, &#123;<span class="string">&#x27;/&#x27;</span>, <span class="number">2</span>&#125; &#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">eval</span><span class="params">()</span><span class="comment">//求值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a = num.<span class="built_in">top</span>();<span class="comment">//第二个操作数</span></span><br><span class="line">num.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> b = num.<span class="built_in">top</span>();<span class="comment">//第一个操作数</span></span><br><span class="line">num.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">char</span> p = op.<span class="built_in">top</span>();<span class="comment">//运算符</span></span><br><span class="line">op.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> r = <span class="number">0</span>;<span class="comment">//结果</span></span><br><span class="line"><span class="comment">//计算结果</span></span><br><span class="line"><span class="keyword">if</span> (p == <span class="string">&#x27;+&#x27;</span>) r = b + a;</span><br><span class="line"><span class="keyword">if</span> (p == <span class="string">&#x27;-&#x27;</span>) r = b - a;</span><br><span class="line"><span class="keyword">if</span> (p == <span class="string">&#x27;*&#x27;</span>) r = b * a;</span><br><span class="line"><span class="keyword">if</span> (p == <span class="string">&#x27;/&#x27;</span>) r = b / a;</span><br><span class="line"></span><br><span class="line">num.<span class="built_in">push</span>(r);<span class="comment">//结果入栈</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string s;<span class="comment">//读入表达式</span></span><br><span class="line">cin &gt;&gt; s;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; s.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isdigit</span>(s[i]))<span class="comment">//数字入栈</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, j = i;<span class="comment">//计算数字</span></span><br><span class="line"><span class="keyword">while</span> (j &lt; s.<span class="built_in">size</span>() &amp;&amp; <span class="built_in">isdigit</span>(s[j]))</span><br><span class="line">&#123;</span><br><span class="line">x = x * <span class="number">10</span> + s[j] - <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line">num.<span class="built_in">push</span>(x);<span class="comment">//数字入栈</span></span><br><span class="line">i = j - <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//左括号无优先级，直接入栈</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;(&#x27;</span>)<span class="comment">//左括号入栈</span></span><br><span class="line">&#123;</span><br><span class="line">op.<span class="built_in">push</span>(s[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//括号特殊，遇到左括号直接入栈，遇到右括号计算括号里面的</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[i] == <span class="string">&#x27;)&#x27;</span>)<span class="comment">//右括号</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (op.<span class="built_in">top</span>() != <span class="string">&#x27;(&#x27;</span>)<span class="comment">//一直计算到左括号</span></span><br><span class="line"><span class="built_in">eval</span>();</span><br><span class="line">op.<span class="built_in">pop</span>();<span class="comment">//左括号出栈</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (op.<span class="built_in">size</span>() &amp;&amp; h[op.<span class="built_in">top</span>()] &gt;= h[s[i]])<span class="comment">//待入栈运算符优先级低，则先计算</span></span><br><span class="line"><span class="built_in">eval</span>();</span><br><span class="line">op.<span class="built_in">push</span>(s[i]);<span class="comment">//操作符入栈</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (op.<span class="built_in">size</span>()) <span class="built_in">eval</span>();<span class="comment">//剩余的进行计算</span></span><br><span class="line">cout &lt;&lt; num.<span class="built_in">top</span>() &lt;&lt; endl;<span class="comment">//输出结果</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-模拟队列"><a href="#5-模拟队列" class="headerlink" title="5.模拟队列"></a>5.模拟队列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/831/">https://www.acwing.com/problem/content/831/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">string op;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&quot;push&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">q[tt++] = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;pop&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">hh++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;empty&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (hh &lt; tt) <span class="built_in">puts</span>(<span class="string">&quot;NO&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;YES&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; q[hh] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-单调栈"><a href="#6-单调栈" class="headerlink" title="6.单调栈"></a>6.单调栈</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/832/">https://www.acwing.com/problem/content/832/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n, stk[N], tt;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">while</span> (tt &amp;&amp; stk[tt] &gt;= x) tt--;</span><br><span class="line"><span class="keyword">if</span> (tt) cout &lt;&lt; stk[tt] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="number">-1</span> &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">stk[++tt] = x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-滑动窗口"><a href="#7-滑动窗口" class="headerlink" title="7.滑动窗口"></a>7.滑动窗口</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/156/">https://www.acwing.com/problem/content/156/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, k;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> a[N], q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 判断队头是否已经滑出窗口</span></span><br><span class="line"><span class="keyword">if</span> (hh &lt;= tt &amp;&amp; i - k + <span class="number">1</span> &gt; q[hh]) hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[q[tt]] &gt;= a[i]) tt--;</span><br><span class="line">q[++tt] = i;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">// 判断队头是否已经滑出窗口</span></span><br><span class="line"><span class="keyword">if</span> (hh &lt;= tt &amp;&amp; i - k + <span class="number">1</span> &gt; q[hh]) hh++;</span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt &amp;&amp; a[q[tt]] &lt;= a[i]) tt--;</span><br><span class="line">q[++tt] = i;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= k - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, a[q[hh]]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-KMP字符串"><a href="#8-KMP字符串" class="headerlink" title="8.KMP字符串"></a>8.KMP字符串</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/833/">https://www.acwing.com/problem/content/833/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>, M = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">char</span> q[N], s[M];</span><br><span class="line"><span class="type">int</span> ne[N];<span class="comment">//保存next数组</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; q + <span class="number">1</span> &gt;&gt; m &gt;&gt; s + <span class="number">1</span>;<span class="comment">//下标均从1开始</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>, j = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">&#123;   <span class="comment">//j表示匹配成功的长度,i表示q数组中的下标,因为q数组的下标是从1开始的,只有1个时,一定为0,所以i从2开始</span></span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; q[i] != q[j + <span class="number">1</span>]) j = ne[j];</span><br><span class="line"><span class="comment">//如果不行可以换到next数组</span></span><br><span class="line"><span class="keyword">if</span> (q[i] == q[j + <span class="number">1</span>]) j++;</span><br><span class="line"><span class="comment">//成功了就加1</span></span><br><span class="line">ne[i] = j;</span><br><span class="line"><span class="comment">//对应其下标</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//j表示匹配成功的长度,因为刚开始还未开始匹配,所以长度为0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = <span class="number">0</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (j &amp;&amp; s[i] != q[j + <span class="number">1</span>]) j = ne[j];</span><br><span class="line"><span class="comment">//如果匹配不成功,则换到j对应的next数组中的值</span></span><br><span class="line"><span class="keyword">if</span> (s[i] == q[j + <span class="number">1</span>]) j++;</span><br><span class="line"><span class="comment">//匹配成功了,那么j就加1,继续后面的匹配</span></span><br><span class="line"><span class="keyword">if</span> (j == n)<span class="comment">//如果长度等于n了,说明已经完全匹配上去了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, i - j);</span><br><span class="line"><span class="comment">//因为题目中的下标从0开始,所以i-j不用+1;</span></span><br><span class="line">j = ne[j];</span><br><span class="line"><span class="comment">//为了观察其后续是否还能跟S数组后面的数配对成功</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-Trie字符串统计"><a href="#9-Trie字符串统计" class="headerlink" title="9.Trie字符串统计"></a>9.Trie字符串统计</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/837/">https://www.acwing.com/problem/content/837/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> son[N][<span class="number">26</span>], cnt[N], idx;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i]; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!son[p][u]) son[p][u] = ++idx;</span><br><span class="line">p = son[p][u];</span><br><span class="line">&#125;</span><br><span class="line">cnt[p]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">char</span> str[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; str[i]; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> u = str[i] - <span class="string">&#x27;a&#x27;</span>;</span><br><span class="line"><span class="keyword">if</span> (!son[p][u]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p = son[p][u];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> cnt[p];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%s&quot;</span>, op, str);</span><br><span class="line"><span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;I&#x27;</span>) <span class="built_in">insert</span>(str);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">query</span>(str));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-最大异或对"><a href="#10-最大异或对" class="headerlink" title="10.最大异或对"></a>10.最大异或对</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/145/">https://www.acwing.com/problem/content/145/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>, M = <span class="number">3000000</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> son[M][<span class="number">2</span>], idx;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">30</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span>&amp; s = son[p][x &gt;&gt; i &amp; <span class="number">1</span>];</span><br><span class="line"><span class="keyword">if</span> (!s) s = ++idx;  <span class="comment">//创建新节点</span></span><br><span class="line">p = s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">query</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>, p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">30</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = x &gt;&gt; i &amp; <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (son[p][!s])</span><br><span class="line">&#123;</span><br><span class="line">res += <span class="number">1</span> &lt;&lt; i;</span><br><span class="line">p = son[p][!s];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> p = son[p][s];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="built_in">insert</span>(a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) res = <span class="built_in">max</span>(res, <span class="built_in">query</span>(a[i]));</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-合并集合"><a href="#11-合并集合" class="headerlink" title="11.合并集合"></a>11.合并集合</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/838/">https://www.acwing.com/problem/content/838/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> p[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//返回x的祖宗节点 + 路径压缩</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line"><span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)  p[i] = i;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d%d&quot;</span>, op, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;M&#x27;</span>) p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(a) == <span class="built_in">find</span>(b)) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-连通块中点的数量"><a href="#12-连通块中点的数量" class="headerlink" title="12.连通块中点的数量"></a>12.连通块中点的数量</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/839/">https://www.acwing.com/problem/content/839/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> p[N], t_size[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//返回x的祖宗节点 + 路径压缩</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line"><span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">p[i] = i;</span><br><span class="line">t_size[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> op[<span class="number">5</span>];</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, op);</span><br><span class="line"><span class="keyword">if</span> (op[<span class="number">0</span>] == <span class="string">&#x27;C&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(a) == <span class="built_in">find</span>(b)) <span class="keyword">continue</span>;</span><br><span class="line">t_size[<span class="built_in">find</span>(b)] += t_size[<span class="built_in">find</span>(a)];</span><br><span class="line">p[<span class="built_in">find</span>(a)] = <span class="built_in">find</span>(b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op[<span class="number">1</span>] == <span class="string">&#x27;1&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(a) == <span class="built_in">find</span>(b)) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t_size[<span class="built_in">find</span>(a)]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13-食物链"><a href="#13-食物链" class="headerlink" title="13.食物链"></a>13.食物链</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/242/">https://www.acwing.com/problem/content/242/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">50010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> p[N], d[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[x] != x)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = <span class="built_in">find</span>(p[x]);</span><br><span class="line">d[x] += d[p[x]];</span><br><span class="line">p[x] = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> p[x];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) p[i] = i;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t, x, y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;t, &amp;x, &amp;y);</span><br><span class="line"><span class="keyword">if</span> (x &gt; n || y &gt; n) res++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> px = <span class="built_in">find</span>(x), py = <span class="built_in">find</span>(y);</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (px == py &amp;&amp; (d[x] - d[y]) % <span class="number">3</span>) res++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (px != py)</span><br><span class="line">&#123;</span><br><span class="line">p[px] = py;</span><br><span class="line">d[px] = d[y] - d[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (px == py &amp;&amp; (d[x] - d[y] - <span class="number">1</span>) % <span class="number">3</span>) res++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (px != py)</span><br><span class="line">&#123;</span><br><span class="line">p[px] = py;</span><br><span class="line">d[px] = d[y] + <span class="number">1</span> - d[x];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14-堆排序"><a href="#14-堆排序" class="headerlink" title="14.堆排序"></a>14.堆排序</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/840/">https://www.acwing.com/problem/content/840/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> h[N], cnt;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">down</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t = u;</span><br><span class="line"><span class="keyword">if</span> (u * <span class="number">2</span> &lt;= cnt &amp;&amp; h[u * <span class="number">2</span>] &lt; h[t]) t = u * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (u * <span class="number">2</span> + <span class="number">1</span> &lt;= cnt &amp;&amp; h[u * <span class="number">2</span> + <span class="number">1</span>] &lt; h[t]) t = u * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (u != t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(h[u], h[t]);</span><br><span class="line"><span class="built_in">down</span>(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;h[i]);</span><br><span class="line">cnt = n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = n / <span class="number">2</span>; i; i--) <span class="built_in">down</span>(i);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, h[<span class="number">1</span>]);</span><br><span class="line">h[<span class="number">1</span>] = h[cnt];</span><br><span class="line">cnt--;</span><br><span class="line"><span class="built_in">down</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-模拟堆"><a href="#15-模拟堆" class="headerlink" title="15.模拟堆"></a>15.模拟堆</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/841/">https://www.acwing.com/problem/content/841/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N];   <span class="comment">//堆</span></span><br><span class="line"><span class="type">int</span> ph[N];  <span class="comment">//存放第k个插入点的下标</span></span><br><span class="line"><span class="type">int</span> hp[N];  <span class="comment">//存放堆中点的插入次序</span></span><br><span class="line"><span class="type">int</span> cur_size;   <span class="comment">//size 记录的是堆当前的数据多少</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//这个交换过程其实有那么些绕 但关键是理解 如果hp[u]=k 则ph[k]=u 的映射关系</span></span><br><span class="line"><span class="comment">//之所以要进行这样的操作是因为 经过一系列操作 堆中的元素并不会保持原有的插入顺序</span></span><br><span class="line"><span class="comment">//从而我们需要对应到原先第K个堆中元素</span></span><br><span class="line"><span class="comment">//如果理解这个原理 那么就能明白其实三步交换的顺序是可以互换</span></span><br><span class="line"><span class="comment">//h,hp,ph之间两两存在映射关系 所以交换顺序的不同对结果并不会产生影响</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">heap_swap</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> v)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">swap</span>(h[u], h[v]);</span><br><span class="line"><span class="built_in">swap</span>(hp[u], hp[v]);</span><br><span class="line"><span class="built_in">swap</span>(ph[hp[u]], ph[hp[v]]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">down</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> t = u;</span><br><span class="line"><span class="keyword">if</span> (u * <span class="number">2</span> &lt;= cur_size &amp;&amp; h[t] &gt; h[u * <span class="number">2</span>]) t = u * <span class="number">2</span>;</span><br><span class="line"><span class="keyword">if</span> (u * <span class="number">2</span> + <span class="number">1</span> &lt;= cur_size &amp;&amp; h[t] &gt; h[u * <span class="number">2</span> + <span class="number">1</span>])  t = u * <span class="number">2</span> + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (u != t)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">heap_swap</span>(u, t);</span><br><span class="line"><span class="built_in">down</span>(t);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">up</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (u / <span class="number">2</span> &gt; <span class="number">0</span> &amp;&amp; h[u] &lt; h[u / <span class="number">2</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">heap_swap</span>(u, u / <span class="number">2</span>);</span><br><span class="line"><span class="built_in">up</span>(u &gt;&gt; <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;      <span class="comment">//m用来记录插入的数的个数</span></span><br><span class="line"><span class="comment">//注意m的意义与cur_size是不同的 cur_size是记录堆中当前数据的多少</span></span><br><span class="line"><span class="comment">//对应上文 m即是hp中应该存的值</span></span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">string op;</span><br><span class="line"><span class="type">int</span> k, x;</span><br><span class="line">cin &gt;&gt; op;</span><br><span class="line"><span class="keyword">if</span> (op == <span class="string">&quot;I&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">m++;</span><br><span class="line">h[++cur_size] = x;</span><br><span class="line">ph[m] = cur_size;</span><br><span class="line">hp[cur_size] = m;</span><br><span class="line"><span class="comment">//down(size);</span></span><br><span class="line"><span class="built_in">up</span>(cur_size);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;PM&quot;</span>)    cout &lt;&lt; h[<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;DM&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">heap_swap</span>(<span class="number">1</span>, cur_size);</span><br><span class="line">cur_size--;</span><br><span class="line"><span class="built_in">down</span>(<span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;D&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; k;</span><br><span class="line"><span class="type">int</span> u = ph[k];            <span class="comment">//这里一定要用u=ph[k]保存第k个插入点的下标</span></span><br><span class="line"><span class="built_in">heap_swap</span>(u, cur_size);   <span class="comment">//因为在此处heap_swap操作后ph[k]的值已经发生</span></span><br><span class="line">cur_size--;               <span class="comment">//如果在up,down操作中仍然使用ph[k]作为参数就会发生错误</span></span><br><span class="line"><span class="built_in">up</span>(u);</span><br><span class="line"><span class="built_in">down</span>(u);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (op == <span class="string">&quot;C&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; k &gt;&gt; x;</span><br><span class="line">h[ph[k]] = x;     <span class="comment">//此处由于未涉及heap_swap操作且下面的up、down操作只会发生一个所以</span></span><br><span class="line"><span class="built_in">down</span>(ph[k]);      <span class="comment">//所以可直接传入ph[k]作为参数</span></span><br><span class="line"><span class="built_in">up</span>(ph[k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="16-模拟散列表"><a href="#16-模拟散列表" class="headerlink" title="16.模拟散列表"></a>16.模拟散列表</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/842/">https://www.acwing.com/problem/content/842/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200003</span>, null = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="type">int</span> h[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> k = (x % N + N) % N;</span><br><span class="line"><span class="keyword">while</span> (h[k] != null &amp;&amp; h[k] != x)</span><br><span class="line">&#123;</span><br><span class="line">k++;</span><br><span class="line"><span class="keyword">if</span> (k == N) k = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> k;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(h));</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> op[<span class="number">2</span>];</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, op, &amp;x);</span><br><span class="line"><span class="type">int</span> k = <span class="built_in">find</span>(x);</span><br><span class="line"><span class="keyword">if</span> (*op == <span class="string">&#x27;I&#x27;</span>) h[k] = x;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (h[k] != null) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-字符串哈希"><a href="#17-字符串哈希" class="headerlink" title="17.字符串哈希"></a>17.字符串哈希</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/843/">https://www.acwing.com/problem/content/843/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">unsigned</span> <span class="type">long</span> <span class="type">long</span> ULL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>, P = <span class="number">131</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">char</span> str[N];</span><br><span class="line">ULL h[N], p[N];</span><br><span class="line"></span><br><span class="line"><span class="function">ULL <span class="title">get</span><span class="params">(<span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> h[r] - h[l - <span class="number">1</span>] * p[r - l + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%s&quot;</span>, &amp;n, &amp;m, str + <span class="number">1</span>);</span><br><span class="line">p[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">&#123;</span><br><span class="line">p[i] = p[i - <span class="number">1</span>] * P;</span><br><span class="line">h[i] = h[i - <span class="number">1</span>] * P + str[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> l1, r1, l2, r2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d%d&quot;</span>, &amp;l1, &amp;r1, &amp;l2, &amp;r2);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">get</span>(l1, r1) == <span class="built_in">get</span>(l2, r2)) <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h3 id="第三讲-搜索与图论"><a href="#第三讲-搜索与图论" class="headerlink" title="第三讲 搜索与图论"></a>第三讲 搜索与图论</h3><h4 id="1-排列数字"><a href="#1-排列数字" class="headerlink" title="1.排列数字"></a>1.排列数字</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/844/">https://www.acwing.com/problem/content/844/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> path[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (u == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, path[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!st[i])</span><br><span class="line">&#123;</span><br><span class="line">path[u] = i;</span><br><span class="line">st[i] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(u + <span class="number">1</span>);</span><br><span class="line">st[i] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-n-皇后问题"><a href="#2-n-皇后问题" class="headerlink" title="2.n-皇后问题"></a>2.n-皇后问题</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/845/">https://www.acwing.com/problem/content/845/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">bool</span> col[N], dg[N * <span class="number">2</span>], udg[N * <span class="number">2</span>];</span><br><span class="line"><span class="type">char</span> g[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (u == n)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(g[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//只要保证不同对角线会对应到不同数组下标即可</span></span><br><span class="line"><span class="keyword">if</span> (!col[i] &amp;&amp; !dg[n - u + i] &amp;&amp; !udg[u + i])</span><br><span class="line">&#123;</span><br><span class="line">g[u][i] = <span class="string">&#x27;Q&#x27;</span>;</span><br><span class="line">col[i] = dg[n - u + i] = udg[u + i] = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">dfs</span>(u + <span class="number">1</span>);</span><br><span class="line">col[i] = dg[n - u + i] = udg[u + i] = <span class="literal">false</span>;</span><br><span class="line">g[u][i] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">&#123;</span><br><span class="line">g[i][j] = <span class="string">&#x27;.&#x27;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-走迷宫"><a href="#3-走迷宫" class="headerlink" title="3.走迷宫"></a>3.走迷宫</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/846/">https://www.acwing.com/problem/content/846/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> g[N][N];</span><br><span class="line"><span class="type">int</span> d[N][N];</span><br><span class="line">PII q[N * N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line">q[<span class="number">0</span>] = &#123; <span class="number">0</span>, <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="built_in">sizeof</span>(d));</span><br><span class="line">d[<span class="number">0</span>][<span class="number">0</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">&#123;</span><br><span class="line">PII t = q[hh++];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = t.first + dx[i], y = t.second + dy[i];</span><br><span class="line"><span class="keyword">if</span> (x &gt;= <span class="number">0</span> &amp;&amp; x &lt; n &amp;&amp; y &gt;= <span class="number">0</span> &amp;&amp; y &lt; m &amp;&amp; g[x][y] == <span class="number">0</span> &amp;&amp; d[x][y] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[x][y] = d[t.first][t.second] + <span class="number">1</span>;</span><br><span class="line">q[++tt] = &#123; x, y &#125;;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d[n - <span class="number">1</span>][m - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; ++j)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; g[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">bfs</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-八数码"><a href="#4-八数码" class="headerlink" title="4.八数码"></a>4.八数码</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/847/">https://www.acwing.com/problem/content/847/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">(string start)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string end = <span class="string">&quot;12345678x&quot;</span>;</span><br><span class="line">queue&lt;string&gt; q;</span><br><span class="line">unordered_map&lt;string, <span class="type">int</span>&gt; d;</span><br><span class="line">q.<span class="built_in">push</span>(start);</span><br><span class="line">d[start] = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> dx[<span class="number">4</span>] = &#123; <span class="number">-1</span>, <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span> &#125;, dy[<span class="number">4</span>] = &#123; <span class="number">0</span>, <span class="number">1</span>, <span class="number">0</span>, <span class="number">-1</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line">string t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> distance = d[t];</span><br><span class="line"><span class="keyword">if</span> (t == end) <span class="keyword">return</span> distance;</span><br><span class="line"><span class="comment">//状态转移</span></span><br><span class="line"><span class="type">int</span> k = t.<span class="built_in">find</span>(<span class="string">&#x27;x&#x27;</span>);</span><br><span class="line"><span class="type">int</span> x = k / <span class="number">3</span>, y = k % <span class="number">3</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = x + dx[i], b = y + dy[i];</span><br><span class="line"><span class="keyword">if</span> (a &gt;= <span class="number">0</span> &amp;&amp; a &lt; <span class="number">3</span> &amp;&amp; b &gt;= <span class="number">0</span> &amp;&amp; b &lt; <span class="number">3</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(t[k], t[a * <span class="number">3</span> + b]);</span><br><span class="line"><span class="keyword">if</span> (!d.<span class="built_in">count</span>(t))</span><br><span class="line">&#123;</span><br><span class="line">d[t] = distance + <span class="number">1</span>;</span><br><span class="line">q.<span class="built_in">push</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">swap</span>(t[k], t[a * <span class="number">3</span> + b]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string start;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">9</span>; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> c;</span><br><span class="line">cin &gt;&gt; c;</span><br><span class="line">start.<span class="built_in">push_back</span>(c);</span><br><span class="line"><span class="comment">//start += c;</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">bfs</span>(start) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-树的重心"><a href="#5-树的重心" class="headerlink" title="5.树的重心"></a>5.树的重心</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/848/">https://www.acwing.com/problem/content/848/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>; <span class="comment">//数据范围是10的5次方</span></span><br><span class="line"><span class="type">const</span> <span class="type">int</span> M = <span class="number">2</span> * N; <span class="comment">//以有向图的格式存储无向图，所以每个节点至多对应2n-2条边</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> h[N]; <span class="comment">//邻接表存储树，有n个节点，所以需要n个队列头节点</span></span><br><span class="line"><span class="type">int</span> e[M]; <span class="comment">//存储元素</span></span><br><span class="line"><span class="type">int</span> ne[M]; <span class="comment">//存储列表的next值</span></span><br><span class="line"><span class="type">int</span> idx; <span class="comment">//单链表指针</span></span><br><span class="line"><span class="type">int</span> n; <span class="comment">//题目所给的输入，n个节点</span></span><br><span class="line"><span class="type">int</span> ans = N; <span class="comment">//表示重心的所有的子树中，最大的子树的结点数目</span></span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> st[N]; <span class="comment">//记录节点是否被访问过，访问过则标记为true</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//a所对应的单链表中插入b  a作为根</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">// dfs 框架</span></span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">void dfs(int u)</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">st[u]=true; // 标记一下，记录为已经被搜索过了，下面进行搜索过程</span></span><br><span class="line"><span class="comment">for(int i=h[u];i!=-1;i=ne[i])</span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">int j=e[i];</span></span><br><span class="line"><span class="comment">if(!st[j]) </span></span><br><span class="line"><span class="comment">&#123;</span></span><br><span class="line"><span class="comment">dfs(j);</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">&#125;</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="comment">//返回以u为根的子树中节点的个数，包括u节点</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>; <span class="comment">//存储 删掉某个节点之后，最大的连通子图节点数</span></span><br><span class="line">st[u] = <span class="literal">true</span>; <span class="comment">//标记访问过u节点</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">1</span>; <span class="comment">//存储 以u为根的树 的节点数, 包括u，如图中的4号节点</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//访问u的每个子节点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="comment">//因为每个节点的编号都是不一样的，所以 用编号为下标 来标记是否被访问过</span></span><br><span class="line"><span class="keyword">if</span> (!st[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="built_in">dfs</span>(j);  <span class="comment">// u节点的单棵子树节点数 如图中的size值</span></span><br><span class="line">res = <span class="built_in">max</span>(res, s); <span class="comment">// 记录最大联通子图的节点数</span></span><br><span class="line">sum += s; <span class="comment">//以j为根的树 的节点数</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//n-sum 如图中的n-size值，不包括根节点4；</span></span><br><span class="line">res = <span class="built_in">max</span>(res, n - sum); <span class="comment">// 选择u节点为重心，最大的 连通子图节点数</span></span><br><span class="line">ans = <span class="built_in">min</span>(res, ans); <span class="comment">//遍历过的假设重心中，最小的最大联通子图的 节点数</span></span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h); <span class="comment">//初始化h数组 -1表示尾节点</span></span><br><span class="line">cin &gt;&gt; n; <span class="comment">//表示树的结点数</span></span><br><span class="line"></span><br><span class="line"><span class="comment">// 题目接下来会输入，n-1行数据，</span></span><br><span class="line"><span class="comment">// 树中是不存在环的，对于有n个节点的树，必定是n-1条边</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b), <span class="built_in">add</span>(b, a); <span class="comment">//无向图</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">dfs</span>(<span class="number">1</span>); <span class="comment">//可以任意选定一个节点开始 u&lt;=n</span></span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-图中点的层次"><a href="#6-图中点的层次" class="headerlink" title="6.图中点的层次"></a>6.图中点的层次</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/849/">https://www.acwing.com/problem/content/849/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N], e[N], idx, ne[N];</span><br><span class="line"><span class="type">int</span> d[N]; <span class="comment">//存储每个节点离起点的距离  d[1]=0</span></span><br><span class="line"><span class="type">int</span> n, m; <span class="comment">//n个节点m条边</span></span><br><span class="line"><span class="type">int</span> q[N]; <span class="comment">//存储层次遍历序列 0号节点是编号为1的节点</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bfs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">0</span>;</span><br><span class="line">q[<span class="number">0</span>] = <span class="number">1</span>; <span class="comment">//0号节点是编号为1的节点</span></span><br><span class="line"><span class="built_in">memset</span>(d, <span class="number">-1</span>, <span class="keyword">sizeof</span> d);</span><br><span class="line">d[<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">//存储每个节点离起点的距离</span></span><br><span class="line"><span class="comment">//当我们的队列不为空时</span></span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//取出队列头部节点</span></span><br><span class="line"><span class="type">int</span> t = q[hh++];</span><br><span class="line"><span class="comment">//遍历t节点的每一个邻边</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="comment">//如果j没有被扩展过</span></span><br><span class="line"><span class="keyword">if</span> (d[j] == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">d[j] = d[t] + <span class="number">1</span>; <span class="comment">//d[j]存储j节点离起点的距离，并标记为访问过</span></span><br><span class="line">q[++tt] = j; <span class="comment">//把j结点 压入队列</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> d[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">bfs</span>() &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-有向图的拓扑序列"><a href="#7-有向图的拓扑序列" class="headerlink" title="7.有向图的拓扑序列"></a>7.有向图的拓扑序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/850/">https://www.acwing.com/problem/content/850/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], idx;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> q[N], d[N];<span class="comment">//q表示队列,d表示点的入度</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b;</span><br><span class="line">ne[idx] = h[a];</span><br><span class="line">h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">topsort</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> hh = <span class="number">0</span>, tt = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span> (!d[i])</span><br><span class="line">q[++tt] = i;<span class="comment">//将入度为零的点入队</span></span><br><span class="line"><span class="keyword">while</span> (hh &lt;= tt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = q[hh++];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line">d[j]--;<span class="comment">//删除点t指向点j的边</span></span><br><span class="line"><span class="keyword">if</span> (d[j] == <span class="number">0</span>)<span class="comment">//如果点j的入度为零了,就将点j入队</span></span><br><span class="line">q[++tt] = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> tt == n - <span class="number">1</span>;</span><br><span class="line"><span class="comment">//表示如果n个点都入队了话,那么该图为拓扑图,返回true,否则返回false</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="built_in">sizeof</span>(h));<span class="comment">//如果程序时间溢出，就是没有加上这一句</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">add</span>(a, b);<span class="comment">//因为是a指向b,所以b点的入度要加1</span></span><br><span class="line">d[b]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">topsort</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, q[i]);</span><br><span class="line"><span class="comment">//经上方循环可以发现队列中的点的次序就是拓扑序列</span></span><br><span class="line"><span class="comment">//注:拓扑序列的答案并不唯一,可以从解析中找到解释</span></span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-Dijkstra求最短路-I"><a href="#8-Dijkstra求最短路-I" class="headerlink" title="8.Dijkstra求最短路 I"></a>8.Dijkstra求最短路 I</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/851/">https://www.acwing.com/problem/content/851/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="type">int</span> g[N][N];    <span class="comment">//为稠密阵所以用邻接矩阵存储</span></span><br><span class="line"><span class="type">int</span> dist[N];    <span class="comment">//用于记录每一个点距离第一个点的距离</span></span><br><span class="line"><span class="type">bool</span> st[N];     <span class="comment">//用于记录该点的最短距离是否已经确定</span></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Dijkstra</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);     <span class="comment">//初始化距离  0x3f代表无限大</span></span><br><span class="line">dist[<span class="number">1</span>] = <span class="number">0</span>;  <span class="comment">//第一个点到自身的距离为0</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)      <span class="comment">//有n个点所以要进行n次 迭代</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = <span class="number">-1</span>;       <span class="comment">//t存储当前访问的点</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)   <span class="comment">//这里的j代表的是从1号点开始</span></span><br><span class="line"><span class="keyword">if</span> (!st[j] &amp;&amp; (t == <span class="number">-1</span> || dist[t] &gt; dist[j]))</span><br><span class="line">t = j;</span><br><span class="line">st[t] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)           <span class="comment">//依次更新每个点所到相邻的点路径值</span></span><br><span class="line">dist[j] = <span class="built_in">min</span>(dist[j], dist[t] + g[t][j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (dist[n] == <span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;  <span class="comment">//如果第n个点路径为无穷大即不存在最低路径</span></span><br><span class="line"><span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(g, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> g);    <span class="comment">//初始化图 因为是求最短路径</span></span><br><span class="line"><span class="comment">//所以每个点初始为无限大</span></span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x, y, z;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">g[x][y] = <span class="built_in">min</span>(g[x][y], z);     <span class="comment">//如果发生重边的情况则保留最短的一条边</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="built_in">Dijkstra</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-Dijkstra求最短路-II"><a href="#9-Dijkstra求最短路-II" class="headerlink" title="9.Dijkstra求最短路 II"></a>9.Dijkstra求最短路 II</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/852/">https://www.acwing.com/problem/content/852/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;memory.h&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line">vector&lt;vector&lt;pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt;&gt;&gt; gra;</span><br><span class="line"><span class="type">int</span> dist[N];</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">solve</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//这里是距离在前 节点号在后</span></span><br><span class="line">priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; heap;</span><br><span class="line">heap.<span class="built_in">push</span>(&#123; <span class="number">0</span>, <span class="number">1</span> &#125;);      <span class="comment">// first存储距离，second存储节点编号</span></span><br><span class="line"><span class="keyword">while</span> (heap.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> t = heap.<span class="built_in">top</span>();</span><br><span class="line">heap.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> node = t.second; <span class="type">int</span> distance = t.first;</span><br><span class="line"><span class="keyword">if</span> (st[node]) <span class="keyword">continue</span>;</span><br><span class="line">st[node] = <span class="literal">true</span>;</span><br><span class="line"><span class="comment">//查看每个出边</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; gra[node].<span class="built_in">size</span>(); i++) &#123;</span><br><span class="line"><span class="type">int</span> newnode = gra[node][i].first;</span><br><span class="line"><span class="type">int</span> len = gra[node][i].second;</span><br><span class="line"><span class="keyword">if</span> (dist[newnode] &gt; dist[node] + len) &#123;</span><br><span class="line">dist[newnode] = dist[node] + len;</span><br><span class="line">heap.<span class="built_in">push</span>(&#123; dist[newnode],newnode &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (dist[n] == <span class="number">0x3f3f3f3f</span>) <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//cin &gt;&gt; n &gt;&gt; m;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">gra.<span class="built_in">resize</span>(n + <span class="number">1</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="comment">//cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d %d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="comment">//这里是 目的节点号在前 边长在后</span></span><br><span class="line">gra[a].<span class="built_in">push_back</span>(&#123; b,c &#125;);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">solve</span>());</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-有边数限制的最短路"><a href="#10-有边数限制的最短路" class="headerlink" title="10.有边数限制的最短路"></a>10.有边数限制的最短路</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/855/">https://www.acwing.com/problem/content/855/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> dist[N], backup[N];</span><br><span class="line"><span class="type">int</span> k, n, m;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a; <span class="type">int</span> b; <span class="type">int</span> w;</span><br><span class="line">&#125;edge[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">bellman_ford</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">dist[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= k; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">memcpy</span>(backup, dist, <span class="keyword">sizeof</span> dist);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = edge[j].a, b = edge[j].b, w = edge[j].w;</span><br><span class="line">dist[b] = <span class="built_in">min</span>(dist[b], backup[a] + w);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line">edge[i].a = a, edge[i].b = b, edge[i].w = c;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = <span class="built_in">bellman_ford</span>();</span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">0x3f3f3f3f</span> / <span class="number">2</span>)<span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-spfa求最短路"><a href="#11-spfa求最短路" class="headerlink" title="11.spfa求最短路"></a>11.spfa求最短路</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/853/">https://www.acwing.com/problem/content/853/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> h[N], w[N], e[N], ne[N], idx;</span><br><span class="line"><span class="type">int</span> dist[N]; <span class="comment">//储存当前点到起点的距离</span></span><br><span class="line"><span class="type">bool</span> st[N];  <span class="comment">//当前点是否在队列当中，防止存重复的点</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dist, <span class="number">0x3f</span>, <span class="keyword">sizeof</span> dist);</span><br><span class="line">dist[<span class="number">1</span>] = <span class="number">0</span>; <span class="comment">//起点距自己的距离为 0</span></span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(<span class="number">1</span>); <span class="comment">//起点加入队列</span></span><br><span class="line">st[<span class="number">1</span>] = <span class="literal">true</span>; <span class="comment">//起点在队列里了</span></span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>()) <span class="comment">//如果队列不空</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = q.<span class="built_in">front</span>(); <span class="comment">//取出队头</span></span><br><span class="line">q.<span class="built_in">pop</span>(); <span class="comment">//删掉队头</span></span><br><span class="line">st[t] = <span class="literal">false</span>;<span class="comment">//这个点已经不在队列里边了</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i]) <span class="comment">//更新 t 的所有邻边</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i]; <span class="comment">//取出当前邻边的节点</span></span><br><span class="line"><span class="keyword">if</span> (dist[j] &gt; dist[t] + w[i])</span><br><span class="line">&#123;</span><br><span class="line">dist[j] = dist[t] + w[i];</span><br><span class="line"><span class="keyword">if</span> (!st[j]) <span class="comment">//如果 j 不在队列里边</span></span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(j); <span class="comment">//加入队列</span></span><br><span class="line">st[j] = <span class="literal">true</span>; <span class="comment">//在队列里了</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dist[n];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;c);</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = <span class="built_in">spfa</span>();</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">0x3f3f3f3f</span>) <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-spfa判断负环"><a href="#12-spfa判断负环" class="headerlink" title="12.spfa判断负环"></a>12.spfa判断负环</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/854/">https://www.acwing.com/problem/content/854/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> h[N], e[N], ne[N], w[N], idx;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> dis[N], cnt[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">spfa</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(dis, <span class="number">0x3f</span>, <span class="built_in">sizeof</span>(dis));</span><br><span class="line">dis[<span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">queue&lt;<span class="type">int</span>&gt; q;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">st[i] = <span class="literal">true</span>;</span><br><span class="line">q.<span class="built_in">push</span>(i);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (q.<span class="built_in">size</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = q.<span class="built_in">front</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line">st[t] = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[t]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span> (dis[j] &gt; dis[t] + w[i])</span><br><span class="line">&#123;</span><br><span class="line">dis[j] = dis[t] + w[i];</span><br><span class="line">cnt[j] = cnt[t] + <span class="number">1</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (cnt[j] &gt;= n)<span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (!st[j])</span><br><span class="line">&#123;</span><br><span class="line">q.<span class="built_in">push</span>(j);</span><br><span class="line">st[j] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="built_in">sizeof</span>(h));</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, c;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; c;</span><br><span class="line"><span class="built_in">add</span>(a, b, c);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">spfa</span>())<span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13-Floyd求最短路"><a href="#13-Floyd求最短路" class="headerlink" title="13.Floyd求最短路"></a>13.Floyd求最短路</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/856/">https://www.acwing.com/problem/content/856/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">210</span>, M = <span class="number">2e+10</span>, INF = <span class="number">1e9</span>;</span><br><span class="line"><span class="type">int</span> n, m, k, x, y, z;</span><br><span class="line"><span class="type">int</span> d[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">floyd</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">1</span>; k &lt;= n; k++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">d[i][j] = <span class="built_in">min</span>(d[i][j], d[i][k] + d[k][j]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m &gt;&gt; k;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line"><span class="keyword">if</span> (i == j) d[i][j] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> d[i][j] = INF;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y &gt;&gt; z;</span><br><span class="line">d[x][y] = <span class="built_in">min</span>(d[x][y], z);</span><br><span class="line"><span class="comment">//注意保存最小的边</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">floyd</span>();</span><br><span class="line"><span class="keyword">while</span> (k--)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; x &gt;&gt; y;</span><br><span class="line"><span class="keyword">if</span> (d[x][y] &gt; INF / <span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line"><span class="comment">//由于有负权边存在所以约大过INF/2也很合理</span></span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; d[x][y] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14-Prim算法求最小生成树"><a href="#14-Prim算法求最小生成树" class="headerlink" title="14.Prim算法求最小生成树"></a>14.Prim算法求最小生成树</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/860/">https://www.acwing.com/problem/content/860/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> MAXN = <span class="number">510</span>, MAXM = <span class="number">2</span> * <span class="number">1e5</span> + <span class="number">10</span>, INF = <span class="number">0x3f3f3f3f</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>, <span class="type">int</span>&gt; PII;</span><br><span class="line"><span class="type">int</span> h[MAXM], e[MAXM], w[MAXM], ne[MAXM], idx;</span><br><span class="line"><span class="type">bool</span> vis[MAXN];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> c)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, w[idx] = c, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Prim</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(vis, <span class="literal">false</span>, <span class="keyword">sizeof</span> vis);</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">priority_queue&lt;PII, vector&lt;PII&gt;, greater&lt;PII&gt;&gt; q;</span><br><span class="line">q.<span class="built_in">push</span>(&#123; <span class="number">0</span>, <span class="number">1</span> &#125;);</span><br><span class="line"></span><br><span class="line"><span class="keyword">while</span> (!q.<span class="built_in">empty</span>())</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">auto</span> t = q.<span class="built_in">top</span>();</span><br><span class="line">q.<span class="built_in">pop</span>();</span><br><span class="line"><span class="type">int</span> ver = t.second, dst = t.first;</span><br><span class="line"><span class="keyword">if</span> (vis[ver]) <span class="keyword">continue</span>;</span><br><span class="line">vis[ver] = <span class="literal">true</span>, sum += dst, ++cnt;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[ver]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span> (!vis[j]) &#123;</span><br><span class="line">q.<span class="built_in">push</span>(&#123; w[i], j &#125;);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cnt != n) <span class="keyword">return</span> INF;</span><br><span class="line"><span class="keyword">return</span> sum;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, w;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; w;</span><br><span class="line"><span class="built_in">add</span>(a, b, w);</span><br><span class="line"><span class="built_in">add</span>(b, a, w);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = <span class="built_in">Prim</span>();</span><br><span class="line"><span class="keyword">if</span> (t == INF) cout &lt;&lt; <span class="string">&quot;impossible&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; t &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-Kruskal算法求最小生成树"><a href="#15-Kruskal算法求最小生成树" class="headerlink" title="15.Kruskal算法求最小生成树"></a>15.Kruskal算法求最小生成树</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/861/">https://www.acwing.com/problem/content/861/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">200010</span>, M = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> p[M];</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Edge</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, w;</span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Edge&amp; W)<span class="type">const</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> w &lt; W.w;</span><br><span class="line">&#125;</span><br><span class="line">&#125;edges[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (p[x] != x) p[x] = <span class="built_in">find</span>(p[x]);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> x;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">Kruskal</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>, cnt = <span class="number">0</span>;<span class="comment">//res记录最小生成树的树边权重之和,cnt记录的是全部加入到树的集合中边的数量(可能有多个集合)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = edges[i].a, b = edges[i].b, w = edges[i].w;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(a) != <span class="built_in">find</span>(b))</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">具体可以参考连通块中点的数量,如果a和b已经在一个集合当中了,说明这两个点已经被一种方式连接起来了,</span></span><br><span class="line"><span class="comment">如果加入a-b这条边,会导致集合中有环的生成,而树中不允许有环生成,所以一个连通块中的点的数量假设</span></span><br><span class="line"><span class="comment">为x,那么里面x个节点应该是被串联起来的,有x-1条边,所以只有当a,b所属的集合不同时,才能将a-b这条</span></span><br><span class="line"><span class="comment">边加入到总集合当中去</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line">&#123;</span><br><span class="line">p[<span class="built_in">find</span>(a)] = p[<span class="built_in">find</span>(b)];<span class="comment">//将a,b所在的两个集合连接起来</span></span><br><span class="line">cnt++;<span class="comment">//因为加入的是a-b的这一条边,将a,b所在的两个集合连接之后,全部集合中的边数加1</span></span><br><span class="line">res += w;<span class="comment">//加入到集合中的边的权重之和</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (cnt == n - <span class="number">1</span>) <span class="keyword">return</span> res;<span class="comment">//可以生成最小生成树</span></span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0x3f3f3f3f</span>;<span class="comment">//树中有n个节点便有n-1条边,如果cnt不等于n-1的话,说明无法生成有n个节点的树</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) p[i] = i;<span class="comment">//初始化并查集</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, w;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;w);</span><br><span class="line">edges[i] = &#123; a,b,w &#125;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(edges, edges + m);<span class="comment">//将边的权重按照大小一一排序</span></span><br><span class="line"><span class="type">int</span> t = <span class="built_in">Kruskal</span>();</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">0x3f3f3f3f</span>) <span class="built_in">printf</span>(<span class="string">&quot;impossible\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, t);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="16-染色法判定二分图"><a href="#16-染色法判定二分图" class="headerlink" title="16.染色法判定二分图"></a>16.染色法判定二分图</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/862/">https://www.acwing.com/problem/content/862/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e5</span> + <span class="number">10</span>, M = <span class="number">2e5</span> + <span class="number">10</span>;<span class="comment">//由于是无向图, 顶点数最大是N，那么边数M最大是顶点数的2倍</span></span><br><span class="line"><span class="type">int</span> e[M], ne[M], h[N], idx;</span><br><span class="line"><span class="type">int</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u, <span class="type">int</span> color)</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">st[u] = color;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[u]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span> (!st[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">dfs</span>(j, <span class="number">3</span> - color)) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (st[j] == color) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line"><span class="keyword">while</span> (m--) &#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">add</span>(a, b), <span class="built_in">add</span>(b, a);<span class="comment">//无向图，a-&gt;b, b-&gt;a</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!st[i]) </span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!<span class="built_in">dfs</span>(i, <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (flag) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-二分图的最大匹配"><a href="#17-二分图的最大匹配" class="headerlink" title="17.二分图的最大匹配"></a>17.二分图的最大匹配</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/863/">https://www.acwing.com/problem/content/863/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>, M = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n1, n2, m;</span><br><span class="line"><span class="type">int</span> h[N], ne[M], e[M], idx;</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"><span class="type">int</span> match[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">add</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">e[idx] = b, ne[idx] = h[a], h[a] = idx++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(h, <span class="number">-1</span>, <span class="keyword">sizeof</span> h);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//遍历自己喜欢的女孩</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = h[x]; i != <span class="number">-1</span>; i = ne[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = e[i];</span><br><span class="line"><span class="keyword">if</span> (!st[j])<span class="comment">//如果在这一轮模拟匹配中,这个女孩尚未被预定</span></span><br><span class="line">&#123;</span><br><span class="line">st[j] = <span class="literal">true</span>;<span class="comment">//那x就预定这个女孩了</span></span><br><span class="line"><span class="comment">//如果女孩j没有男朋友，或者她原来的男朋友能够预定其它喜欢的女孩。配对成功</span></span><br><span class="line"><span class="keyword">if</span> (!match[j] || <span class="built_in">find</span>(match[j]))</span><br><span class="line">&#123;</span><br><span class="line">match[j] = x;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//自己中意的全部都被预定了。配对失败。</span></span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line">cin &gt;&gt; n1 &gt;&gt; n2 &gt;&gt; m;</span><br><span class="line"><span class="keyword">while</span> (m--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">add</span>(a, b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n1; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//因为每次模拟匹配的预定情况都是不一样的所以每轮模拟都要初始化</span></span><br><span class="line"><span class="built_in">memset</span>(st, <span class="literal">false</span>, <span class="keyword">sizeof</span> st);</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">find</span>(i))</span><br><span class="line">res++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h3 id="第四讲-数学知识"><a href="#第四讲-数学知识" class="headerlink" title="第四讲 数学知识"></a>第四讲 数学知识</h3><h4 id="1-试除法判定质数"><a href="#1-试除法判定质数" class="headerlink" title="1.试除法判定质数"></a>1.试除法判定质数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/868/">https://www.acwing.com/problem/content/868/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">isPrime</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (n &lt; <span class="number">2</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / i; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; a[i];</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">isPrime</span>(a[i])) <span class="built_in">printf</span>(<span class="string">&quot;Yes\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-分解质因数"><a href="#2-分解质因数" class="headerlink" title="2.分解质因数"></a>2.分解质因数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/869/">https://www.acwing.com/problem/content/869/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">divide</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / i; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>) <span class="comment">//i一定是质数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">n /= i;</span><br><span class="line">s++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, i, s);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, n, <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="built_in">divide</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-筛质数"><a href="#3-筛质数" class="headerlink" title="3.筛质数"></a>3.筛质数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/870/">https://www.acwing.com/problem/content/870/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">bool</span> isprime[N];</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">isprime[i] = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n / i; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isprime[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i * i; j &lt;= n; j += i)</span><br><span class="line">&#123;</span><br><span class="line">isprime[j] = <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, cnt = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">get_primes</span>(n);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isprime[i]) cnt++;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="comment">//primes数组用来存放质数</span></span><br><span class="line"><span class="type">int</span> primes[N], cnt;</span><br><span class="line"><span class="comment">//st[i], i为质数则为false否则为true</span></span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i]) primes[cnt++] = i;</span><br><span class="line">        <span class="comment">//假设primes[0]为n最小的质因子,i为最大的因数，</span></span><br><span class="line">        <span class="comment">//易知若primes[i]中i&gt;0,则会进入循环后产生多余的标记。</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="comment">//标记;primes[j]一定是primes[j]*i的最小质因子</span></span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="comment">//表明primes[j]一定是i的最小质因子,没有必要再遍历,primes要小于等于i的最小质因子</span></span><br><span class="line">            <span class="comment">//这样能保证每个数遍历一遍,而没有重复</span></span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">get_primes</span>(n);</span><br><span class="line">    cout &lt;&lt; cnt &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-试除法求约数"><a href="#4-试除法求约数" class="headerlink" title="4.试除法求约数"></a>4.试除法求约数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/871/">https://www.acwing.com/problem/content/871/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">get_divisors</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n / i; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans.<span class="built_in">push_back</span>(i);</span><br><span class="line"><span class="keyword">if</span> (i != n / i) ans.<span class="built_in">push_back</span>(n / i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">sort</span>(ans.<span class="built_in">begin</span>(), ans.<span class="built_in">end</span>());</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans = <span class="built_in">get_divisors</span>(x);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ans.<span class="built_in">size</span>(); i++) cout &lt;&lt; ans[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-约数个数"><a href="#5-约数个数" class="headerlink" title="5.约数个数"></a>5.约数个数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/872/">https://www.acwing.com/problem/content/872/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line">unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; primes;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x /= i;</span><br><span class="line">primes[i]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &gt; <span class="number">1</span>) primes[x]++;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="keyword">auto</span> prime : primes)</span><br><span class="line">&#123;</span><br><span class="line">res = res * (prime.second + <span class="number">1</span>) % mod;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-约数之和"><a href="#6-约数之和" class="headerlink" title="6.约数之和"></a>6.约数之和</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/873/">https://www.acwing.com/problem/content/873/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_map&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    unordered_map&lt;<span class="type">int</span>, <span class="type">int</span>&gt; primes;</span><br><span class="line">    <span class="keyword">while</span> (n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line">        cin &gt;&gt; x;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= x / i; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">while</span> (x % i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                x /= i;</span><br><span class="line">                primes[i]++;</span><br><span class="line"></span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span> (x &gt; <span class="number">1</span>) primes[x]++;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="keyword">auto</span> prime : primes)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> p = prime.first, a = prime.second;</span><br><span class="line">        LL t = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">while</span> (a--)</span><br><span class="line">        &#123;</span><br><span class="line">            t = (t * p + <span class="number">1</span>) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">        res = res * t % mod;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-最大公约数"><a href="#7-最大公约数" class="headerlink" title="7.最大公约数"></a>7.最大公约数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/874/">https://www.acwing.com/problem/content/874/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, a, b;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> b == <span class="number">0</span> ? a : <span class="built_in">gcd</span>(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">gcd</span>(a, b));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-欧拉函数"><a href="#8-欧拉函数" class="headerlink" title="8.欧拉函数"></a>8.欧拉函数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/875/">https://www.acwing.com/problem/content/875/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">while</span>(n--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a);</span><br><span class="line">        <span class="type">int</span> res = a;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span>;i &lt;= a/i; ++i)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a % i == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                res = res / i * (i - <span class="number">1</span>);</span><br><span class="line">                <span class="keyword">while</span>(a % i == <span class="number">0</span>) a /= i;</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(a &gt; <span class="number">1</span>) res = res / a * (a - <span class="number">1</span>);</span><br><span class="line">        cout&lt;&lt;res&lt;&lt;endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-筛法求欧拉函数"><a href="#9-筛法求欧拉函数" class="headerlink" title="9.筛法求欧拉函数"></a>9.筛法求欧拉函数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/876/">https://www.acwing.com/problem/content/876/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1000010</span>;</span><br><span class="line"><span class="type">int</span> primes[N], cnt;</span><br><span class="line"><span class="type">int</span> phi[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_eulers</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    phi[<span class="number">1</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (!st[i])</span><br><span class="line">        &#123;</span><br><span class="line">            primes[cnt++] = i;</span><br><span class="line">            phi[i] = i - <span class="number">1</span>; </span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] &lt;= n / i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)</span><br><span class="line">            &#123;</span><br><span class="line">                phi[primes[j] * i] = phi[i] * primes[j]; </span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">            phi[primes[j] * i] = phi[i] * (primes[j] - <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="built_in">get_eulers</span>(n);</span><br><span class="line">    LL res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) res += phi[i];</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-快速幂"><a href="#10-快速幂" class="headerlink" title="10.快速幂"></a>10.快速幂</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/877/">https://www.acwing.com/problem/content/877/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = (LL)res * a % p;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">a = (LL)a * a % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, k, p;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;k, &amp;p);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">qmi</span>(a, k, p));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-快速幂求逆元"><a href="#11-快速幂求逆元" class="headerlink" title="11.快速幂求逆元"></a>11.快速幂求逆元</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/878/">https://www.acwing.com/problem/content/878/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function">LL <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    LL res = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">while</span> (b) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span> (b &amp; <span class="number">1</span>) res = res * a % p;</span><br><span class="line">        a = (LL)a * a % p;</span><br><span class="line">        b &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n; cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">while</span> (n--) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a, p;</span><br><span class="line">        cin &gt;&gt; a &gt;&gt; p;</span><br><span class="line">        <span class="keyword">if</span> (a % p == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line">        <span class="keyword">else</span> cout &lt;&lt; <span class="built_in">qmi</span>(a, p - <span class="number">2</span>, p) &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-扩展欧几里得算法"><a href="#12-扩展欧几里得算法" class="headerlink" title="12.扩展欧几里得算法"></a>12.扩展欧几里得算法</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/879/">https://www.acwing.com/problem/content/879/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span>&amp; x, <span class="type">int</span>&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">y -= a / b * x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, x, y;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">exgcd</span>(a, b, x, y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d %d\n&quot;</span>, x, y);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13-线性同余方程"><a href="#13-线性同余方程" class="headerlink" title="13.线性同余方程"></a>13.线性同余方程</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/880/">https://www.acwing.com/problem/content/880/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">exgcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span>&amp; x, <span class="type">int</span>&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (!b)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">y -= a / b * x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, m;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;a, &amp;b, &amp;m);</span><br><span class="line"><span class="type">int</span> x, y;</span><br><span class="line"><span class="type">int</span> d = <span class="built_in">exgcd</span>(a, m, x, y);</span><br><span class="line"><span class="keyword">if</span> (b % d) <span class="built_in">puts</span>(<span class="string">&quot;impossible&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (LL)x * (b / d) % m);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14-表达整数的奇怪方式"><a href="#14-表达整数的奇怪方式" class="headerlink" title="14.表达整数的奇怪方式"></a>14.表达整数的奇怪方式</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/206/">https://www.acwing.com/problem/content/206/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">LL <span class="title">exgcd</span><span class="params">(LL a, LL b, LL&amp; x, LL&amp; y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">x = <span class="number">1</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> a;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">LL d = <span class="built_in">exgcd</span>(b, a % b, y, x);</span><br><span class="line">y -= a / b * x;</span><br><span class="line"><span class="keyword">return</span> d;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function">LL <span class="keyword">inline</span> <span class="title">mod</span><span class="params">(LL a, LL b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">return</span> ((a % b) + b) % b;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">LL a1, m1;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a1, &amp;m1);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">LL a2, m2, k1, k2;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lld%lld&quot;</span>, &amp;a2, &amp;m2);</span><br><span class="line">LL d = <span class="built_in">exgcd</span>(a1, -a2, k1, k2);</span><br><span class="line"><span class="keyword">if</span> ((m2 - m1) % d)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;-1&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">k1 = <span class="built_in">mod</span>(k1 * (m2 - m1) / d, <span class="built_in">abs</span>(a2 / d));</span><br><span class="line">m1 = k1 * a1 + m1;</span><br><span class="line">a1 = <span class="built_in">abs</span>(a1 / d * a2);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, m1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-高斯消元解线性方程组"><a href="#15-高斯消元解线性方程组" class="headerlink" title="15.高斯消元解线性方程组"></a>15.高斯消元解线性方程组</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/885/">https://www.acwing.com/problem/content/885/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cmath&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">const</span> <span class="type">double</span> eps = <span class="number">1e-8</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">double</span> a[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gauss</span><span class="params">()</span>  <span class="comment">// 高斯消元，答案存于a[i][n]中，0 &lt;= i &lt; n</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c, r;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="number">0</span>, r = <span class="number">0</span>; c &lt; n; c++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> t = r;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i++) <span class="comment">//找绝对值最大的行</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][c]) &gt; <span class="built_in">fabs</span>(a[t][c]))</span><br><span class="line">                t = i;</span><br><span class="line">        <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[t][c]) &lt; eps) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = c; i &lt;= n; i++) <span class="built_in">swap</span>(a[t][i], a[r][i]);<span class="comment">//将绝对值最大的行换到最顶端</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = n; i &gt;= c; i--) a[r][i] /= a[r][c];<span class="comment">//将当前行的首位变成1</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt; n; i++) <span class="comment">//用当前行将下面所有的列消成0</span></span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][c]) &gt; eps)</span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = n; j &gt;= c; j--)</span><br><span class="line">                    a[i][j] -= a[r][j] * a[i][c];</span><br><span class="line">        r++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][n]) &gt; eps)</span><br><span class="line">                <span class="keyword">return</span> <span class="number">2</span>; <span class="comment">//无解</span></span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//有无穷多组解</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            a[i][n] -= a[i][j] * a[j][n];</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//有唯一解</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; n + <span class="number">1</span>; j++)</span><br><span class="line">            <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a[i][j]);</span><br><span class="line">    <span class="type">int</span> t = <span class="built_in">gauss</span>();</span><br><span class="line">    <span class="keyword">if</span> (t == <span class="number">2</span>) <span class="built_in">puts</span>(<span class="string">&quot;No solution&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;Infinite group solutions&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span> (<span class="built_in">fabs</span>(a[i][n]) &lt; eps) a[i][n] = <span class="number">0</span>;  <span class="comment">//去掉输出 -0.00 的情况</span></span><br><span class="line">            <span class="built_in">printf</span>(<span class="string">&quot;%.2lf\n&quot;</span>, a[i][n]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="16-高斯消元解异或线性方程组"><a href="#16-高斯消元解异或线性方程组" class="headerlink" title="16.高斯消元解异或线性方程组"></a>16.高斯消元解异或线性方程组</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/886/">https://www.acwing.com/problem/content/886/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">gauss</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> c, r;</span><br><span class="line">    <span class="keyword">for</span> (c = <span class="number">0</span>, r = <span class="number">0</span>; c &lt; n; c++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="comment">// 找主元</span></span><br><span class="line">        <span class="type">int</span> t = <span class="number">-1</span>;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (a[i][c])</span><br><span class="line">            &#123;</span><br><span class="line">                t = i;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            &#125;</span><br><span class="line">        <span class="keyword">if</span> (t == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line">        <span class="comment">// 交换主元行</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = c; j &lt;= n; j++) <span class="built_in">swap</span>(a[r][j], a[t][j]);</span><br><span class="line">        <span class="comment">// 左下角消</span></span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r + <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">            <span class="keyword">if</span> (a[i][c])<span class="comment">//漏了</span></span><br><span class="line">                <span class="keyword">for</span> (<span class="type">int</span> j = n; j &gt;= c; j--)<span class="comment">//漏了</span></span><br><span class="line">                    a[i][j] ^= a[r][j];</span><br><span class="line">        r++;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 判断</span></span><br><span class="line">    <span class="keyword">if</span> (r &lt; n)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = r; i &lt; n; i++)<span class="comment">//i=r</span></span><br><span class="line">            <span class="keyword">if</span> (a[i][n]) <span class="keyword">return</span> <span class="number">2</span>;   </span><br><span class="line">        <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="comment">// 消右上角</span></span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = n - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt; n; j++)</span><br><span class="line">            <span class="comment">//如果是0 就不用下面的a[j][j] 来^a[i][j]了</span></span><br><span class="line">            <span class="comment">//如果不是0 才需要用第j行第j列a[j][j]来^第i行第j列a[i][j] </span></span><br><span class="line">            <span class="comment">//进而进行整行row[i]^row[j] 间接导致 a[i][n]^a[j][n]</span></span><br><span class="line">            <span class="keyword">if</span> (a[i][j]) a[i][n] ^= a[j][n];        </span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= n; j++)</span><br><span class="line">            cin &gt;&gt; a[i][j];</span><br><span class="line">    <span class="type">int</span> t = <span class="built_in">gauss</span>();</span><br><span class="line">    <span class="keyword">if</span> (t == <span class="number">0</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) cout &lt;&lt; a[i][n] &lt;&lt; endl;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">else</span> <span class="keyword">if</span> (t == <span class="number">1</span>) <span class="built_in">puts</span>(<span class="string">&quot;Multiple sets of solutions&quot;</span>);</span><br><span class="line">    <span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No solution&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-求组合数-I"><a href="#17-求组合数-I" class="headerlink" title="17.求组合数 I"></a>17.求组合数 I</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/887/">https://www.acwing.com/problem/content/887/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>, N = <span class="number">2010</span>;</span><br><span class="line"><span class="type">int</span> c[N][N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function">LL <span class="title">C</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span> <span class="comment">//通过递归求解组合C(a,b)的值</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b == <span class="number">0</span> || a == b)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> <span class="built_in">C</span>(a - <span class="number">1</span>, b) + <span class="built_in">C</span>(a - <span class="number">1</span>, b - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!j) c[i][j] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> c[i][j] = (c[i - <span class="number">1</span>][j] + c[i - <span class="number">1</span>][j - <span class="number">1</span>]) % mod;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, c[a][b]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="18-求组合数-II"><a href="#18-求组合数-II" class="headerlink" title="18.求组合数 II"></a>18.求组合数 II</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/888/">https://www.acwing.com/problem/content/888/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>, mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> fact[N], infact[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = (LL)res * a % p;</span><br><span class="line">a = (LL)a * a % p;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">fact[<span class="number">0</span>] = infact[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line">fact[i] = (LL)fact[i - <span class="number">1</span>] * i % mod;</span><br><span class="line">infact[i] = (LL)infact[i - <span class="number">1</span>] * <span class="built_in">qmi</span>(i, mod - <span class="number">2</span>, mod) % mod;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, (LL)fact[a] * infact[b] % mod * infact[a - b] % mod);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="19-求组合数-III"><a href="#19-求组合数-III" class="headerlink" title="19.求组合数 III"></a>19.求组合数 III</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/889/">https://www.acwing.com/problem/content/889/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>)res = (LL)res * a % p;</span><br><span class="line">a = (LL)a * a % p;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">C</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b, <span class="type">int</span> p)</span><span class="comment">//自变量类型int</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (b &gt; a)<span class="keyword">return</span> <span class="number">0</span>;<span class="comment">//漏了边界条件</span></span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="comment">// a!/(b!(a-b)!) = (a-b+1)*...*a / b! 分子有b项</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>, j = a; i &lt;= b; i++, j--)<span class="comment">//i&lt;=b而不是&lt;</span></span><br><span class="line">&#123;</span><br><span class="line">res = (LL)res * j % p;</span><br><span class="line">res = (LL)res * <span class="built_in">qmi</span>(i, p - <span class="number">2</span>, p) % p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对公式敲</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">lucas</span><span class="params">(LL a, LL b, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (a &lt; p &amp;&amp; b &lt; p)<span class="keyword">return</span> <span class="built_in">C</span>(a, b, p);<span class="comment">//lucas递归终点是C_&#123;bk&#125;^&#123;ak&#125;</span></span><br><span class="line"><span class="keyword">return</span> (LL)<span class="built_in">C</span>(a % p, b % p, p) * <span class="built_in">lucas</span>(a / p, b / p, p) % p;</span><br><span class="line">    <span class="comment">//a%p后肯定是&lt;p的,所以可以用C(),但a/p后不一定&lt;p 所以用lucas继续递归</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line">LL a, b;</span><br><span class="line"><span class="type">int</span> p;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; p;</span><br><span class="line">cout &lt;&lt; <span class="built_in">lucas</span>(a, b, p) &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="20-求组合数-IV"><a href="#20-求组合数-IV" class="headerlink" title="20.求组合数 IV"></a>20.求组合数 IV</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/890/">https://www.acwing.com/problem/content/890/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">5010</span>;</span><br><span class="line"><span class="type">int</span> primes[N], cnt;</span><br><span class="line"><span class="type">int</span> sum[N];</span><br><span class="line"><span class="type">bool</span> st[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">get_primes</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (!st[i])primes[cnt++] = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; primes[j] * i &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">st[primes[j] * i] = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">if</span> (i % primes[j] == <span class="number">0</span>)<span class="keyword">break</span>;<span class="comment">//==0每次漏</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 对p的各个&lt;=a的次数算整除下取整倍数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">get</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n)</span><br><span class="line">&#123;</span><br><span class="line">res += n / p;</span><br><span class="line">n /= p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//高精度乘</span></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt; a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; c;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; a.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">t += a[i] * b;</span><br><span class="line">c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (t)</span><br><span class="line">&#123;</span><br><span class="line">c.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// while(C.size()&gt;1 &amp;&amp; C.back()==0) C.pop_back();//考虑b==0时才有pop多余的0 b!=0不需要这行</span></span><br><span class="line"><span class="keyword">return</span> c;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="built_in">get_primes</span>(a);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> p = primes[i];</span><br><span class="line">sum[i] = <span class="built_in">get</span>(a, p) - <span class="built_in">get</span>(a - b, p) - <span class="built_in">get</span>(b, p);<span class="comment">//是a-b不是b-a</span></span><br><span class="line">&#125;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; res;</span><br><span class="line">res.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; sum[i]; j++)<span class="comment">//primes[i]的次数</span></span><br><span class="line">res = <span class="built_in">mul</span>(res, primes[i]);</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = res.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, res[i]);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line"></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="21-满足条件的01序列"><a href="#21-满足条件的01序列" class="headerlink" title="21.满足条件的01序列"></a>21.满足条件的01序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/891/">https://www.acwing.com/problem/content/891/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">qmi</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> k, <span class="type">int</span> p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (k &amp; <span class="number">1</span>) res = (LL)res * a % p;</span><br><span class="line">a = (LL)a * a % p;</span><br><span class="line">k &gt;&gt;= <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> res;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> a = <span class="number">2</span> * n, b = n;</span><br><span class="line"><span class="type">int</span> res = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a; i &gt; a - b; i--) res = (LL)res * i % mod;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= b; i++) res = (LL)res * <span class="built_in">qmi</span>(i, mod - <span class="number">2</span>, mod) % mod;</span><br><span class="line">res = (LL)res * <span class="built_in">qmi</span>(n + <span class="number">1</span>, mod - <span class="number">2</span>, mod) % mod;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="22-能被整除的数"><a href="#22-能被整除的数" class="headerlink" title="22.能被整除的数"></a>22.能被整除的数</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/892/">https://www.acwing.com/problem/content/892/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> LL;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>;</span><br><span class="line"><span class="type">int</span> p[N], n, m;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++) cin &gt;&gt; p[i];</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//枚举从1 到 1111...(m个1)的每一个集合状态, (至少选中一个集合)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; <span class="number">1</span> &lt;&lt; m; i++) </span><br><span class="line">    &#123;</span><br><span class="line"><span class="type">int</span> t = <span class="number">1</span>;<span class="comment">//选中集合对应质数的乘积</span></span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>;<span class="comment">//选中的集合数量</span></span><br><span class="line"><span class="comment">//枚举当前状态的每一位</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; m; j++) </span><br><span class="line">        &#123;</span><br><span class="line"><span class="comment">//选中一个集合</span></span><br><span class="line"><span class="keyword">if</span> (i &gt;&gt; j &amp; <span class="number">1</span>) </span><br><span class="line">            &#123;</span><br><span class="line"><span class="comment">//乘积大于n, 则n/t = 0, 跳出这轮循环</span></span><br><span class="line"><span class="keyword">if</span> ((LL)t * p[j] &gt; n) </span><br><span class="line">                &#123;</span><br><span class="line">t = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">s++;                  <span class="comment">//有一个1，集合数量+1</span></span><br><span class="line">t *= p[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t == <span class="number">-1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">if</span> (s &amp; <span class="number">1</span>) res += n / t;              <span class="comment">//选中奇数个集合, 则系数应该是1, n/t为当前这种状态的集合数量</span></span><br><span class="line"><span class="keyword">else</span> res -= n / t;                      <span class="comment">//反之则为 -1</span></span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; res &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="23-Nim游戏"><a href="#23-Nim游戏" class="headerlink" title="23.Nim游戏"></a>23.Nim游戏</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/893/">https://www.acwing.com/problem/content/893/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">/*</span></span><br><span class="line"><span class="comment">先手必胜状态：先手操作完，可以走到某一个必败状态</span></span><br><span class="line"><span class="comment">先手必败状态：先手操作完，走不到任何一个必败状态</span></span><br><span class="line"><span class="comment">先手必败状态：a1 ^ a2 ^ a3 ^ ... ^an = 0</span></span><br><span class="line"><span class="comment">先手必胜状态：a1 ^ a2 ^ a3 ^ ... ^an ≠ 0</span></span><br><span class="line"><span class="comment">*/</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">res ^= x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res == <span class="number">0</span>) <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="24-台阶-Nim游戏"><a href="#24-台阶-Nim游戏" class="headerlink" title="24.台阶-Nim游戏"></a>24.台阶-Nim游戏</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/894/">https://www.acwing.com/problem/content/894/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span>) res ^= x;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="25-集合-Nim游戏"><a href="#25-集合-Nim游戏" class="headerlink" title="25.集合-Nim游戏"></a>25.集合-Nim游戏</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/895/">https://www.acwing.com/problem/content/895/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>, M = <span class="number">10010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> f[M], s[N];<span class="comment">//s存储的是可供选择的集合,f存储的是所有可能出现过的情况的sg值</span></span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sg</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (f[x] != <span class="number">-1</span>) <span class="keyword">return</span> f[x];</span><br><span class="line"><span class="comment">//因为取石子数目的集合是已经确定了的,所以每个数的sg值也都是确定的,如果存储过了,直接返回即可</span></span><br><span class="line">set&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="comment">//set代表的是有序集合(注:因为在函数内部定义,所以下一次递归中的S不与本次相同)</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sum = s[i];</span><br><span class="line"><span class="keyword">if</span> (x &gt;= sum) S.<span class="built_in">insert</span>(<span class="built_in">sg</span>(x - sum));</span><br><span class="line"><span class="comment">//先延伸到终点的sg值后,再从后往前排查出所有数的sg值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>;; i++)</span><br><span class="line"><span class="comment">//循环完之后可以进行选出最小的没有出现的自然数的操作</span></span><br><span class="line"><span class="keyword">if</span> (!S.<span class="built_in">count</span>(i))</span><br><span class="line"><span class="keyword">return</span> f[x] = i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">memset</span>(f, <span class="number">-1</span>, <span class="built_in">sizeof</span>(f));<span class="comment">//初始化f均为-1,方便在sg函数中查看x是否被记录过</span></span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">res ^= <span class="built_in">sg</span>(x);</span><br><span class="line"><span class="comment">//观察异或值的变化,基本原理与Nim游戏相同</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res) <span class="built_in">printf</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="26-拆分-Nim游戏"><a href="#26-拆分-Nim游戏" class="headerlink" title="26.拆分-Nim游戏"></a>26.拆分-Nim游戏</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/896/">https://www.acwing.com/problem/content/896/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;unordered_set&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line">unordered_set&lt;<span class="type">int</span>&gt; S;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">sg</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (f[x] != <span class="number">-1</span>) <span class="keyword">return</span> f[x];</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; x; i++)</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= i; j++)<span class="comment">//规定j不大于i，避免重复</span></span><br><span class="line">S.<span class="built_in">insert</span>(<span class="built_in">sg</span>(i) ^ <span class="built_in">sg</span>(j));<span class="comment">//相当于一个局面拆分成了两个局面，由SG函数理论，多个独立局面的SG值，</span></span><br><span class="line">    <span class="comment">//等于这些局面SG值的异或和</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; ; i++)</span><br><span class="line"><span class="keyword">if</span> (!S.<span class="built_in">count</span>(i))</span><br><span class="line"><span class="keyword">return</span> f[x] = i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">memset</span>(f, <span class="number">-1</span>, <span class="keyword">sizeof</span> f);</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (n--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x;</span><br><span class="line">cin &gt;&gt; x;</span><br><span class="line">res ^= <span class="built_in">sg</span>(x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (res) <span class="built_in">puts</span>(<span class="string">&quot;Yes&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">puts</span>(<span class="string">&quot;No&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h3 id="第五讲-动态规划"><a href="#第五讲-动态规划" class="headerlink" title="第五讲 动态规划"></a>第五讲 动态规划</h3><h4 id="1-01背包问题"><a href="#1-01背包问题" class="headerlink" title="1.01背包问题"></a>1.01背包问题</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/2/">https://www.acwing.com/problem/content/2/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n, V;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; V;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= V; j++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j] = f[i - <span class="number">1</span>][j];</span><br><span class="line"><span class="keyword">if</span> (v[i] &lt;= j) f[i][j] = <span class="built_in">max</span>(f[i][j], f[i - <span class="number">1</span>][j - v[i]] + w[i]);</span><br><span class="line"><span class="comment">//如果v[i] &gt; j，就不用选了</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[n][V] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>优化成一维：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n, V;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; V;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = V; j &gt;= v[i]; j--)</span><br><span class="line">&#123;</span><br><span class="line">f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[V] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-完全背包问题"><a href="#2-完全背包问题" class="headerlink" title="2.完全背包问题"></a>2.完全背包问题</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/3/">https://www.acwing.com/problem/content/3/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = v[i]; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-多重背包问题-I"><a href="#3-多重背包问题-I" class="headerlink" title="3.多重背包问题 I"></a>3.多重背包问题 I</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/4/">https://www.acwing.com/problem/content/4/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//多重背包问题暴力写法</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> v[N], w[N], s[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++) cin &gt;&gt; v[i] &gt;&gt; w[i] &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt;= s[i] &amp;&amp; k * v[i] &lt;= j; k++)</span><br><span class="line">&#123;</span><br><span class="line">f[i][j] = <span class="built_in">max</span>(f[i][j], f[i - <span class="number">1</span>][j - v[i] * k] + w[i] * k);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[n][m] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-多重背包问题-II"><a href="#4-多重背包问题-II" class="headerlink" title="4.多重背包问题 II"></a>4.多重背包问题 II</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/5/">https://www.acwing.com/problem/content/5/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">25000</span>;</span><br><span class="line"><span class="type">int</span> n, m;</span><br><span class="line"><span class="type">int</span> v[N], w[N];</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a, b, s;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b &gt;&gt; s;</span><br><span class="line"><span class="type">int</span> k = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (k &lt;= s)</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">v[cnt] = a * k;</span><br><span class="line">w[cnt] = b * k;</span><br><span class="line">s -= k;</span><br><span class="line">k *= <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (s &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cnt++;</span><br><span class="line">v[cnt] = a * s;</span><br><span class="line">w[cnt] = b * s;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">n = cnt;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = m; j &gt;= v[i]; j--)</span><br><span class="line">&#123;</span><br><span class="line">f[j] = <span class="built_in">max</span>(f[j], f[j - v[i]] + w[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-分组背包问题"><a href="#5-分组背包问题" class="headerlink" title="5.分组背包问题"></a>5.分组背包问题</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/9/">https://www.acwing.com/problem/content/9/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">110</span>;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="type">int</span> v[N][N], w[N][N], s[N];</span><br><span class="line"><span class="type">int</span> n, m, k;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span> </span>&#123;</span><br><span class="line">cin &gt;&gt; n &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; s[i];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; s[i]; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; v[i][j] &gt;&gt; w[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = m; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> k = <span class="number">0</span>; k &lt; s[i]; k++)</span><br><span class="line">&#123;    <span class="comment">//for(int k=s[i];k&gt;=1;k--)也可以</span></span><br><span class="line"><span class="keyword">if</span> (j &gt;= v[i][k])</span><br><span class="line">                    f[j] = <span class="built_in">max</span>(f[j], f[j - v[i][k]] + w[i][k]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; f[m] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-数字三角形"><a href="#6-数字三角形" class="headerlink" title="6.数字三角形"></a>6.数字三角形</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/900/">https://www.acwing.com/problem/content/900/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">510</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> f[N][N], w[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            cin&gt;&gt;w[i][j];</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) f[n][i] = w[n][i];</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = n - <span class="number">1</span>;i ;i--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i+<span class="number">1</span>][j] + w[i][j], f[i+<span class="number">1</span>][j+<span class="number">1</span>] + w[i][j]);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[<span class="number">1</span>][<span class="number">1</span>] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-最长上升子序列"><a href="#7-最长上升子序列" class="headerlink" title="7.最长上升子序列"></a>7.最长上升子序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/897/">https://www.acwing.com/problem/content/897/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> a[N], dp[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        dp[i] = <span class="number">1</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt; i; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(a[j] &lt; a[i])</span><br><span class="line">            &#123;</span><br><span class="line">                dp[i] = <span class="built_in">max</span>(dp[i], dp[j] + <span class="number">1</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++) res = <span class="built_in">max</span>(res, dp[i]);</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-最长上升子序列-II"><a href="#8-最长上升子序列-II" class="headerlink" title="8.最长上升子序列 II"></a>8.最长上升子序列 II</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/898/">https://www.acwing.com/problem/content/898/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> a[N],q[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>,&amp;a[i]);</span><br><span class="line">    <span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">    q[<span class="number">0</span>] = <span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l = <span class="number">0</span>,r = len;</span><br><span class="line">        <span class="keyword">while</span>(l &lt; r)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> mid = l + r + <span class="number">1</span>&gt;&gt; <span class="number">1</span>;</span><br><span class="line">            <span class="keyword">if</span>(q[mid] &lt; a[i]) l = mid;</span><br><span class="line">            <span class="keyword">else</span> r = mid - <span class="number">1</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        len = <span class="built_in">max</span>(len, r + <span class="number">1</span>);</span><br><span class="line">        q[r + <span class="number">1</span>] = a[i];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,len);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="9-最长公共子序列"><a href="#9-最长公共子序列" class="headerlink" title="9.最长公共子序列"></a>9.最长公共子序列</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/899/">https://www.acwing.com/problem/content/899/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">char</span> a[N],b[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;m&gt;&gt;a+<span class="number">1</span>&gt;&gt;b+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">max</span>(f[i - <span class="number">1</span>][j],f[i][j - <span class="number">1</span>]);</span><br><span class="line">            <span class="keyword">if</span>(a[i] == b[j]) f[i][j] = <span class="built_in">max</span>(f[i][j],f[i<span class="number">-1</span>][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[n][m] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="10-最短编辑距离"><a href="#10-最短编辑距离" class="headerlink" title="10.最短编辑距离"></a>10.最短编辑距离</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/904/">https://www.acwing.com/problem/content/904/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">char</span> a[N],b[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n&gt;&gt;a+<span class="number">1</span>&gt;&gt;m&gt;&gt;b+<span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= m; i++) f[<span class="number">0</span>][i] = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= n; i++) f[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= m; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">min</span>(f[i<span class="number">-1</span>][j] + <span class="number">1</span>, f[i][j<span class="number">-1</span>] + <span class="number">1</span>);</span><br><span class="line">            <span class="keyword">if</span>(a[i] == b[j]) f[i][j] = <span class="built_in">min</span>(f[i][j],f[i<span class="number">-1</span>][j<span class="number">-1</span>]);</span><br><span class="line">            <span class="keyword">else</span> f[i][j] = <span class="built_in">min</span>(f[i][j],f[i<span class="number">-1</span>][j<span class="number">-1</span>] + <span class="number">1</span>);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[n][m]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="11-编辑距离"><a href="#11-编辑距离" class="headerlink" title="11.编辑距离"></a>11.编辑距离</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/901/">https://www.acwing.com/problem/content/901/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">15</span>,M = <span class="number">1010</span>;</span><br><span class="line"><span class="type">int</span> n,m;</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="type">char</span> str[M][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">edit_distance</span><span class="params">(<span class="type">char</span> a[],<span class="type">char</span> b[])</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> la = <span class="built_in">strlen</span>(a+<span class="number">1</span>),lb = <span class="built_in">strlen</span>(b+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= lb; i++) f[<span class="number">0</span>][i] = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt;= la; i++) f[i][<span class="number">0</span>] = i;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= la; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span>;j &lt;= lb; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[i][j] = <span class="built_in">min</span>(f[i<span class="number">-1</span>][j]+<span class="number">1</span>, f[i][j<span class="number">-1</span>]+<span class="number">1</span>);</span><br><span class="line">            f[i][j] = <span class="built_in">min</span>(f[i][j], f[i<span class="number">-1</span>][j<span class="number">-1</span>]+(a[i] != b[j]));</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> f[la][lb];</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;m);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, str[i]+<span class="number">1</span>);</span><br><span class="line">    <span class="keyword">while</span>(m--)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">char</span> s[N];</span><br><span class="line">        <span class="type">int</span> limit;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%s%d&quot;</span>, s+<span class="number">1</span>, &amp;limit);</span><br><span class="line">        <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++) </span><br><span class="line">        &#123;</span><br><span class="line">            <span class="keyword">if</span>(<span class="built_in">edit_distance</span>(str[i],s) &lt;= limit) res++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>,res);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="12-石子合并"><a href="#12-石子合并" class="headerlink" title="12.石子合并"></a>12.石子合并</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/284/">https://www.acwing.com/problem/content/284/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">310</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> s[N];</span><br><span class="line"><span class="type">int</span> f[N][N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin &gt;&gt; n;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        cin &gt;&gt; s[i];</span><br><span class="line">        s[i] += s[i - <span class="number">1</span>];</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> len = <span class="number">2</span>; len &lt;= n; len++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i + len - <span class="number">1</span> &lt;= n; i++)</span><br><span class="line">        &#123;</span><br><span class="line">            <span class="type">int</span> j = i + len - <span class="number">1</span>;</span><br><span class="line">            f[i][j] = <span class="number">1e8</span>;</span><br><span class="line">            <span class="keyword">for</span>(<span class="type">int</span> k = i; k &lt; j; k++)</span><br><span class="line">            &#123;</span><br><span class="line">                f[i][j] = <span class="built_in">min</span>(f[i][j], f[i][k] + f[k+<span class="number">1</span>][j] + s[j] - s[i - <span class="number">1</span>]);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout &lt;&lt; f[<span class="number">1</span>][n] &lt;&lt; endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="13-整数划分"><a href="#13-整数划分" class="headerlink" title="13.整数划分"></a>13.整数划分</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/902/">https://www.acwing.com/problem/content/902/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1010</span>,mod = <span class="number">1e9</span> + <span class="number">7</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> f[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    cin&gt;&gt;n;</span><br><span class="line">    f[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>;i &lt;= n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">for</span>(<span class="type">int</span> j = i;j &lt;= n; j++)</span><br><span class="line">        &#123;</span><br><span class="line">            f[j] = (f[j] + f[j - i]) % mod;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    cout&lt;&lt;f[n]&lt;&lt;endl;</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="14-计数问题"><a href="#14-计数问题" class="headerlink" title="14.计数问题"></a>14.计数问题</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/340/">https://www.acwing.com/problem/content/340/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> base[<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> f[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"><span class="type">int</span> g[<span class="number">10</span>][<span class="number">10</span>];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">base[<span class="number">0</span>] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">9</span> ; i++) base[i] = base[i<span class="number">-1</span>]*<span class="number">10</span>;</span><br><span class="line"><span class="comment">//从00……0 - 99……9 的各位数字有多少个，其中i为数字个数（包含前导零）</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= <span class="number">9</span> ; i++) f[<span class="number">1</span>][i] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= <span class="number">9</span> ; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span> ; j &lt;= <span class="number">9</span> ; j++)</span><br><span class="line">f[i][j] = f[i<span class="number">-1</span>][j]*<span class="number">10</span> + base[i<span class="number">-1</span>];</span><br><span class="line"><span class="comment">//从1 - 99……9 的各位数字有多少个，其中i为数字个数（不包含前导零）</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span> ; i &lt;= <span class="number">9</span> ; i++) g[<span class="number">1</span>][i] = <span class="number">1</span>;<span class="comment">//循环从1开始</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">2</span> ; i &lt;= <span class="number">9</span> ; i++)</span><br><span class="line">&#123;</span><br><span class="line">g[i][<span class="number">0</span>] = g[i<span class="number">-1</span>][<span class="number">0</span>] + f[i<span class="number">-1</span>][<span class="number">0</span>]*<span class="number">9</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">1</span> ; j &lt;= <span class="number">9</span> ; j++)</span><br><span class="line">g[i][j] = g[i<span class="number">-1</span>][j] + f[i<span class="number">-1</span>][j]*<span class="number">9</span> + base[i<span class="number">-1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">dp</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ans</span><span class="params">(<span class="number">10</span>,<span class="number">0</span>)</span></span>; <span class="comment">//记录答案</span></span><br><span class="line"><span class="keyword">if</span>(n&lt;=<span class="number">0</span>) <span class="keyword">return</span> ans; <span class="comment">//边界条件</span></span><br><span class="line">vector&lt;<span class="type">int</span>&gt; nums;</span><br><span class="line"><span class="keyword">while</span>(n) nums.<span class="built_in">push_back</span>(n%<span class="number">10</span>), n/=<span class="number">10</span>;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">last</span><span class="params">(<span class="number">10</span>,<span class="number">0</span>)</span></span>; <span class="comment">//记录前缀中各个数字个数</span></span><br><span class="line"><span class="comment">//统计1 - 99……9(n-1个9)里面各个数字有多少个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= <span class="number">9</span> ; i++) ans[i] = g[nums.<span class="built_in">size</span>()<span class="number">-1</span>][i];</span><br><span class="line"><span class="comment">//统计大于10……0(n-1个0) 的树里各个数字有多少个</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = nums.<span class="built_in">size</span>()<span class="number">-1</span> ; i &gt;=<span class="number">0</span> ; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//循环变量i可以表示剩下的数字有多少个</span></span><br><span class="line"><span class="type">int</span> x = nums[i];</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = i==nums.<span class="built_in">size</span>()<span class="number">-1</span> ; j &lt; x ; j++)   <span class="comment">//第一次循环不能有0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//前缀部分</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt;= <span class="number">9</span> ; k++)</span><br><span class="line">ans[k] += last[k] * base[i];</span><br><span class="line"><span class="comment">//当前位置部分</span></span><br><span class="line">ans[j] += base[i];</span><br><span class="line"><span class="comment">//后缀部分</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt;= <span class="number">9</span> ; k++)</span><br><span class="line">ans[k] += f[i][k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//更新前缀计数器</span></span><br><span class="line">last[x] ++;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计叶子节点（这个数本身）</span></span><br><span class="line"><span class="keyword">if</span>(!i) <span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span> ; k &lt;= <span class="number">9</span> ; k++) ans[k] += last[k];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">ask</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> x = <span class="built_in">dp</span>(b);</span><br><span class="line"><span class="keyword">auto</span> y = <span class="built_in">dp</span>(a<span class="number">-1</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; ans;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= <span class="number">9</span> ; i++) ans.<span class="built_in">push_back</span>(x[i]-y[i]);</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">print</span><span class="params">(vector&lt;<span class="type">int</span>&gt; ans)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> x:ans) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>,x);</span><br><span class="line"><span class="built_in">puts</span>(<span class="string">&quot;&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">check</span><span class="params">(<span class="type">int</span> x)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">auto</span> t = <span class="built_in">ask</span>(x,x);</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">cnt</span><span class="params">(<span class="number">10</span>,<span class="number">0</span>)</span></span>;</span><br><span class="line"><span class="keyword">while</span>(x) cnt[x%<span class="number">10</span>]++,x/=<span class="number">10</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span> ; i &lt;= <span class="number">9</span> ; i++)</span><br><span class="line"><span class="keyword">if</span>(cnt[i] != t[i])</span><br><span class="line"><span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">init</span>();</span><br><span class="line"><span class="comment">//这里是一个DEBUG函数</span></span><br><span class="line"><span class="comment">// for(int i = 1 ; i &lt;= 1000000 ; i*=10) &#123;</span></span><br><span class="line"><span class="comment">//     if(!check(i))</span></span><br><span class="line"><span class="comment">//         printf(&quot;ERROR:%d\n&quot;,i);</span></span><br><span class="line"><span class="comment">// &#125;</span></span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="keyword">while</span>(cin &gt;&gt; a &gt;&gt; b, a||b)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(a&gt;b) <span class="built_in">swap</span>(a,b);</span><br><span class="line"><span class="keyword">auto</span> t = <span class="built_in">ask</span>(a,b);</span><br><span class="line"><span class="built_in">print</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="15-蒙德里安的梦想"><a href="#15-蒙德里安的梦想" class="headerlink" title="15.蒙德里安的梦想"></a>15.蒙德里安的梦想</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/293/">https://www.acwing.com/problem/content/293/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N=<span class="number">12</span>, M = <span class="number">1</span> &lt;&lt; N;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> f[N][M] ;<span class="comment">// 第一维表示列， 第二维表示所有可能的状态</span></span><br><span class="line"><span class="type">bool</span> st[M];  <span class="comment">//存储每种状态是否有奇数个连续的0，如果奇数个0是无效状态，如果是偶数个零置为true。</span></span><br><span class="line"><span class="comment">//vector&lt;int &gt; state[M];  //二维数组记录合法的状态</span></span><br><span class="line">vector&lt;vector&lt;<span class="type">int</span>&gt;&gt; <span class="built_in">state</span>(M);  <span class="comment">//两种写法等价:二维数组</span></span><br><span class="line"><span class="type">int</span> m,n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(cin&gt;&gt;n&gt;&gt;m, n||m)  <span class="comment">//读入n和m，并且不是两个0即合法输入就继续读入</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//第一部分：预处理1</span></span><br><span class="line"><span class="comment">//对于每种状态，先预处理每列不能有奇数个连续的0</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>&lt;&lt;n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span> ;<span class="comment">//记录连续的0的个数</span></span><br><span class="line"><span class="type">bool</span> isValid = <span class="literal">true</span>; <span class="comment">//某种状态没有奇数个连续的0则标记为true</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j=<span class="number">0</span>; j&lt;n; j++) <span class="comment">//遍历这一列，从上到下</span></span><br><span class="line">&#123;</span><br><span class="line">                <span class="comment">//i&gt;&gt;j位运算，表示i（i在此处是一种状态）的二进制数的第j位； &amp;1为判断该位是否为1，如果为1进入if</span></span><br><span class="line"><span class="keyword">if</span>( i&gt;&gt;j &amp; <span class="number">1</span>) </span><br><span class="line">&#123;</span><br><span class="line">                    <span class="comment">//这一位为1，看前面连续的0的个数，如果是奇数（cnt &amp;1为真）则该状态不合法</span></span><br><span class="line"><span class="keyword">if</span>(cnt &amp; <span class="number">1</span>)   </span><br><span class="line">&#123;</span><br><span class="line">isValid = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cnt = <span class="number">0</span>;<span class="comment">//既然该位是1，并且前面不是奇数个0（经过上面的if判断），计数器清零。//其实清不清零没有影响</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> cnt++;<span class="comment">//否则的话该位还是0，则统计连续0的计数器++。</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &amp; <span class="number">1</span>)  isValid =<span class="literal">false</span>; <span class="comment">//最下面的那一段判断一下连续的0的个数</span></span><br><span class="line">st[i]  = isValid; <span class="comment">//状态i是否有奇数个连续的0的情况,输入到数组st中</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第二部分：预处理2</span></span><br><span class="line"><span class="comment">// 经过上面每种状态 连续0的判断，已经筛掉一些状态。</span></span><br><span class="line"><span class="comment">//下面来看进一步的判断：看第i-2列伸出来的和第i-1列伸出去的是否冲突</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; <span class="number">1</span>&lt;&lt;n; j++) <span class="comment">//对于第i列的所有状态</span></span><br><span class="line">&#123;</span><br><span class="line">state[j].<span class="built_in">clear</span>(); <span class="comment">//清空上次操作遗留的状态，防止影响本次状态。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; <span class="number">1</span>&lt;&lt;n; k++) <span class="comment">//对于第i-1列所有状态</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>((j &amp; k) == <span class="number">0</span> &amp;&amp; st[ j | k]) <span class="comment">// 第i-2列伸出来的 和第i-1列伸出来的不冲突(不在同一行)</span></span><br><span class="line"><span class="comment">//解释一下st[j | k]</span></span><br><span class="line"><span class="comment">//已经知道st[]数组表示的是这一列没有连续奇数个0的情况，</span></span><br><span class="line"><span class="comment">//我们要考虑是第i-1列（第i-1列是这里的主体）中从第i-2列横插过来的，还要考虑自己这一列（i-1列）横插到第i列的</span></span><br><span class="line"><span class="comment">//比如 第i-2列插过来的是k=10101，第i-1列插出去到第i列的是 j =01000，</span></span><br><span class="line"><span class="comment">//那么合在第i-1列，到底有多少个1呢？</span></span><br><span class="line">                <span class="comment">//自然想到的就是这两个操作共同的结果：两个状态或。 j | k = 01000 | 10101 = 11101</span></span><br><span class="line"><span class="comment">//这个 j|k 就是当前 第i-1列的到底有几个1，即哪几行是横着放格子的</span></span><br><span class="line">state[j].<span class="built_in">push_back</span>(k); <span class="comment">//二维数组state[j]表示第j行，</span></span><br><span class="line"><span class="comment">//j表示 第i列“真正”可行的状态，如果第i-1列的状态k和j不冲突则压入state数组中的第j行。</span></span><br><span class="line"><span class="comment">//“真正”可行是指：既没有前后两列伸进伸出的冲突；又没有连续奇数个0。</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//第三部分：dp开始</span></span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0</span>,<span class="keyword">sizeof</span> f);<span class="comment">//全部初始化为0，因为是连续读入，这里是一个清空操作。类似上面的state[j].clear()</span></span><br><span class="line">f[<span class="number">0</span>][<span class="number">0</span>]=<span class="number">1</span> ;<span class="comment">// 这里需要回忆状态表示的定义，按定义这里是：前第-1列都摆好，且从-1列到第0列伸出来的状态为0的方案数。</span></span><br><span class="line"><span class="comment">//首先，这里没有-1列，最少也是0列。其次，没有伸出来，即没有横着摆的。即这里第0列只有竖着摆这1种状态。</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= m; i++) <span class="comment">//遍历每一列:第i列合法范围是(0~m-1列)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j&lt; <span class="number">1</span>&lt;&lt;n; j++)<span class="comment">//遍历当前列（第i列）所有状态j</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="keyword">auto</span> k : state[j])<span class="comment">//遍历第i-1列的状态k，如果“真正”可行，就转移</span></span><br><span class="line">f[i][j] += f[i<span class="number">-1</span>][k];<span class="comment">//当前列的方案数就等于之前的第i-1列所有状态k的累加。</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//最后答案是什么呢？</span></span><br><span class="line"><span class="comment">//f[m][0]表示 前m-1列都处理完，并且第m-1列没有伸出来的所有方案数。</span></span><br><span class="line"><span class="comment">//即整个棋盘处理完的方案数</span></span><br><span class="line">cout&lt;&lt; f[m][<span class="number">0</span>] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="16-最短Hamilton路径"><a href="#16-最短Hamilton路径" class="headerlink" title="16.最短Hamilton路径"></a>16.最短Hamilton路径</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/93/">https://www.acwing.com/problem/content/93/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstring&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">20</span>,M = <span class="number">1</span>&lt;&lt;N;</span><br><span class="line"><span class="type">int</span> f[M][N],w[N][N];<span class="comment">//w表示的是无权图</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line">cin&gt;&gt;n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++)</span><br><span class="line">cin&gt;&gt;w[i][j];</span><br><span class="line"></span><br><span class="line"><span class="built_in">memset</span>(f,<span class="number">0x3f</span>,<span class="built_in">sizeof</span>(f));<span class="comment">//因为要求最小值，所以初始化为无穷大</span></span><br><span class="line">f[<span class="number">1</span>][<span class="number">0</span>] = <span class="number">0</span>;<span class="comment">//因为零是起点,所以f[1][0]=0;</span></span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">1</span>&lt;&lt;n; i++) <span class="comment">//i表示所有的情况</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; n; j++) <span class="comment">//j表示走到哪一个点</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;&gt;j&amp;<span class="number">1</span>)</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; n; k++) <span class="comment">//k表示走到j这个点之前,以k为终点的最短距离</span></span><br><span class="line"><span class="keyword">if</span>(i&gt;&gt;k&amp;<span class="number">1</span>)</span><br><span class="line">f[i][j] = <span class="built_in">min</span>(f[i][j], f[i-(<span class="number">1</span>&lt;&lt;j)][k] + w[k][j]);<span class="comment">//更新最短距离</span></span><br><span class="line"></span><br><span class="line">cout &lt;&lt; f[(<span class="number">1</span>&lt;&lt;n)<span class="number">-1</span>][n<span class="number">-1</span>] &lt;&lt;endl;<span class="comment">//表示所有点都走过了,且终点是n-1的最短距离</span></span><br><span class="line"><span class="comment">//位运算的优先级低于&#x27;+&#x27;-&#x27;所以有必要的情况下要打括号</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="17-没有上司的舞会"><a href="#17-没有上司的舞会" class="headerlink" title="17.没有上司的舞会"></a>17.没有上司的舞会</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/287/">https://www.acwing.com/problem/content/287/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> dp[<span class="number">2</span>][<span class="number">6010</span>];<span class="comment">//dp解释见上</span></span><br><span class="line"><span class="type">int</span> f[<span class="number">2</span>][<span class="number">6010</span>];<span class="comment">//f[0]为父亲，f[1]为高兴值</span></span><br><span class="line"><span class="type">int</span> ind[<span class="number">6010</span>];<span class="comment">//入度</span></span><br><span class="line"><span class="type">int</span> vis[<span class="number">6010</span>];<span class="comment">//访问标记</span></span><br><span class="line"><span class="type">int</span> root;<span class="comment">//树的根</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">dfs</span><span class="params">(<span class="type">int</span> u)</span> <span class="comment">//递归从后往前更新</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span>(!u) <span class="keyword">return</span>;</span><br><span class="line">vis[u] = <span class="number">1</span>;<span class="comment">//已访问</span></span><br><span class="line">root = u;<span class="comment">//最后一个访问到的一定是根，所以一直更新根就行了</span></span><br><span class="line">dp[<span class="number">0</span>][f[<span class="number">0</span>][u]] += <span class="built_in">max</span>(dp[<span class="number">1</span>][u] + f[<span class="number">1</span>][u], dp[<span class="number">0</span>][u]);<span class="comment">//给父亲更新</span></span><br><span class="line">dp[<span class="number">1</span>][f[<span class="number">0</span>][u]] += dp[<span class="number">0</span>][u];</span><br><span class="line">ind[f[<span class="number">0</span>][u]]--;<span class="comment">//更新完一个子节点</span></span><br><span class="line"><span class="keyword">if</span>(!ind[f[<span class="number">0</span>][u]]) <span class="built_in">dfs</span>(f[<span class="number">0</span>][u]);<span class="comment">//在所有子节点更新后再更新（入度为0）</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;f[<span class="number">1</span>][i]);</span><br><span class="line"><span class="type">int</span> a,b;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line">f[<span class="number">0</span>][a] = b;<span class="comment">//保存节点信息</span></span><br><span class="line">ind[b]++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line"><span class="keyword">if</span>(!vis[i] &amp;&amp; !ind[i])<span class="comment">//没有被访问过，没有入度，说明是叶子节点</span></span><br><span class="line"><span class="built_in">dfs</span>(i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, <span class="built_in">max</span>(dp[<span class="number">0</span>][root],dp[<span class="number">1</span>][root]+f[<span class="number">1</span>][root]));<span class="comment">//取根节点两种方案的最大值</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="18-滑雪"><a href="#18-滑雪" class="headerlink" title="18.滑雪"></a>18.滑雪</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/903/">https://www.acwing.com/problem/content/903/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">310</span>;</span><br><span class="line"><span class="type">int</span> R, C;</span><br><span class="line"><span class="type">int</span> arr[N][N];</span><br><span class="line"><span class="type">int</span> dp[N][N];</span><br><span class="line"><span class="type">int</span> maxlen = <span class="number">-1</span>;</span><br><span class="line"><span class="type">int</span> addx[] = &#123; <span class="number">1</span>,<span class="number">-1</span>,<span class="number">0</span>,<span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> addy[] = &#123; <span class="number">0</span>,<span class="number">0</span>,<span class="number">1</span>,<span class="number">-1</span> &#125;;</span><br><span class="line"><span class="function"><span class="type">int</span>  <span class="title">Dfs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (dp[x][y] != <span class="number">0</span>) <span class="keyword">return</span> dp[x][y];</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> newx = x + addx[i];</span><br><span class="line"><span class="type">int</span> newy = y + addy[i];</span><br><span class="line"><span class="keyword">if</span> (newx &gt;= <span class="number">0</span> &amp;&amp; newx &lt; R &amp;&amp; newy &gt;= <span class="number">0</span> &amp;&amp; newy &lt; C &amp;&amp; arr[newx][newy] &lt; arr[x][y])</span><br><span class="line">&#123;</span><br><span class="line">dp[x][y] = <span class="built_in">max</span>(dp[x][y], <span class="built_in">Dfs</span>(newx, newy) + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dp[x][y];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ios::<span class="built_in">sync_with_stdio</span>(<span class="literal">false</span>);</span><br><span class="line">cin &gt;&gt; R &gt;&gt; C;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; R; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; C; j++)</span><br><span class="line">&#123;</span><br><span class="line">cin &gt;&gt; arr[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; R; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; C; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> len = <span class="built_in">Dfs</span>(i, j);</span><br><span class="line">maxlen = <span class="built_in">max</span>(maxlen, len);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; maxlen + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h3 id="第六讲-贪心"><a href="#第六讲-贪心" class="headerlink" title="第六讲 贪心"></a>第六讲 贪心</h3><h4 id="1-区间选点"><a href="#1-区间选点" class="headerlink" title="1.区间选点"></a>1.区间选点</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/907/">https://www.acwing.com/problem/content/907/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 将每个区间按右端点从小到大排序</span></span><br><span class="line"><span class="comment">//2 从前往后依次枚举每个区间，如果当前区间已经包含点，则直接pass，否则，选择当前区间的右端点</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Range</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Range&amp; w) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; w.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;range[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;range[i].l, &amp;range[i].r);</span><br><span class="line">        <span class="comment">//int l,r;</span></span><br><span class="line">        <span class="comment">//scanf(&quot;%d%d&quot;,&amp;l,&amp;r);</span></span><br><span class="line">        <span class="comment">//range[i] = &#123;l,r&#125;;</span></span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(range, range + n);</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>,ed = <span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(range[i].l &gt; ed)</span><br><span class="line">        &#123;</span><br><span class="line">            res++;</span><br><span class="line">            ed = range[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="2-最大不相交区间数量"><a href="#2-最大不相交区间数量" class="headerlink" title="2.最大不相交区间数量"></a>2.最大不相交区间数量</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/910/">https://www.acwing.com/problem/content/910/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 将每个区间按右端点从小到大排序</span></span><br><span class="line"><span class="comment">//2 从前往后依次枚举每个区间，如果当前区间已经包含点，则直接pass，否则，选择当前区间的右端点</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Range</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l,r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Range&amp; w) <span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> r &lt; w.r;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;range[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line">        range[i] = &#123;l, r&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(range, range + n);</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>,ed = <span class="number">-2e9</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; i++)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">if</span>(range[i].l &gt; ed)</span><br><span class="line">        &#123;</span><br><span class="line">            res++;</span><br><span class="line">            ed = range[i].r;</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="3-区间分组"><a href="#3-区间分组" class="headerlink" title="3.区间分组"></a>3.区间分组</h4><p>原题链接：<a href="https://www.acwing.com/activity/content/problem/content/1113/">https://www.acwing.com/activity/content/problem/content/1113/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Range</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt; (<span class="type">const</span> Range &amp;W)<span class="type">const</span></span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> l &lt; W.l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;range[N];</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> l, r;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;l, &amp;r);</span><br><span class="line">        range[i] = &#123;l, r&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(range, range + n);</span><br><span class="line"></span><br><span class="line">    priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; heap;</span><br><span class="line">    <span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i ++ )</span><br><span class="line">    &#123;</span><br><span class="line"></span><br><span class="line">        <span class="keyword">if</span> (heap.<span class="built_in">empty</span>() || heap.<span class="built_in">top</span>() &gt;= range[i].l)&#123;</span><br><span class="line">            heap.<span class="built_in">push</span>(range[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">else</span> &#123;</span><br><span class="line">            heap.<span class="built_in">pop</span>();</span><br><span class="line">            heap.<span class="built_in">push</span>(range[i].r);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, heap.<span class="built_in">size</span>());</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="4-区间覆盖"><a href="#4-区间覆盖" class="headerlink" title="4.区间覆盖"></a>4.区间覆盖</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/909/">https://www.acwing.com/problem/content/909/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//1 将所有区间按左端点从小到大排序</span></span><br><span class="line"><span class="comment">//2 从前往后依次枚举每个区间，在所有能覆盖start的区间中选择右端点最大的区间</span></span><br><span class="line"><span class="comment">//3 选完之后将start更新成右端点的最大值</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">Range</span></span><br><span class="line">&#123;</span><br><span class="line">    <span class="type">int</span> l, r;</span><br><span class="line">    <span class="type">bool</span> <span class="keyword">operator</span>&lt;(<span class="type">const</span> Range&amp; w)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="keyword">return</span> l &lt; w.l;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;range[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> st, ed;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;st, &amp;ed);</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;range[i].l, &amp;range[i].r);</span><br><span class="line">    <span class="built_in">sort</span>(range, range+n);</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="type">bool</span> success = <span class="literal">false</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> j = i,r = <span class="number">-2e9</span>;</span><br><span class="line">        <span class="keyword">while</span>(j &lt; n &amp;&amp; range[j].l &lt;= st)</span><br><span class="line">        &#123;</span><br><span class="line">            r = <span class="built_in">max</span>(r, range[j].r);</span><br><span class="line">            j++;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">if</span>(r &lt; st)</span><br><span class="line">        &#123;</span><br><span class="line">            res = <span class="number">-1</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        res++;</span><br><span class="line">        <span class="keyword">if</span>(r &gt;= ed) </span><br><span class="line">        &#123;</span><br><span class="line">            success = <span class="literal">true</span>;</span><br><span class="line">            <span class="keyword">break</span>;</span><br><span class="line">        &#125;</span><br><span class="line">        st = r;</span><br><span class="line">        i = j - <span class="number">1</span>;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">if</span>(!success) res = <span class="number">-1</span>;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="5-合并果子"><a href="#5-合并果子" class="headerlink" title="5.合并果子"></a>5.合并果子</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/150/">https://www.acwing.com/problem/content/150/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;queue&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    priority_queue&lt;<span class="type">int</span>, vector&lt;<span class="type">int</span>&gt;, greater&lt;<span class="type">int</span>&gt;&gt; heap;</span><br><span class="line">    <span class="keyword">while</span> (n -- )</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> x;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line">        heap.<span class="built_in">push</span>(x);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="type">int</span> res = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span> (heap.<span class="built_in">size</span>() &gt; <span class="number">1</span>)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> a = heap.<span class="built_in">top</span>(); heap.<span class="built_in">pop</span>();</span><br><span class="line">        <span class="type">int</span> b = heap.<span class="built_in">top</span>(); heap.<span class="built_in">pop</span>();</span><br><span class="line">        res += a + b;</span><br><span class="line">        heap.<span class="built_in">push</span>(a + b);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="6-排队打水"><a href="#6-排队打水" class="headerlink" title="6.排队打水"></a>6.排队打水</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/description/915/">https://www.acwing.com/problem/content/description/915/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="type">int</span> a[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i]);</span><br><span class="line">    <span class="built_in">sort</span>(a, a + n);</span><br><span class="line">    <span class="type">long</span> <span class="type">long</span> ans = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n ; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        ans += a[i]*(n - i - <span class="number">1</span>);</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, ans);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="7-货仓选址"><a href="#7-货仓选址" class="headerlink" title="7.货仓选址"></a>7.货仓选址</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/106/">https://www.acwing.com/problem/content/106/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">100010</span>;</span><br><span class="line"><span class="type">int</span> q[N];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;q[i]);</span><br><span class="line">    <span class="built_in">sort</span>(q, q + n);</span><br><span class="line">    <span class="type">int</span> i = <span class="number">0</span>,j = n - <span class="number">1</span>, sum = <span class="number">0</span>;</span><br><span class="line">    <span class="keyword">while</span>(i &lt; j)</span><br><span class="line">    &#123;</span><br><span class="line">        sum += (q[j] - q[i]);</span><br><span class="line">        i++;</span><br><span class="line">        j--;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h4 id="8-耍杂技的牛"><a href="#8-耍杂技的牛" class="headerlink" title="8.耍杂技的牛"></a>8.耍杂技的牛</h4><p>原题链接：<a href="https://www.acwing.com/problem/content/127/">https://www.acwing.com/problem/content/127/</a></p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;limits.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">50010</span>;</span><br><span class="line"><span class="keyword">typedef</span> pair&lt;<span class="type">int</span>,<span class="type">int</span>&gt; PII;</span><br><span class="line">PII cows[N];</span><br><span class="line"><span class="type">int</span> n;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">    <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i) </span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> w,s;</span><br><span class="line">        <span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>,&amp;w, &amp;s);</span><br><span class="line">        cows[i] = &#123;w + s, w&#125;;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">sort</span>(cows, cows+n);</span><br><span class="line">    <span class="type">int</span> sum = <span class="number">0</span>,res = INT_MIN;</span><br><span class="line">    <span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>;i &lt; n; ++i)</span><br><span class="line">    &#123;</span><br><span class="line">        <span class="type">int</span> w = cows[i].second,s = cows[i].first - w;</span><br><span class="line">        res = <span class="built_in">max</span>(res, sum - s);</span><br><span class="line">        sum += w;</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, res);</span><br><span class="line">    <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 字符串 </tag>
            
            <tag> 前缀和 </tag>
            
            <tag> 动态规划 </tag>
            
            <tag> 贪心 </tag>
            
            <tag> 图论 </tag>
            
            <tag> 优先队列 </tag>
            
            <tag> 快速幂 </tag>
            
            <tag> 滑动窗口 </tag>
            
            <tag> 质数筛 </tag>
            
            <tag> 差分矩阵 </tag>
            
            <tag> 背包问题 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>队列的链式表示和实现</title>
      <link href="/2023/10/22/00014/"/>
      <url>/2023/10/22/00014/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>编写一个程序实现链队列的各种基本运算，并在此基础上设计一个主程序，完成如下功能：</p><ul><li>初始化并建立链队列</li><li>销毁链队列</li><li>入队</li><li>出队</li><li>遍历链队列</li><li>判断链队列是否为空</li><li>清空链队列</li><li>获取链队列长度</li><li>获取链队列头元素</li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//链队列的实现及常用操作测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;time.h&gt;</span></span></span><br><span class="line"><span class="comment">//链队列的数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> QElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">QNode</span>  //队列节点</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">QElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">QNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; QNode, * QueuePtr;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">QueuePtr front;  <span class="comment">//队头指针</span></span><br><span class="line">QueuePtr rear;   <span class="comment">//队尾指针</span></span><br><span class="line">&#125; LinkQueue;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明列表</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InitQueue</span><span class="params">(LinkQueue* Q)</span>;             <span class="comment">//1 初始化链队列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DestroyQueue</span><span class="params">(LinkQueue* Q)</span>;          <span class="comment">//2 销毁链队列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnQueue</span><span class="params">(LinkQueue* Q, QElemType e)</span>;  <span class="comment">//3 入队</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeQueue</span><span class="params">(LinkQueue* Q, QElemType* e)</span>; <span class="comment">//4 出队</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">QueueEmpty</span><span class="params">(LinkQueue Q)</span>;             <span class="comment">//5 判断链队列是否为空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ClearQueue</span><span class="params">(LinkQueue* Q)</span>;           <span class="comment">//6 清空链队列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">QueueLength</span><span class="params">(LinkQueue Q)</span>;            <span class="comment">//7 获取链队列长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetHead</span><span class="params">(LinkQueue Q, QElemType* e)</span>;  <span class="comment">//8 获取队头元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">QueueTraverse</span><span class="params">(LinkQueue Q)</span>;         <span class="comment">//9 遍历并输出链队列</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, k = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">QElemType d = <span class="number">0</span>;</span><br><span class="line">LinkQueue Q;</span><br><span class="line">srand((<span class="type">unsigned</span>)time(<span class="literal">NULL</span>));</span><br><span class="line"><span class="type">int</span> status = InitQueue(&amp;Q);</span><br><span class="line"><span class="keyword">if</span> (status) <span class="built_in">printf</span>(<span class="string">&quot;队列初始化成功！\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;队列初始化失败！\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入队列初始元素个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;队列初始化成功！\n执行%d次入队操作：\n&quot;</span>, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">d = rand() % <span class="number">90</span> + <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%-2d次：元素%d入队\n&quot;</span>, i + <span class="number">1</span>, d);</span><br><span class="line"><span class="comment">//入队</span></span><br><span class="line">EnQueue(&amp;Q, d);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;打印当前队列:&quot;</span>);</span><br><span class="line">QueueTraverse(Q);</span><br><span class="line"><span class="comment">//获取队列长度</span></span><br><span class="line">k = QueueLength(Q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n当前队列长度为：%d\n\n&quot;</span>, QueueLength(Q));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;执行%d次出队操作：\n&quot;</span>, k / <span class="number">2</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; k / <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//出队</span></span><br><span class="line">DeQueue(&amp;Q, &amp;d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%-2d次：元素%d出队&quot;</span>, i + <span class="number">1</span>, d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t打印当前队列：&quot;</span>);</span><br><span class="line">QueueTraverse(Q);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//获取队头元素，保存到d中</span></span><br><span class="line">n = GetHead(Q, &amp;d);</span><br><span class="line"><span class="keyword">if</span> (n) <span class="built_in">printf</span>(<span class="string">&quot;\n队头元素的值：%d\n&quot;</span>, d);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;执行清空队列操作\n&quot;</span>);</span><br><span class="line"><span class="comment">//清空队列</span></span><br><span class="line">ClearQueue(&amp;Q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;清空队列后：q.front=%p  q.rear=%p  q.front-&gt;next=%p\n&quot;</span>, Q.front, Q.rear, Q.front-&gt;next);</span><br><span class="line">DestroyQueue(&amp;Q);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;销毁队列后：q.front=%p  q.rear=%p\n&quot;</span>, Q.front, Q.rear);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能1 初始化链队列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InitQueue</span><span class="params">(LinkQueue* Q)</span></span><br><span class="line">&#123;</span><br><span class="line">Q-&gt;front = Q-&gt;rear = (QueuePtr)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(QNode));</span><br><span class="line"><span class="keyword">if</span> (!Q-&gt;front) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">Q-&gt;front-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>; <span class="comment">//初始化成功则返回1</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能2 销毁链队列</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DestroyQueue</span><span class="params">(LinkQueue* Q)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (Q-&gt;front)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//Q-&gt;rear指向Q-&gt;front的下一个节点</span></span><br><span class="line">Q-&gt;rear = Q-&gt;front-&gt;next;</span><br><span class="line"><span class="comment">//释放Q-&gt;front所指节点</span></span><br><span class="line"><span class="built_in">free</span>(Q-&gt;front);</span><br><span class="line"><span class="comment">//Q-&gt;front指向Q-&gt;front的下一个节点</span></span><br><span class="line">Q-&gt;front = Q-&gt;rear;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能3 入队</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">EnQueue</span><span class="params">(LinkQueue* Q, QElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//动态生成新节点</span></span><br><span class="line">QueuePtr p = (QueuePtr)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(QNode));</span><br><span class="line"><span class="comment">//生成失败则返回0</span></span><br><span class="line"><span class="keyword">if</span> (!p) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//将e的值赋给新节点</span></span><br><span class="line">p-&gt;data = e;</span><br><span class="line"><span class="comment">//新节点的指针为空</span></span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//原队尾节点的指针域为指向新节点</span></span><br><span class="line">Q-&gt;rear-&gt;next = p;</span><br><span class="line"><span class="comment">//尾指针指向新节点</span></span><br><span class="line">Q-&gt;rear = p;</span><br><span class="line"><span class="comment">//入队成功则返回1</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能4 出队</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeQueue</span><span class="params">(LinkQueue* Q, QElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//队列为空则返回0</span></span><br><span class="line"><span class="keyword">if</span> (Q-&gt;front == Q-&gt;rear) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//p指向队头节点</span></span><br><span class="line">QueuePtr p = Q-&gt;front-&gt;next;</span><br><span class="line"><span class="comment">//队头元素赋给e</span></span><br><span class="line">*e = p-&gt;data;</span><br><span class="line"><span class="comment">//队头节点指向下一个节点</span></span><br><span class="line">Q-&gt;front-&gt;next = p-&gt;next;</span><br><span class="line"><span class="comment">//如果删除的是队尾节点，则修改队尾指针指向头节点</span></span><br><span class="line"><span class="keyword">if</span> (Q-&gt;rear == p) Q-&gt;rear = Q-&gt;front;</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="comment">//出队成功则返回1</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能5 判断链队列是否为空</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">QueueEmpty</span><span class="params">(LinkQueue Q)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果队列为空则返回1</span></span><br><span class="line"><span class="keyword">if</span> (Q.front-&gt;next == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能6 清空链队列</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ClearQueue</span><span class="params">(LinkQueue* Q)</span></span><br><span class="line">&#123;</span><br><span class="line">Q-&gt;front-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能7 获取链队列长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">QueueLength</span><span class="params">(LinkQueue Q)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//计数器清0</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//p指向头节点</span></span><br><span class="line">QueuePtr p = Q.front;</span><br><span class="line"><span class="comment">//如果p所指向的不是尾节点</span></span><br><span class="line"><span class="keyword">while</span> (p != Q.rear)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//则计数器加1</span></span><br><span class="line">i++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能8 获取队头元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetHead</span><span class="params">(LinkQueue Q, QElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line">QueuePtr p;</span><br><span class="line"><span class="keyword">if</span> (Q.front == Q.rear) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//p指向队头节点</span></span><br><span class="line">p = Q.front-&gt;next;</span><br><span class="line"><span class="comment">//将队头元素的值赋给e</span></span><br><span class="line">*e = p-&gt;data;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历并输出队列（队头到队尾）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">QueueTraverse</span><span class="params">(LinkQueue Q)</span></span><br><span class="line">&#123;</span><br><span class="line">QueuePtr p = Q.front-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;data);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/img/images/00014/00014_2.png" alt="链队列"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 队列 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>哈夫曼树的创建及哈夫曼编码的求解</title>
      <link href="/2023/10/22/00013/"/>
      <url>/2023/10/22/00013/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C语言实现的哈夫曼树，包含以下功能模块：</p><ul><li>创建哈夫曼树</li><li>输出所有节点的权值</li><li>通过递归求解哈夫曼编码</li><li>通过循环求解哈夫曼编码</li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXLEAF 1000   <span class="comment">//最多叶子节点数</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXVALUE 2147483647  <span class="comment">//最大权值</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">/*哈夫曼树的数据结构*/</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> weight; <span class="comment">//权值</span></span><br><span class="line"><span class="type">int</span> parent; <span class="comment">//父节点下标</span></span><br><span class="line"><span class="type">int</span> lchild; <span class="comment">//左孩子节点的下标</span></span><br><span class="line"><span class="type">int</span> rchild; <span class="comment">//右孩子节点的下标</span></span><br><span class="line">&#125; HNodeType;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数声明列表*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuffmanTree</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span>;                     <span class="comment">//1 创建哈夫曼树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Output</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span>;                          <span class="comment">//2 输出所有节点的权值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GetCode1</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> i, <span class="type">char</span> dest[], <span class="type">int</span> len)</span>;  <span class="comment">//3 通过递归求哈夫曼编码</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GetCode2</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span>;                        <span class="comment">//4 通过循环求哈夫曼编码</span></span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">7</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入节点个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入各节点的权值：&quot;</span>);</span><br><span class="line">HNodeType HuffNode[MAXLEAF];</span><br><span class="line">HuffmanTree(HuffNode, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;所有节点权值：&quot;</span>);</span><br><span class="line">Output(HuffNode, n);</span><br><span class="line"><span class="type">char</span> dest[MAXLEAF] = <span class="string">&quot;&quot;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n通过递归求各节点哈夫曼编码：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-8s%-10s\n&quot;</span>, <span class="string">&quot;权值&quot;</span>, <span class="string">&quot;编码&quot;</span>);</span><br><span class="line">GetCode1(HuffNode, <span class="number">2</span> * n - <span class="number">2</span>, dest, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n通过循环求各节点哈夫曼编码：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-8s%-10s\n&quot;</span>, <span class="string">&quot;权值&quot;</span>, <span class="string">&quot;编码&quot;</span>);</span><br><span class="line">GetCode2(HuffNode, n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*函数实现部分*/</span></span><br><span class="line"><span class="comment">/*【功能1 创建哈夫曼树】*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">HuffmanTree</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">HuffNode[i].weight = <span class="number">0</span>;</span><br><span class="line">HuffNode[i].parent = <span class="number">-1</span>;</span><br><span class="line">HuffNode[i].lchild = <span class="number">-1</span>;</span><br><span class="line">HuffNode[i].rchild = <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;HuffNode[i].weight);</span><br><span class="line"><span class="comment">//找最小值和次小值</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m1 = MAXVALUE, m2 = MAXVALUE, x1 = <span class="number">-1</span>, x2 = <span class="number">-1</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; n + i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HuffNode[j].weight &lt; m1 &amp;&amp; HuffNode[j].parent == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m2 = m1;</span><br><span class="line">x2 = x1;</span><br><span class="line">m1 = HuffNode[j].weight;</span><br><span class="line">x1 = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (HuffNode[j].weight &lt; m2 &amp;&amp; HuffNode[j].parent == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">m2 = HuffNode[j].weight;</span><br><span class="line">x2 = j;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//选中x1,x2合并</span></span><br><span class="line">HuffNode[n + i].weight = m1 + m2;</span><br><span class="line">HuffNode[n + i].lchild = x1;</span><br><span class="line">HuffNode[n + i].rchild = x2;</span><br><span class="line">HuffNode[x1].parent = n + i;</span><br><span class="line">HuffNode[x2].parent = n + i;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*【功能2 输出所有节点的权值】*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Output</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">2</span> * n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, HuffNode[i].weight);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*【功能3 通过递归求哈夫曼编码】*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GetCode1</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> i, <span class="type">char</span> dest[], <span class="type">int</span> len)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HuffNode[i].lchild == <span class="number">-1</span> &amp;&amp; HuffNode[i].rchild == <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">dest[len] = <span class="string">&#x27;\0&#x27;</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-8d%-10s\n&quot;</span>,  HuffNode[i].weight, dest);</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (HuffNode[i].lchild != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">dest[len] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line">GetCode1(HuffNode, HuffNode[i].lchild, dest, len + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (HuffNode[i].rchild != <span class="number">-1</span>)</span><br><span class="line">&#123;</span><br><span class="line">dest[len] = <span class="string">&#x27;1&#x27;</span>;</span><br><span class="line">GetCode1(HuffNode, HuffNode[i].rchild, dest, len + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*【功能4 通过循环求哈夫曼编码】*/</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">GetCode2</span><span class="params">(HNodeType HuffNode[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c = i, f = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> code[MAXLEAF] = &#123; <span class="number">0</span> &#125;; <span class="comment">//编码数组</span></span><br><span class="line"><span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line">f = HuffNode[c].parent;</span><br><span class="line"><span class="keyword">while</span> (f &gt;= <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (HuffNode[f].lchild == c) code[len++] = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> code[len++] = <span class="number">1</span>;</span><br><span class="line">c = f;</span><br><span class="line">f = HuffNode[c].parent;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-8d&quot;</span>, HuffNode[i].weight);</span><br><span class="line"><span class="keyword">for</span> (j = len - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, code[j]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/img/images/00013/00013_2.png" alt="哈夫曼树"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 哈夫曼树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>完全二叉树的实现及常用操作</title>
      <link href="/2023/10/21/00012/"/>
      <url>/2023/10/21/00012/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C语言实现的完全二叉树，包含以下功能模块：</p><ul><li>初始化二叉树</li><li>创建节点</li><li>根据输入数据创建任意结构二叉树</li><li>插入数据至二叉树中（自动放在第一个空指针处）</li><li>先根遍历（基于深度优先并借助递归实现）</li><li>中根遍历（基于深度优先并借助递归实现）</li><li>后根遍历（基于深度优先并借助递归实现）</li><li>层次遍历（基于广度优先并借助队列实现）</li><li>获取叶子节点个数</li><li>获取节点总个数</li><li>获取二叉树深度</li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> MAXNODE 1000</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//二叉树的节点数据结构</span></span><br><span class="line"><span class="comment">//节点数据域</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">BitNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="comment">//指针域，包含左右孩子两个指针</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">BitNode</span>* <span class="title">lchild</span>, * <span class="title">rchild</span>;</span></span><br><span class="line">&#125; BitNode, * BitTree;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.创建节点</span></span><br><span class="line">BitNode* <span class="title function_">CreateNode</span><span class="params">(ElemType data)</span>;</span><br><span class="line"><span class="comment">//2.初始化二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBitTree</span><span class="params">(BitTree* bt)</span>;</span><br><span class="line"><span class="comment">//3.根据输入数据创建任意结构二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">CreateBitTree</span><span class="params">(BitTree* T)</span>;</span><br><span class="line"><span class="comment">//4.插入数据至二叉树中（自动放在第一个空指针处）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(BitTree* bt, ElemType data)</span>;</span><br><span class="line"><span class="comment">//5.先根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreOrder</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//6.中根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InOrder</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//7.后根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PostOrder</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//8.层次遍历（基于广度优先并借助队列实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LevelOrder</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//9.获取叶子节点个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountLeaf</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//10.获取节点总个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountNode</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"><span class="comment">//11.获取二叉树深度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Depth</span><span class="params">(BitTree bt)</span>;</span><br><span class="line"></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">BitTree bt = <span class="literal">NULL</span>;</span><br><span class="line">InitBitTree(&amp;bt);</span><br><span class="line">ElemType data[] = &#123; <span class="number">1</span>, <span class="number">2</span>, <span class="number">3</span>, <span class="number">4</span>, <span class="number">5</span>, <span class="number">6</span>, <span class="number">7</span>, <span class="number">8</span>, <span class="number">9</span> &#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;创建完全二叉树！\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">Insert(&amp;bt, data[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//先序遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;先根遍历结果：&quot;</span>);</span><br><span class="line">PreOrder(bt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//中序遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中根遍历结果：&quot;</span>);</span><br><span class="line">InOrder(bt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//后序遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;后根遍历结果：&quot;</span>);</span><br><span class="line">PostOrder(bt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="comment">//层次遍历</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;层次遍历结果：&quot;</span>);</span><br><span class="line">LevelOrder(bt);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;节点总个数：%d\n&quot;</span>, CountNode(bt));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;叶子节点个数：%d\n&quot;</span>, CountLeaf(bt));</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;二叉树深度：%d\n&quot;</span>, Depth(bt));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//功能1 创建节点</span></span><br><span class="line">BitNode* <span class="title function_">CreateNode</span><span class="params">(ElemType data)</span></span><br><span class="line">&#123;</span><br><span class="line">BitNode* node = (BitNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(BitNode));</span><br><span class="line">node-&gt;data = data;</span><br><span class="line">node-&gt;lchild = node-&gt;rchild = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> node;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能2 初始化二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InitBitTree</span><span class="params">(BitTree* bt)</span></span><br><span class="line">&#123;</span><br><span class="line">*bt = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能3 根据输入数据创建任意结构二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">CreateBitTree</span><span class="params">(BitTree* T)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> ch = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;ch);</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="number">-1</span>) T = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">*T = CreateNode(ch);</span><br><span class="line">CreateBitTree(&amp;(*T)-&gt;lchild);</span><br><span class="line">CreateBitTree(&amp;(*T)-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能4 插入数据至二叉树中（自动放在第一个空指针处），可创建完全二叉树</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Insert</span><span class="params">(BitTree* bt, ElemType data)</span></span><br><span class="line">&#123;</span><br><span class="line">BitNode* node = CreateNode(data);</span><br><span class="line"><span class="keyword">if</span> (*bt == <span class="literal">NULL</span>) *bt = node;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">BitTree Queue[MAXNODE];</span><br><span class="line"><span class="type">int</span> front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">Queue[rear++] = *bt;</span><br><span class="line"><span class="keyword">while</span> (front != rear)</span><br><span class="line">&#123;</span><br><span class="line">BitTree temp = Queue[front++];</span><br><span class="line"><span class="keyword">if</span> (temp-&gt;lchild)</span><br><span class="line">&#123;</span><br><span class="line">Queue[rear++] = temp-&gt;lchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;lchild = node;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp-&gt;rchild)</span><br><span class="line">&#123;</span><br><span class="line">Queue[rear++] = temp-&gt;rchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;rchild = node;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能5 先根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PreOrder</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, bt-&gt;data);</span><br><span class="line">PreOrder(bt-&gt;lchild);</span><br><span class="line">PreOrder(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能6 中根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InOrder</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt)</span><br><span class="line">&#123;</span><br><span class="line">InOrder(bt-&gt;lchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, bt-&gt;data);</span><br><span class="line">InOrder(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能7 后根遍历（基于深度优先并借助递归实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PostOrder</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt)</span><br><span class="line">&#123;</span><br><span class="line">PostOrder(bt-&gt;lchild);</span><br><span class="line">PostOrder(bt-&gt;rchild);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, bt-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能8 层次遍历（基于广度优先并借助队列实现）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">LevelOrder</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">BitTree Queue[MAXNODE];</span><br><span class="line"><span class="type">int</span> front = <span class="number">0</span>, rear = <span class="number">0</span>;</span><br><span class="line">Queue[rear++] = bt;</span><br><span class="line"><span class="keyword">while</span> (rear != front)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (Queue[front]-&gt;lchild)</span><br><span class="line">&#123;</span><br><span class="line">Queue[rear++] = Queue[front]-&gt;lchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (Queue[front]-&gt;rchild)</span><br><span class="line">&#123;</span><br><span class="line">Queue[rear++] = Queue[front]-&gt;rchild;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-4d&quot;</span>, Queue[front++]-&gt;data);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能9 获取叶子节点个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountLeaf</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (bt-&gt;lchild == <span class="literal">NULL</span> &amp;&amp; bt-&gt;rchild == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">return</span> CountLeaf(bt-&gt;lchild) + CountLeaf(bt-&gt;rchild);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能10 获取节点总个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">CountNode</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> CountNode(bt-&gt;lchild) + CountNode(bt-&gt;rchild) + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能11 获取二叉树深度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Depth</span><span class="params">(BitTree bt)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (bt == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> m = Depth(bt-&gt;lchild);</span><br><span class="line"><span class="type">int</span> n = Depth(bt-&gt;rchild);</span><br><span class="line"><span class="keyword">return</span> m &gt; n ? m + <span class="number">1</span> : n + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/img/images/00012/00012_2.png" alt="完全二叉树"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 二叉树 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>栈的链式表示和实现</title>
      <link href="/2023/10/21/00011/"/>
      <url>/2023/10/21/00011/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C语言实现的链栈，包含以下功能模块：</p><ul><li>初始化链栈</li><li>入栈</li><li>出栈</li><li>判断栈是否为空</li><li>获取链栈长度</li><li>取栈顶元素</li><li>遍历链栈</li><li>链栈置空</li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//链栈的实现及常用操作测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//链栈的数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">Node</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Node</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; Node, * LinkStack;</span><br><span class="line"></span><br><span class="line"><span class="comment">//1.初始化链栈</span></span><br><span class="line">LinkStack <span class="title function_">InitLinkStack</span><span class="params">()</span>;</span><br><span class="line"><span class="comment">//2.判断链栈是否为空</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">StackEmpty</span><span class="params">(LinkStack S)</span>;</span><br><span class="line"><span class="comment">//3.获取链栈长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">StackLength</span><span class="params">(LinkStack S)</span>;</span><br><span class="line"><span class="comment">//4.入栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">PushLinkStack</span><span class="params">(LinkStack S, ElemType e)</span>;</span><br><span class="line"><span class="comment">//5.出栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">PopLinkStack</span><span class="params">(LinkStack S, ElemType* e)</span>;</span><br><span class="line"><span class="comment">//6.遍历栈（从栈顶到栈底）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintLinkStack</span><span class="params">(LinkStack S)</span>;</span><br><span class="line"><span class="comment">//7.链栈置空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ClearLinkStack</span><span class="params">(LinkStack S)</span>;</span><br><span class="line"><span class="comment">//8.取栈顶元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetTopLinkStack</span><span class="params">(LinkStack S, ElemType* e)</span>;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;初始化链栈成功！\n&quot;</span>);</span><br><span class="line">LinkStack S = InitLinkStack();</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n执行9次入栈操作！\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">PushLinkStack(S, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;执行完毕！当前栈长度为：%d\n打印当前栈：&quot;</span>, StackLength(S));</span><br><span class="line">PrintLinkStack(S);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n执行4次出栈操作！\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">PopLinkStack(S, &amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d次：栈顶元素%d出栈成功！\n&quot;</span>, i + <span class="number">1</span>, e);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;执行完毕！当前栈长度为：%d\n打印当前栈：&quot;</span>, StackLength(S));</span><br><span class="line">PrintLinkStack(S);</span><br><span class="line">GetTopLinkStack(S, &amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n执行取栈顶元素操作：当前栈顶元素为：%d\n&quot;</span>, e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n执行清空栈操作！\n&quot;</span>);</span><br><span class="line">ClearLinkStack(S);</span><br><span class="line"><span class="keyword">if</span> (StackEmpty(S)) <span class="built_in">printf</span>(<span class="string">&quot;执行完毕！当前栈为空！\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;清空栈失败！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能1 初始化链栈（带头结点的链栈）</span></span><br><span class="line">LinkStack <span class="title function_">InitLinkStack</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">LinkStack S = (LinkStack)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line">S-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">return</span> S;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能2 判断链栈是否为空</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">StackEmpty</span><span class="params">(LinkStack S)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (S == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">return</span> S-&gt;next == <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能3 获取链栈长度</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">StackLength</span><span class="params">(LinkStack S)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> len = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (StackEmpty(S)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//带头结点的链栈要先移动一下</span></span><br><span class="line">Node* p = S-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">len++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> len;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能4 入栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">PushLinkStack</span><span class="params">(LinkStack S, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//分配入栈结点</span></span><br><span class="line">Node* newNode = (Node*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(Node));</span><br><span class="line"><span class="comment">//节点分配失败</span></span><br><span class="line"><span class="keyword">if</span> (!newNode) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//使用头插法</span></span><br><span class="line">newNode-&gt;data = e;</span><br><span class="line">newNode-&gt;next = S-&gt;next;</span><br><span class="line">S-&gt;next = newNode;</span><br><span class="line"><span class="comment">//入栈成功则返回1</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能5 出栈</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">PopLinkStack</span><span class="params">(LinkStack S, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//栈空则出栈失败</span></span><br><span class="line"><span class="keyword">if</span> (StackEmpty(S)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//访问栈顶结点</span></span><br><span class="line">Node* top = S-&gt;next;</span><br><span class="line"><span class="comment">//取出栈顶元素</span></span><br><span class="line">*e = top-&gt;data;</span><br><span class="line">S-&gt;next = top-&gt;next;</span><br><span class="line"><span class="comment">//释放栈顶空间</span></span><br><span class="line"><span class="built_in">free</span>(top);</span><br><span class="line"><span class="comment">//出栈成功则返回1</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能6 遍历栈（从栈顶到栈底）</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintLinkStack</span><span class="params">(LinkStack S)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//遍历时从首元素节点开始</span></span><br><span class="line">Node* p = S-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;data);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能7 链栈置空</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">ClearLinkStack</span><span class="params">(LinkStack S)</span></span><br><span class="line">&#123;</span><br><span class="line">Node* p = S-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line">Node* q = p;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(q);</span><br><span class="line">&#125;</span><br><span class="line">S-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能8 取栈顶元素</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetTopLinkStack</span><span class="params">(LinkStack S, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//如果为空栈则返回0，代表取栈顶元素失败</span></span><br><span class="line"><span class="keyword">if</span> (StackEmpty(S)) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">*e = S-&gt;next-&gt;data;</span><br><span class="line"><span class="comment">//返回1代表取栈顶元素成功，栈顶元素保存在e中</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/img/images/00011/00011_2.png" alt="链栈"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 栈 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>string类用法总结</title>
      <link href="/2023/10/21/00010/"/>
      <url>/2023/10/21/00010/</url>
      
        <content type="html"><![CDATA[<h4 id="string类的构造函数和析构函数："><a href="#string类的构造函数和析构函数：" class="headerlink" title="string类的构造函数和析构函数："></a>string类的构造函数和析构函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//用c字符串s初始化</span></span><br><span class="line"><span class="built_in">string</span>(<span class="type">const</span> <span class="type">char</span> *s);</span><br><span class="line"><span class="comment">//用n个字符c初始化</span></span><br><span class="line"><span class="built_in">string</span>(<span class="type">int</span> n,<span class="type">char</span> c);     </span><br><span class="line"><span class="comment">//生成一个空字符串s</span></span><br><span class="line">string s; </span><br><span class="line"><span class="comment">//拷贝构造函数 生成str的复制品</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(str)</span></span>;</span><br><span class="line"><span class="comment">//将字符串str内“始于位置stridx”的部分当作字符串的初值</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(str,stridx)</span></span>; </span><br><span class="line"><span class="comment">//将字符串str内“始于stridx且长度顶多strlen”的部分作为字符串的初值</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(str,stridx,strlen)</span></span>;</span><br><span class="line"><span class="comment">//将C字符串作为s的初值</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(cstr)</span></span>;</span><br><span class="line"><span class="comment">//将C字符串前chars_len个字符作为字符串s的初值。</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(chars,chars_len)</span></span>;</span><br><span class="line"><span class="comment">//生成一个字符串，包含num个c字符</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(num,c)</span></span>;</span><br><span class="line"><span class="comment">//以区间beg;end(不包含end)内的字符作为字符串s的初值</span></span><br><span class="line"><span class="function">string <span class="title">s</span><span class="params">(beg,end)</span></span>;</span><br><span class="line"><span class="comment">//销毁所有字符，释放内存</span></span><br><span class="line">s.~<span class="built_in">string</span>();</span><br></pre></td></tr></table></figure><p>此外，string类还支持默认构造函数和复制构造函数，如string s1；string s2 &#x3D; “hello”；都是正确的写法。当构造的string太长而无法表达时会抛出length_error异常。</p><br/><h4 id="string类的字符操作："><a href="#string类的字符操作：" class="headerlink" title="string类的字符操作："></a>string类的字符操作：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">const</span> <span class="type">char</span> &amp;<span class="keyword">operator</span>[](<span class="type">int</span> n)<span class="type">const</span>;</span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span> &amp;<span class="title">at</span><span class="params">(<span class="type">int</span> n)</span><span class="type">const</span></span>;</span><br><span class="line"><span class="type">char</span> &amp;<span class="keyword">operator</span>[](<span class="type">int</span> n);</span><br><span class="line"><span class="function"><span class="type">char</span> &amp;<span class="title">at</span><span class="params">(<span class="type">int</span> n)</span></span>;</span><br></pre></td></tr></table></figure><p>operator[]和at()均返回当前字符串中第n个字符的位置，但at函数提供范围检查，当越界时会抛出out_of_range异常，下标运算符[]不提供检查访问。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回一个非null终止的c字符数组</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span> *<span class="title">data</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回一个以null终止的c字符串</span></span><br><span class="line"><span class="function"><span class="type">const</span> <span class="type">char</span> *<span class="title">c_str</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//把当前串中以pos开始的n个字符拷贝到以s为起始位置的字符数组中，返回实际拷贝的数目</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">copy</span><span class="params">(<span class="type">char</span> *s, <span class="type">int</span> n, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string的特性描述"><a href="#string的特性描述" class="headerlink" title="string的特性描述:"></a>string的特性描述:</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回当前容量（即string中不必增加内存即可存放的元素个数）</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">capacity</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回string对象中可存放的最大字符串的长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">max_size</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回当前字符串的大小</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">size</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回当前字符串的长度</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">length</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//当前字符串是否为空</span></span><br><span class="line"><span class="function"><span class="type">bool</span> <span class="title">empty</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//把字符串当前大小置为len，并用字符c填充不足的部分</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">resize</span><span class="params">(<span class="type">int</span> len,<span class="type">char</span> c)</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string类的输入输出操作"><a href="#string类的输入输出操作" class="headerlink" title="string类的输入输出操作:"></a>string类的输入输出操作:</h4><p>string类重载运算符operator&gt;&gt;用于输入，同样重载运算符operator&lt;&lt;用于输出操作。<br>函数getline(istream &amp;in,string &amp;s);用于从输入流in中读取字符串到s中，以换行符’\n’分开。</p><br/><h4 id="string的赋值："><a href="#string的赋值：" class="headerlink" title="string的赋值："></a>string的赋值：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把字符串s赋给当前字符串</span></span><br><span class="line">string &amp;<span class="keyword">operator</span>=(<span class="type">const</span> string &amp;s);</span><br><span class="line"><span class="comment">//用c类型字符串s赋值</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s)</span></span>;</span><br><span class="line"><span class="comment">//用c字符串s开始的n个字符赋值</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s,<span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//把字符串s赋给当前字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(<span class="type">const</span> string &amp;s)</span></span>;</span><br><span class="line"><span class="comment">//用n个字符c赋值给当前字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(<span class="type">int</span> n,<span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//把字符串s中从start开始的n个字符赋给当前字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> start,<span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//把first和last迭代器之间的部分赋给字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">assign</span><span class="params">(const_iterator first,const_itertor last)</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string的连接："><a href="#string的连接：" class="headerlink" title="string的连接："></a>string的连接：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//把字符串s连接到当前字符串的结尾 </span></span><br><span class="line">string &amp;<span class="keyword">operator</span>+=(<span class="type">const</span> string &amp;s);</span><br><span class="line"><span class="comment">//把c类型字符串s连接到当前字符串结尾</span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s)</span></span>;</span><br><span class="line"><span class="comment">//把c类型字符串s的前n个字符连接到当前字符串结尾</span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s,<span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//同operator+=()</span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(<span class="type">const</span> string &amp;s)</span></span>;</span><br><span class="line"><span class="comment">//把字符串s中从pos开始的n个字符连接到当前字符串的结尾</span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos,<span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//在当前字符串结尾添加n个字符c</span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(<span class="type">int</span> n,<span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//把迭代器first和last之间的部分连接到当前字符串的结尾 </span></span><br><span class="line"><span class="function">string &amp;<span class="title">append</span><span class="params">(const_iterator first,const_iterator last)</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string的比较："><a href="#string的比较：" class="headerlink" title="string的比较："></a>string的比较：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比较两个字符串是否相等</span></span><br><span class="line"><span class="type">bool</span> <span class="keyword">operator</span>==(<span class="type">const</span> string &amp;s1,<span class="type">const</span> string &amp;s2)<span class="type">const</span>;</span><br></pre></td></tr></table></figure><p>运算符”&gt;”,”&lt;”,”&gt;&#x3D;”,”&lt;&#x3D;”,”!&#x3D;”均被重载用于字符串的比较。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//比较当前字符串和s的大小</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">const</span> string &amp;s)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//比较当前字符串从pos开始的n个字符组成的字符串与s的大小</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> n,<span class="type">const</span> string &amp;s)</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//比较当前字符串从pos开始的n个字符组成的字符串与s中pos2开始的n2个字符组成的字符串的大小</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> n,<span class="type">const</span> string &amp;s,<span class="type">int</span> pos2,<span class="type">int</span> n2)</span><span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> n,<span class="type">const</span> <span class="type">char</span> *s)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">compare</span><span class="params">(<span class="type">int</span> pos, <span class="type">int</span> n,<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos2)</span> <span class="type">const</span></span>;</span><br></pre></td></tr></table></figure><p>compare函数在&gt;时返回1，&lt;时返回-1，&#x3D;&#x3D;时返回0</p><br/><h4 id="string的子串："><a href="#string的子串：" class="headerlink" title="string的子串："></a>string的子串：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//返回pos开始的n个字符组成的字符串</span></span><br><span class="line"><span class="function">string <span class="title">substr</span><span class="params">(<span class="type">int</span> pos = <span class="number">0</span>,<span class="type">int</span> n = npos)</span> <span class="type">const</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string的交换："><a href="#string的交换：" class="headerlink" title="string的交换："></a>string的交换：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//交换当前字符串与s2的值</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">swap</span><span class="params">(string &amp;s2)</span></span>;    </span><br></pre></td></tr></table></figure><br/><h4 id="string的查找函数："><a href="#string的查找函数：" class="headerlink" title="string的查找函数："></a>string的查找函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//从pos开始查找字符c在当前字符串的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始查找字符串s在当前串中的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始查找字符串s中前n个字符在当前串中的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos, <span class="type">int</span> n)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始查找字符串s在当前串中的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find</span><span class="params">(<span class="type">const</span> string &amp;s, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始从后向前查找字符c在当前串中的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rfind</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rfind</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rfind</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos, <span class="type">int</span> n = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">rfind</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始查找字符c第一次出现的位置</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_of</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos, <span class="type">int</span> n)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_of</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从pos开始查找当前串中第一个在s的前n个字符组成的数组里的字符的位置。查找失败返回string::npos</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_not_of</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_not_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_not_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos,<span class="type">int</span> n)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_first_not_of</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos = <span class="number">0</span>)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//从当前串中查找第一个不在串s中的字符出现的位置，失败返回string::npos</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_of</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos, <span class="type">int</span> n = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_of</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_not_of</span><span class="params">(<span class="type">char</span> c, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_not_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_not_of</span><span class="params">(<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> pos,  <span class="type">int</span> n)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">find_last_not_of</span><span class="params">(<span class="type">const</span> string &amp;s,<span class="type">int</span> pos = npos)</span> <span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//find_last_of和find_last_not_of与find_first_of和find_first_not_of相似，只不过是从后向前查找</span></span><br></pre></td></tr></table></figure><br/><h4 id="string的替换函数："><a href="#string的替换函数：" class="headerlink" title="string的替换函数："></a>string的替换函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除从p0开始的n0个字符，然后在p0处插入串s</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n0,<span class="type">const</span> <span class="type">char</span> *s)</span></span>;</span><br><span class="line"><span class="comment">//删除p0开始的n0个字符，然后在p0处插入字符串s的前n个字符</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n0,<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//删除从p0开始的n0个字符，然后在p0处插入串s</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n0,<span class="type">const</span> string &amp;s)</span></span>;</span><br><span class="line"><span class="comment">//删除p0开始的n0个字符，然后在p0处插入串s中从pos开始的n个字符</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n0,<span class="type">const</span> string &amp;s, <span class="type">int</span> pos, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//删除p0开始的n0个字符，然后在p0处插入n个字符c</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n0,<span class="type">int</span> n, <span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//把[first0，last0）之间的部分替换为字符串s</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(iterator first0, iterator last0,<span class="type">const</span> <span class="type">char</span> *s)</span></span>;</span><br><span class="line"><span class="comment">//把[first0，last0）之间的部分替换为s的前n个字符</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(iterator first0, iterator last0,<span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//把[first0，last0）之间的部分替换为串s</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(iterator first0, iterator last0,<span class="type">const</span> string &amp;s)</span></span>;</span><br><span class="line"><span class="comment">//把[first0，last0）之间的部分替换为n个字符c</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(iterator first0, iterator last0,<span class="type">int</span> n, <span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//把[first0，last0）之间的部分替换成[first，last）之间的字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">replace</span><span class="params">(iterator first0, iterator last0,const_iterator first, const_iterator last)</span></span>;</span><br></pre></td></tr></table></figure><br/><h4 id="string的插入函数："><a href="#string的插入函数：" class="headerlink" title="string的插入函数："></a>string的插入函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//前4个函数在p0位置插入字符串s中pos开始的前n个字符</span></span><br><span class="line"><span class="function">string &amp;<span class="title">insert</span><span class="params">(<span class="type">int</span> p0, <span class="type">const</span> <span class="type">char</span> *s)</span></span>;</span><br><span class="line"><span class="function">string &amp;<span class="title">insert</span><span class="params">(<span class="type">int</span> p0, <span class="type">const</span> <span class="type">char</span> *s, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="function">string &amp;<span class="title">insert</span><span class="params">(<span class="type">int</span> p0,<span class="type">const</span> string &amp;s)</span></span>;</span><br><span class="line"><span class="function">string &amp;<span class="title">insert</span><span class="params">(<span class="type">int</span> p0,<span class="type">const</span> string &amp;s, <span class="type">int</span> pos, <span class="type">int</span> n)</span></span>;</span><br><span class="line"><span class="comment">//此函数在p0处插入n个字符c</span></span><br><span class="line"><span class="function">string &amp;<span class="title">insert</span><span class="params">(<span class="type">int</span> p0, <span class="type">int</span> n, <span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//在it处插入字符c，返回插入后迭代器的位置</span></span><br><span class="line"><span class="function">iterator <span class="title">insert</span><span class="params">(iterator it, <span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//在it处插入[first，last）之间的字符</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(iterator it, const_iterator first, const_iterator last)</span></span>;</span><br><span class="line"><span class="comment">//在it处插入n个字符c</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert</span><span class="params">(iterator it, <span class="type">int</span> n, <span class="type">char</span> c)</span></span>;</span><br><span class="line"><span class="comment">//这个函数只能增加单个字符对STL熟悉的理解起来很简单</span></span><br><span class="line">s.<span class="built_in">push_back</span>(<span class="string">&#x27;a&#x27;</span>);</span><br></pre></td></tr></table></figure><br/><h4 id="string的删除函数："><a href="#string的删除函数：" class="headerlink" title="string的删除函数："></a>string的删除函数：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//删除[first，last）之间的所有字符，返回删除后迭代器的位置</span></span><br><span class="line"><span class="function">iterator <span class="title">erase</span><span class="params">(iterator first, iterator last)</span></span>;</span><br><span class="line"><span class="comment">//删除it指向的字符，返回删除后迭代器的位置</span></span><br><span class="line"><span class="function">iterator <span class="title">erase</span><span class="params">(iterator it)</span></span>;</span><br><span class="line"><span class="comment">//删除pos开始的n个字符，返回修改后的字符串</span></span><br><span class="line"><span class="function">string &amp;<span class="title">erase</span><span class="params">(<span class="type">int</span> pos = <span class="number">0</span>, <span class="type">int</span> n = npos)</span></span>;</span><br></pre></td></tr></table></figure><p>把字符串清空的方法有三个：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">string str=<span class="string">&quot;Hello World&quot;</span>;</span><br><span class="line">str=<span class="string">&quot;&quot;</span>;</span><br><span class="line">str.<span class="built_in">clear</span>();</span><br><span class="line">str.<span class="built_in">erase</span>();</span><br></pre></td></tr></table></figure><br/><h4 id="string的迭代器处理："><a href="#string的迭代器处理：" class="headerlink" title="string的迭代器处理："></a>string的迭代器处理：</h4><p>string类提供了向前和向后遍历的迭代器iterator，迭代器提供了访问各个字符的语法，类似于指针操作，迭代器不检查范围。<br>用string::iterator或string::const_iterator声明迭代器变量，const_iterator不允许改变迭代的内容。常用迭代器函数有：</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="function">const_iterator <span class="title">begin</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"> <span class="comment">//返回string的起始位置</span></span><br><span class="line"><span class="function">iterator <span class="title">begin</span><span class="params">()</span></span>;               </span><br><span class="line"><span class="function">const_iterator <span class="title">end</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"> <span class="comment">//返回string的最后一个字符后面的位置</span></span><br><span class="line"><span class="function">iterator <span class="title">end</span><span class="params">()</span></span>;                   </span><br><span class="line"><span class="function">const_iterator <span class="title">rbegin</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回string的最后一个字符后面的位置</span></span><br><span class="line"><span class="function">iterator <span class="title">rbegin</span><span class="params">()</span></span>;                </span><br><span class="line"><span class="function">const_iterator <span class="title">rend</span><span class="params">()</span><span class="type">const</span></span>;</span><br><span class="line"><span class="comment">//返回string第一个字符位置的前面</span></span><br><span class="line"><span class="function">iterator <span class="title">rend</span><span class="params">()</span></span>;                   </span><br></pre></td></tr></table></figure><p>rbegin和rend用于从后向前的迭代访问，通过设置迭代器string::reverse_iterator,string::const_reverse_iterator实现。</p><br/><h4 id="从string中删除所有某个特定字符："><a href="#从string中删除所有某个特定字符：" class="headerlink" title="从string中删除所有某个特定字符："></a>从string中删除所有某个特定字符：</h4><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line">str.<span class="built_in">erase</span>(std::<span class="built_in">remove</span>(str.<span class="built_in">begin</span>(), str.<span class="built_in">end</span>(), <span class="string">&#x27;a&#x27;</span>), str.<span class="built_in">end</span>());</span><br></pre></td></tr></table></figure><br/><h4 id="string类型转为int类型："><a href="#string类型转为int类型：" class="headerlink" title="string类型转为int类型："></a>string类型转为int类型：</h4><ol><li>使用标准库中的atoi函数</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">string str=<span class="string">&#x27;111&#x27;</span></span><br><span class="line">number = <span class="built_in">atoi</span>(str.<span class="built_in">c_str</span>());</span><br></pre></td></tr></table></figure><p>对于其他类型也都有相应的标准库函数，比如浮点型atof()，long型atol()。</p><ol start="2"><li>采用sstream头文件中定义的字符串流对象来实现转换</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造输入字符串流，流的内容初始化为“12”的字符串 </span></span><br><span class="line"><span class="function">istringstream <span class="title">is</span><span class="params">(<span class="string">&quot;12&quot;</span>)</span></span>; </span><br><span class="line"><span class="type">int</span> i; </span><br><span class="line"><span class="comment">//从is流中读入一个int整数存入i中</span></span><br><span class="line">is &gt;&gt; i; </span><br></pre></td></tr></table></figure><br/><h4 id="int类型转为string类型："><a href="#int类型转为string类型：" class="headerlink" title="int类型转为string类型："></a>int类型转为string类型：</h4><ol><li>采用标准库中的to_string函数。</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="type">int</span> i = <span class="number">12</span>; </span><br><span class="line">cout &lt;&lt; std::<span class="built_in">to_string</span>(i) &lt;&lt; endl; </span><br></pre></td></tr></table></figure><ol start="2"><li>采用sstream中定义的字符串流对象来实现</li></ol><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造一个输出字符串流，流内容为空 </span></span><br><span class="line">ostringstream os; </span><br><span class="line"><span class="type">int</span> i = <span class="number">12</span>; </span><br><span class="line"><span class="comment">//向输出字符串流中输出int整数i的内容 </span></span><br><span class="line">os &lt;&lt; i; </span><br><span class="line"><span class="comment">//利用字符串流的str函数获取流中的内容 </span></span><br><span class="line">cout &lt;&lt; os.<span class="built_in">str</span>() &lt;&lt; endl; </span><br></pre></td></tr></table></figure><p>字符串流对象的str函数对于istringstream和ostringstream都适用，都可以获取流中的内容。</p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> STL </tag>
            
            <tag> string </tag>
            
            <tag> 字符串 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的奶茶点餐系统</title>
      <link href="/2023/10/21/00009/"/>
      <url>/2023/10/21/00009/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的奶茶点餐系统，采用面向对象的思维进行设计，包含管理员和用户两个功能模块。</p><h2 id="管理员模块"><a href="#管理员模块" class="headerlink" title="管理员模块"></a>管理员模块</h2><ul><li>添加奶茶信息</li><li>删除奶茶信息</li><li>修改奶茶信息</li><li>查询奶茶信息</li><li>历史订单记录一览表</li><li>奶茶订单处理</li><li>管理用户信息</li><li>清空系统数据</li><li>注销登录</li></ul><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><ul><li>奶茶信息一览表</li><li>小程序点餐</li><li>申请退款</li><li>个人历史订单</li><li>修改密码</li><li>注销登录</li><li>用户注册</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><p>管理员菜单</p><p><img src="/img/images/00009/00009_2.png" alt="一"></p><p>奶茶信息一览表</p><p><img src="/img/images/00009/00009_3.png" alt="二"></p><p>用户订单处理</p><p><img src="/img/images/00009/00009_4.png" alt="三"></p><p>小程序点餐</p><p><img src="/img/images/00009/00009_5.png" alt="四"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_DEPRECATE</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//获取系统当前时间</span></span><br><span class="line"><span class="function"><span class="type">static</span> string <span class="title">getTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">time_t</span> t = <span class="built_in">time</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tm</span>* now = <span class="built_in">localtime</span>(&amp;t);</span><br><span class="line">std::stringstream time;</span><br><span class="line">time &lt;&lt; now-&gt;tm_year + <span class="number">1900</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mon + <span class="number">1</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mday &lt;&lt; <span class="string">&quot;_&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_hour &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_min;</span><br><span class="line"><span class="keyword">return</span> time.<span class="built_in">str</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//奶茶类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tea</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string teaName;              <span class="comment">//名称</span></span><br><span class="line">vector&lt;string&gt; ingredients;  <span class="comment">//主辅料</span></span><br><span class="line"><span class="type">int</span> num;                     <span class="comment">//主辅料的种类数量</span></span><br><span class="line">string base;                 <span class="comment">//茶底</span></span><br><span class="line"><span class="type">double</span> largePrice;           <span class="comment">//大杯的价格</span></span><br><span class="line"><span class="type">double</span> mediumPrice;          <span class="comment">//中杯的价格</span></span><br><span class="line">string description;          <span class="comment">//掌柜描述</span></span><br><span class="line"><span class="built_in">Tea</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Tea</span>(string teaName,vector&lt;string&gt; ingredients, <span class="type">int</span> num, string base, <span class="type">double</span> largePrice, <span class="type">double</span> mediumPrice, string description)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;teaName = teaName;</span><br><span class="line"><span class="keyword">this</span>-&gt;ingredients = ingredients;</span><br><span class="line"><span class="keyword">this</span>-&gt;num = num;</span><br><span class="line"><span class="keyword">this</span>-&gt;base = base;</span><br><span class="line"><span class="keyword">this</span>-&gt;largePrice = largePrice;</span><br><span class="line"><span class="keyword">this</span>-&gt;mediumPrice = mediumPrice;</span><br><span class="line"><span class="keyword">this</span>-&gt;description = description;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  <span class="string">&quot;茶底&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;大杯价格&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;中杯价格&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showTeaInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; teaName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  base;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; largePrice;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; mediumPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showTeaDetail</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t名称：&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">24</span>) &lt;&lt; teaName;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;主料：&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ingredients.<span class="built_in">size</span>(); ++i) cout&lt;&lt;ingredients[i]&lt;&lt;<span class="string">&quot; &quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t茶底：&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">24</span>) &lt;&lt; base;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;价格：&quot;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;大杯 &quot;</span>&lt;&lt;largePrice&lt;&lt;<span class="string">&quot; 元，中杯 &quot;</span>&lt;&lt;mediumPrice&lt;&lt;<span class="string">&quot; 元&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t掌柜描述：&quot;</span>&lt;&lt;description&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 人类  用户和管理员都通过这个类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;     <span class="comment">//用户名  作为主键  唯一标识</span></span><br><span class="line">string pwd;      <span class="comment">//登录系统的密码</span></span><br><span class="line"><span class="type">double</span> money;    <span class="comment">//当前消费</span></span><br><span class="line">string dotime;   <span class="comment">//注册时间</span></span><br><span class="line">string mark;     <span class="comment">//标志  mark为&quot;1&quot; 表示为管理员  mark为&quot;2&quot;表示为乘客</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(string name, string pwd, <span class="type">double</span> money, string dotime, string mark)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;pwd = pwd;</span><br><span class="line"><span class="keyword">this</span>-&gt;money = money;</span><br><span class="line"><span class="keyword">this</span>-&gt;dotime = dotime;</span><br><span class="line"><span class="keyword">this</span>-&gt;mark = mark;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出用户表的某一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPersonInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; name;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; pwd;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; money;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; dotime &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;用户名&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;密码&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;当前消费&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;注册时间&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//奶茶订单类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Order</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string id; <span class="comment">//订单号</span></span><br><span class="line">string teaName; <span class="comment">//奶茶名称</span></span><br><span class="line">string cupSize; <span class="comment">//规格：大杯 中杯</span></span><br><span class="line"><span class="type">double</span> price;   <span class="comment">//价格</span></span><br><span class="line">string sugar;   <span class="comment">//甜度：全糖  七分糖  五分糖  去糖</span></span><br><span class="line">string tem;     <span class="comment">//温度：正常冰  少冰  常温  热</span></span><br><span class="line"><span class="type">int</span> cupNum;     <span class="comment">//杯数</span></span><br><span class="line">string buyer;    <span class="comment">//订购者</span></span><br><span class="line">string buytime;  <span class="comment">//订购时间</span></span><br><span class="line">string state;    <span class="comment">//出餐状态</span></span><br><span class="line"><span class="built_in">Order</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Order</span>(string id, string teaName, string cupSize, <span class="type">double</span> price, string sugar, string tem, <span class="type">int</span> cupNum, string buyer, string buytime, string state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;id = id;</span><br><span class="line"><span class="keyword">this</span>-&gt;teaName = teaName;</span><br><span class="line"><span class="keyword">this</span>-&gt;cupSize = cupSize;</span><br><span class="line"><span class="keyword">this</span>-&gt;price = price;</span><br><span class="line"><span class="keyword">this</span>-&gt;sugar = sugar;</span><br><span class="line"><span class="keyword">this</span>-&gt;tem = tem;</span><br><span class="line"><span class="keyword">this</span>-&gt;cupNum = cupNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;buyer = buyer;</span><br><span class="line"><span class="keyword">this</span>-&gt;buytime = buytime;</span><br><span class="line"><span class="keyword">this</span>-&gt;state = state;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Order</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;订单号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt;  <span class="string">&quot;奶茶名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;规格&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;单价&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;甜度&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;温度&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;杯数&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;订购者&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;订购时间&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;出餐状态&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showOrderInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; id;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; teaName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; cupSize;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; price;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; sugar;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; tem;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; cupNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; buyer;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; buytime;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; state &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//奶茶点餐系统类 </span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">TeaSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Tea&gt; ts;</span><br><span class="line">vector&lt;Order&gt; os;</span><br><span class="line">vector&lt;Person&gt; ps;</span><br><span class="line">Person admin;</span><br><span class="line"></span><br><span class="line"><span class="built_in">TeaSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">TeaSystem</span>(vector&lt;Tea&gt; ts, vector&lt;Order&gt; os, vector&lt;Person&gt; ps, Person admin)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;ts = ts;</span><br><span class="line"><span class="keyword">this</span>-&gt;os = os;</span><br><span class="line"><span class="keyword">this</span>-&gt;ps = ps;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin = admin;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">TeaSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置管理员的账号密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAdmin</span><span class="params">(string name, string pwd, string mark, string dotime, <span class="type">double</span> money)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.pwd = pwd;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.mark = mark;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.dotime = dotime;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.money = money;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//登录菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t************欢迎来到蜜雪冰城****************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t你可以进行以下操作:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             1   管理员登录               |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             2   用户登录                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             3   用户注册                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             0   退出                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">reg</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注册函数：乘客通过reg函数注册</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t请填写用户信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t用户名：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; p.name;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ps.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == ps[i].name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t该用户名已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line">p.money = <span class="number">0</span>;</span><br><span class="line">p.dotime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line">ps.<span class="built_in">push_back</span>(p);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t注册成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录函数：用户和管理员都通过login函数登录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">login</span><span class="params">(string sel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = sel;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t请填写用户信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入用户名：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.name;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line"><span class="keyword">if</span>(p.mark == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == <span class="keyword">this</span>-&gt;admin.name &amp;&amp; p.pwd == <span class="keyword">this</span>-&gt;admin.pwd)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t管理员登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(admin);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p.mark == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;ps.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == ps[i].name &amp;&amp; p.pwd == ps[i].pwd)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t用户登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//顾客菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pMenu</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t**********欢迎来到蜜雪冰城点餐系统**********&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        1   奶茶信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        2   小程序点餐                    |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        3   申请退款                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        4   个人历史订单                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        5   修改密码                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-5】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-5】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayList</span>(); <span class="comment">//奶茶信息一览表</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">order</span>(p);  <span class="comment">//小程序点餐</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">refund</span>(p);       <span class="comment">//申请退款</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">myOrders</span>(p);       <span class="comment">//个人历史订单</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updatePwd</span>(p);  <span class="comment">//修改密码</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)     <span class="comment">//注销登录</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">aMenu</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t*********欢迎来到蜜雪冰城后台管理系统**************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               1   添加奶茶信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               2   删除奶茶信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               3   修改奶茶信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               4   查询奶茶信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               5   奶茶信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               6   历史订单记录一览表            |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               7   奶茶订单处理                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               8   管理用户信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               9   清空系统数据                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-9】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span> &amp;&amp; sel != <span class="string">&quot;9&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-9】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayOrders</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">manageOrders</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">manageUsers</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;9&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">aMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//读取文件book.txt  对应容器 bs</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;tea.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> tn = <span class="number">0</span>; <span class="comment">//用来接收奶茶种类数量的值</span></span><br><span class="line">ifs &gt;&gt; tn;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tn; i++)</span><br><span class="line">&#123;</span><br><span class="line">Tea t;</span><br><span class="line">ifs &gt;&gt; t.teaName &gt;&gt; t.num &gt;&gt; t.base &gt;&gt; t.largePrice &gt;&gt; t.mediumPrice &gt;&gt; t.description;</span><br><span class="line">string str;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; t.num; j++)</span><br><span class="line">&#123;</span><br><span class="line">ifs &gt;&gt; str;</span><br><span class="line">t.ingredients.<span class="built_in">push_back</span>(str);</span><br><span class="line">&#125;</span><br><span class="line">ts.<span class="built_in">push_back</span>(t);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//读取文件person.txt  对应容器 ps</span></span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> pn = <span class="number">0</span>; <span class="comment">//用来接收系统中注册人数的值</span></span><br><span class="line">jfs &gt;&gt; pn;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; pn; i++)</span><br><span class="line">&#123;</span><br><span class="line">Person p;</span><br><span class="line">jfs &gt;&gt; p.name &gt;&gt; p.pwd &gt;&gt; p.money &gt;&gt; p.dotime &gt;&gt; p.mark;</span><br><span class="line">ps.<span class="built_in">push_back</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">jfs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件order.txt  对应容器 os</span></span><br><span class="line">ifstream kfs;</span><br><span class="line">kfs.<span class="built_in">open</span>(<span class="string">&quot;order.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>; <span class="comment">//用来接收系统中订单的数量</span></span><br><span class="line">kfs &gt;&gt; cnt;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; cnt; i++)</span><br><span class="line">&#123;</span><br><span class="line">Order o;</span><br><span class="line">kfs &gt;&gt; o.id &gt;&gt; o.teaName &gt;&gt; o.cupSize &gt;&gt; o.price &gt;&gt; o.sugar &gt;&gt; o.tem &gt;&gt; o.buyer &gt;&gt; o.buytime &gt;&gt; o.state;</span><br><span class="line">os.<span class="built_in">push_back</span>(o);</span><br><span class="line">&#125;</span><br><span class="line">kfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//写入文件book.txt  对应容器 bs</span></span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;tea.txt&quot;</span>, ios::out);</span><br><span class="line">ofs &lt;&lt; ts.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入图书数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">ofs &lt;&lt; ts[i].teaName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ts[i].num &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ts[i].base &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">    &lt;&lt; ts[i].largePrice &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ts[i].mediumPrice &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ts[i].description &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ts[i].ingredients.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; ts[i].ingredients[j] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件person.txt  对应容器 ps</span></span><br><span class="line">ofstream pfs;</span><br><span class="line">pfs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::out);</span><br><span class="line">pfs &lt;&lt; ps.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入用户数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ps.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; ps[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ps[i].pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ps[i].money &lt;&lt; <span class="string">&quot; &quot;</span></span><br><span class="line">    &lt;&lt; ps[i].dotime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; ps[i].mark &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">pfs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件order.txt  对应容器 os</span></span><br><span class="line">ofstream qfs;</span><br><span class="line">qfs.<span class="built_in">open</span>(<span class="string">&quot;order.txt&quot;</span>, ios::out);</span><br><span class="line">qfs &lt;&lt; os.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入订单数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">qfs &lt;&lt; os[i].id &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].teaName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].cupSize &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].price</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].sugar &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].tem &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].buyer &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].buytime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; os[i].state &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">qfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//添加奶茶信息 ：</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到添加奶茶信息功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加奶茶信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t开始信息录入：&quot;</span>&lt;&lt;endl;</span><br><span class="line">Tea t;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t奶茶名称：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; t.teaName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t.teaName == ts[i].teaName)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t系统中已存在该奶茶信息，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入配料信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">string option = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(option == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string st;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; k + <span class="number">1</span> &lt;&lt; <span class="string">&quot;种配料：&quot;</span>;</span><br><span class="line">k++;</span><br><span class="line">cin &gt;&gt; st;</span><br><span class="line">t.ingredients.<span class="built_in">push_back</span>(st);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; k &lt;&lt; <span class="string">&quot;种配料添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line"><span class="keyword">while</span>(option != <span class="string">&quot;0&quot;</span> &amp;&amp; option != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">t.num = t.ingredients.<span class="built_in">size</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t奶茶茶底：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.base;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t大杯价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.largePrice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t中杯价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.mediumPrice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t掌柜描述：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.description;</span><br><span class="line">ts.<span class="built_in">push_back</span>(t);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t奶茶信息添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到删除奶茶信息功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t奶茶信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseTea1</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按奶茶名称删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的奶茶名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Tea&gt;::iterator it = ts.<span class="built_in">begin</span>(); it != ts.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;teaName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t&quot;</span>&lt;&lt; keyName &lt;&lt; <span class="string">&quot;的信息如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">100</span>);</span><br><span class="line">it-&gt;<span class="built_in">showTeaDetail</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">100</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该奶茶信息？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ts.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到该奶茶信息，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改奶茶信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*****************************************欢迎来到修改奶茶信息功能*********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t奶茶信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseTea1</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按奶茶名称修改&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改奶茶的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ts[i].teaName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改奶茶当前信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">ts[i].<span class="built_in">showTeaDetail</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">Tea t = ts[i];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的奶茶名称：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; t.teaName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ts.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(t.teaName == ts[j].teaName &amp;&amp; i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t系统中已存在该奶茶信息，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的配料信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line">string option = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(option == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string st;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; k + <span class="number">1</span> &lt;&lt; <span class="string">&quot;种配料：&quot;</span>;</span><br><span class="line">k++;</span><br><span class="line">cin &gt;&gt; st;</span><br><span class="line">t.ingredients.<span class="built_in">push_back</span>(st);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; k &lt;&lt; <span class="string">&quot;种配料添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line"><span class="keyword">while</span>(option != <span class="string">&quot;0&quot;</span> &amp;&amp; option != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">t.num = t.ingredients.<span class="built_in">size</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的茶底：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.base;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的大杯价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.largePrice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的中杯价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.mediumPrice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的掌柜描述：&quot;</span>;</span><br><span class="line">cin &gt;&gt; t.description;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ts[i] = t;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到该奶茶信息，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询奶茶信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*****************************************欢迎来到查询奶茶信息功能*********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按奶茶名称查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 按奶茶茶底查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询奶茶的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ts[i].teaName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span> &lt;&lt; keyName &lt;&lt; <span class="string">&quot;详细信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">ts[i].<span class="built_in">showTeaDetail</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此奶茶相关信息！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyBase;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询奶茶的茶底：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyBase;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ts[i].base == keyBase)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">ts[i].<span class="built_in">showTeaDetail</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) <span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此奶茶相关信息！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历奶茶容器 输出方式采用格式1 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseTea1</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">55</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Tea::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">55</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">ts[i].<span class="built_in">showTeaInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">55</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历奶茶容器 输出方式采用格式2</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseTea2</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">ts[i].<span class="built_in">showTeaDetail</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出横线 n代表长度 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">line</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; ++i) cout&lt;&lt;<span class="string">&quot;-&quot;</span>;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历订单容器 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">os[i].<span class="built_in">showOrderInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历用户信息 主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseUsers</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Person::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ps.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">ps[i].<span class="built_in">showPersonInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//奶茶信息一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************************欢迎来到奶茶信息一览表**********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t奶茶信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseTea2</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">// 历史订单记录一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t****************************************欢迎来到历史订单记录一览表********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t历史订单记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseOrders</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//处理订单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">manageOrders</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************************欢迎来到订单处理功能*********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t当前未出餐订单如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(os[i].state == <span class="string">&quot;未出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">os[i].<span class="built_in">showOrderInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 处理订单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待处理的订单号：&quot;</span>;</span><br><span class="line">string keyId;</span><br><span class="line">cin&gt;&gt;keyId;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(os[i].id == keyId &amp;&amp; os[i].state == <span class="string">&quot;已出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该订单已出餐，无需重复处理！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(os[i].id == keyId &amp;&amp; os[i].state == <span class="string">&quot;未出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t待处理订单信息如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">os[i].<span class="built_in">showOrderInfo</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否立即出餐？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">os[i].state = <span class="string">&quot;已出餐&quot;</span>;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t出餐成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t系统中无法查询到该订单信息！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//管理用户功能：包含添加新用户和删除用户  管理员特有权限</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">manageUsers</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到管理用户功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t普通用户信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseUsers</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加新用户&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 删除用户&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入用户名：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; p.name;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ps.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == ps[i].name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该用户名已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line">p.money = <span class="number">0</span>;</span><br><span class="line">p.dotime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line">p.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">ps.<span class="built_in">push_back</span>(p);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t添加成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的用户名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (vector&lt;Person&gt;::iterator it = ps.<span class="built_in">begin</span>(); it != ps.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;name == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除用户的基本信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Person::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showPersonInfo</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">60</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该用户？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ps.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t查无此人，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//小程序点餐 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">order</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*******************************************欢迎来到小程序点餐功能*********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t本店有以下口味的饮品：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseTea1</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 点餐&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Order o;</span><br><span class="line">Tea t;</span><br><span class="line">string keyName;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入想订购的奶茶名称：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cin&gt;&gt;keyName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ts.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ts[i].teaName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">ts[i].<span class="built_in">showTeaDetail</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">110</span>);</span><br><span class="line">o.teaName = keyName;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t请选择规格(大杯 中杯)：&quot;</span>;</span><br><span class="line">cin &gt;&gt; o.cupSize;</span><br><span class="line"><span class="keyword">while</span>(o.cupSize != <span class="string">&quot;大杯&quot;</span> &amp;&amp; o.cupSize != <span class="string">&quot;中杯&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入非法！请重新选择：&quot;</span>;</span><br><span class="line">cin &gt;&gt; o.cupSize;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(o.cupSize == <span class="string">&quot;大杯&quot;</span>) o.price = ts[i].largePrice;</span><br><span class="line"><span class="keyword">else</span> o.price = ts[i].mediumPrice;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t请选择甜度(全糖 七分糖 五分糖 去糖)：&quot;</span>;</span><br><span class="line">cin &gt;&gt; o.sugar;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t请选择温度(正常冰 少冰 常温 热)：&quot;</span>;</span><br><span class="line">cin &gt;&gt; o.tem;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t请输入订购杯数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; o.cupNum;</span><br><span class="line">o.buyer = p.name;</span><br><span class="line">o.state = <span class="string">&quot;未出餐&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>&lt;&lt;o.cupNum&lt;&lt;<span class="string">&quot;杯&quot;</span> &lt;&lt; ts[i].teaName&lt;&lt; <span class="string">&quot;，共计&quot;</span> &lt;&lt; o.price * o.cupNum &lt;&lt; <span class="string">&quot;元，是否确认下单？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">o.buytime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line"><span class="keyword">if</span>(os.<span class="built_in">size</span>() &gt; <span class="number">0</span>) o.id = <span class="built_in">to_string</span>(<span class="built_in">atoi</span>(os.<span class="built_in">back</span>().id.<span class="built_in">c_str</span>()) + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">else</span> o.id = <span class="built_in">to_string</span>(os.<span class="built_in">size</span>() + <span class="number">1</span>);</span><br><span class="line">os.<span class="built_in">push_back</span>(o);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t下单成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t抱歉！本店没有该种饮品！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//申请退款 </span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">refund</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*******************************************欢迎来到申请退款功能********************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t您可以选择您未出餐的订单进行退订及申请退款，您未出餐的订单如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(os[i].buyer == p.name &amp;&amp; os[i].state == <span class="string">&quot;未出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">os[i].<span class="built_in">showOrderInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 申请退款&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Order o;</span><br><span class="line">Tea t;</span><br><span class="line">string keyId;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入想申请退款的订单号：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cin&gt;&gt;keyId;</span><br><span class="line"><span class="keyword">for</span>(vector&lt;Order&gt;::iterator it = os.<span class="built_in">begin</span>(); it != os.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(it-&gt;id == keyId &amp;&amp; it-&gt;state == <span class="string">&quot;未出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t您这一单的信息如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showOrderInfo</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t是否确认申请退款？（1 是 0 否）&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> temp = (it-&gt;price) * (it-&gt;cupNum);</span><br><span class="line">os.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t退款成功！&quot;</span>&lt;&lt; temp &lt;&lt; <span class="string">&quot;元已到账！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(it-&gt;id == keyId &amp;&amp; it-&gt;state == <span class="string">&quot;已出餐&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t抱歉，已出餐订单无法退款！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t抱歉！您的历史订单记录中没有该订单相关信息，请检查是否输入有误！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//个人历史订单记录一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">myOrders</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*************************************欢迎来到个人历史订单记录一览表****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t个人历史订单记录一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Order::<span class="built_in">showHeader</span>();</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; os.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(os[i].buyer == p.name)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">os[i].<span class="built_in">showOrderInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">line</span>(<span class="number">107</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改用户密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updatePwd</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t**************************************欢迎来到修改密码功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 修改密码&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t输入当前密码：&quot;</span>;</span><br><span class="line">string tmpPwd;</span><br><span class="line">cin&gt;&gt;tmpPwd;</span><br><span class="line"><span class="keyword">while</span>(tmpPwd != p.pwd)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入错误，请重新输入：&quot;</span>;</span><br><span class="line">cin&gt;&gt;tmpPwd;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入新密码：&quot;</span>;</span><br><span class="line">string newPwd;</span><br><span class="line">cin&gt;&gt;newPwd;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; ps.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(ps[i].name == p.name &amp;&amp; ps[i].pwd == p.pwd)</span><br><span class="line">&#123;</span><br><span class="line">ps[i].pwd = newPwd;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t修改成功！自动返回登录界面！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空系统所有数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到清空系统数据功能***************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">ts.<span class="built_in">clear</span>();</span><br><span class="line">ps.<span class="built_in">clear</span>();</span><br><span class="line">os.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">TeaSystem tst;</span><br><span class="line"><span class="comment">//设置管理员账号：admin  密码：123 后三个参数为默认参数</span></span><br><span class="line">tst.<span class="built_in">setAdmin</span>(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;123&quot;</span>, <span class="string">&quot;1&quot;</span>, Tool::<span class="built_in">getTime</span>(), <span class="number">0</span>); </span><br><span class="line">tst.<span class="built_in">init</span>(); <span class="comment">//初始化</span></span><br><span class="line">tst.<span class="built_in">menu</span>(); <span class="comment">//登录菜单</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可（系统管理员默认账号：admin  密码：123）。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>求一个正整数的因子个数</title>
      <link href="/2023/10/21/00008/"/>
      <url>/2023/10/21/00008/</url>
      
        <content type="html"><![CDATA[<h5 id="Question"><a href="#Question" class="headerlink" title="Question:"></a>Question:</h5><p>求正整数N的因子个数。</p><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//计算并返回正整数n的因子个数</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">long</span> <span class="type">long</span> ll;</span><br><span class="line"><span class="function">ll <span class="title">f</span><span class="params">(ll n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i * i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">if</span> (i * i != n) ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ll N = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; N;</span><br><span class="line">cout &lt;&lt; <span class="built_in">f</span>(N) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h5 id="Question-1"><a href="#Question-1" class="headerlink" title="Question:"></a>Question:</h5><p>给定正整数 N，求一共有多少组 (A, B, C) 满足 A × B + C &#x3D; N。<br>其中 1 ≤ A, B, C ≤ N，且为正整数，注意 (1, 2, 1) 和 (2, 1, 1) 不相同。<br>时间限制：300ms</p><h5 id="输入："><a href="#输入：" class="headerlink" title="输入："></a>输入：</h5><p>一行，一个正整数 N (1 ≤ N ≤ 10^6)。</p><h5 id="输出："><a href="#输出：" class="headerlink" title="输出："></a>输出：</h5><p>一行，一个整数，表示答案。</p><h5 id="样例1："><a href="#样例1：" class="headerlink" title="样例1："></a>样例1：</h5><h6 id="输入：-1"><a href="#输入：-1" class="headerlink" title="输入："></a>输入：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h6 id="输出：-1"><a href="#输出：-1" class="headerlink" title="输出："></a>输出：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><h5 id="样例2："><a href="#样例2：" class="headerlink" title="样例2："></a>样例2：</h5><h6 id="输入：-2"><a href="#输入：-2" class="headerlink" title="输入："></a>输入：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">100</span></span><br></pre></td></tr></table></figure><h6 id="输出：-2"><a href="#输出：-2" class="headerlink" title="输出："></a>输出：</h6><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">473</span></span><br></pre></td></tr></table></figure><h5 id="Solution"><a href="#Solution" class="headerlink" title="Solution:"></a>Solution:</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> N, ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; N;</span><br><span class="line"><span class="keyword">while</span> (N--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i * i &lt;= N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (N % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">ans++;</span><br><span class="line"><span class="keyword">if</span> (i * i != N) ans++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><h5 id="Another-solution"><a href="#Another-solution" class="headerlink" title="Another solution:"></a>Another solution:</h5><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">int</span> n, ans;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">ans += n / i;</span><br><span class="line"><span class="keyword">if</span>(n % i == <span class="number">0</span>) ans--;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; ans &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 算法 </tag>
            
            <tag> 程序设计 </tag>
            
            <tag> 循环 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客实现音乐和视频页面</title>
      <link href="/2023/10/21/00007/"/>
      <url>/2023/10/21/00007/</url>
      
        <content type="html"><![CDATA[<p>安装插件步骤略！</p><h2 id="Hexo博客实现音乐页面的步骤："><a href="#Hexo博客实现音乐页面的步骤：" class="headerlink" title="Hexo博客实现音乐页面的步骤："></a>Hexo博客实现音乐页面的步骤：</h2><ol><li>添加以下代码至音乐页面对应的markdown文档中。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&#123;% meting &quot;8811230296&quot; &quot;netease&quot; &quot;playlist&quot; &quot;autoplay&quot; &quot;mutex:false&quot; &quot;listmaxheight:400px&quot; &quot;preload:none&quot; &quot;theme:\#2980b9&quot;%&#125;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginwidth</span>=<span class="string">&quot;0&quot;</span> <span class="attr">marginheight</span>=<span class="string">&quot;0&quot;</span> <span class="attr">width</span>=<span class="string">100%</span> <span class="attr">height</span>=<span class="string">500</span> <span class="attr">src</span>=<span class="string">&quot;//music.163.com/outchain/player?type=0&amp;id=8811230296&amp;auto=1&amp;height=430&quot;</span>&gt;</span><span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ul><li><p>歌单id: “8811230296”，可以在网易云音乐的网页版网址中获取。</p></li><li><p>音乐平台: “netease”代表网易云音乐。</p></li></ul><br/><h2 id="Hexo博客实现视频页面的步骤："><a href="#Hexo博客实现视频页面的步骤：" class="headerlink" title="Hexo博客实现视频页面的步骤："></a>Hexo博客实现视频页面的步骤：</h2><ol><li>获取视频的iframe链接。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=3159546&amp;bvid=BV1Ts411d7tW&amp;cid=4974791&amp;p=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="2"><li>调整视频的播放器的尺寸。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:relative; width:100%; height:0; padding-bottom:75%;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=3159546&amp;bvid=BV1Ts411d7tW&amp;cid=4974791&amp;p=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute; width:100%; height:100%; left:0; top:0;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br></pre></td></tr></table></figure><ol start="3"><li>复制以下代码到视频页面对应的markdown文档中。</li></ol><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">&#123;% raw %&#125;</span><br><span class="line"><span class="tag">&lt;<span class="name">div</span> <span class="attr">style</span>=<span class="string">&quot;position:relative; width:100%; height:0; padding-bottom:75%;&quot;</span>&gt;</span><span class="tag">&lt;<span class="name">iframe</span> <span class="attr">src</span>=<span class="string">&quot;//player.bilibili.com/player.html?aid=3159546&amp;bvid=BV1Ts411d7tW&amp;cid=4974791&amp;p=1&quot;</span> <span class="attr">scrolling</span>=<span class="string">&quot;no&quot;</span> <span class="attr">border</span>=<span class="string">&quot;0&quot;</span> <span class="attr">frameborder</span>=<span class="string">&quot;no&quot;</span> <span class="attr">framespacing</span>=<span class="string">&quot;0&quot;</span> <span class="attr">allowfullscreen</span>=<span class="string">&quot;true&quot;</span> <span class="attr">style</span>=<span class="string">&quot;position:absolute; width:100%; height:100%; left:0; top:0;&quot;</span>&gt;</span> <span class="tag">&lt;/<span class="name">iframe</span>&gt;</span><span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">&#123;% endraw %&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> Hexo博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>链表的常用操作实现及测试</title>
      <link href="/2023/10/21/00006/"/>
      <url>/2023/10/21/00006/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C语言实现的顺序表，包含以下功能模块：</p><ul><li><p>创建并初始化单链表</p></li><li><p>节点插入</p></li><li><p>节点删除</p></li><li><p>节点查询</p></li><li><p>节点修改</p></li><li><p>链表排序</p></li><li><p>链表的遍历</p></li><li><p>反转链表</p></li><li><p>合并两个有序链表，使新链表仍保持有序</p></li><li><p>删除单链表中的重复元素</p></li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//带头节点的单链表的常用操作实现及测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数据结构</span></span><br><span class="line"><span class="comment">//定义元素类型为int</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType;</span><br><span class="line"><span class="comment">//线性表的链式存储结构定义</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span> <span class="title">LNode</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElemType data;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">LNode</span>* <span class="title">next</span>;</span></span><br><span class="line">&#125; LNode, * LinkList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line">LinkList <span class="title function_">Create_LinkList</span><span class="params">(<span class="type">int</span> n)</span>;                      <span class="comment">//1  创建及初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_LinkList</span><span class="params">(LinkList L)</span>;                      <span class="comment">//2  遍历及输出</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Insert_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span>;   <span class="comment">//3  节点插入</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Delete_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType* e)</span>;  <span class="comment">//4  节点删除</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Locate_LinkList</span><span class="params">(LinkList L, ElemType e)</span>;          <span class="comment">//5  节点按值查询</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Modify_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span>;   <span class="comment">//6  节点按位置修改</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetPosition_LinkList</span><span class="params">(LinkList L, ElemType e)</span>;     <span class="comment">//7  获取正确的有序插入位置</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DuplicateRemoveLinkList</span><span class="params">(LinkList L)</span>;             <span class="comment">//8  链表去重</span></span><br><span class="line">LinkList <span class="title function_">ReverseLinkList</span><span class="params">(LinkList L)</span>;                 <span class="comment">//9  反转链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BubbleSort_LinkList</span><span class="params">(LinkList L)</span>;                 <span class="comment">//10 链表排序--冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort_LinkList</span><span class="params">(LinkList L)</span>;                 <span class="comment">//11 链表排序--直接选择排序</span></span><br><span class="line">LNode* <span class="title function_">Merge</span><span class="params">(LNode* head1, LNode* head2)</span>;             <span class="comment">//12 链表有序归并</span></span><br><span class="line">LinkList <span class="title function_">MergeSort_LinkList</span><span class="params">(LinkList L)</span>;              <span class="comment">//13 链表排序--自底向上归并排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Count_LinkList</span><span class="params">(LinkList L, ElemType x)</span>;           <span class="comment">//14 计算单链表L中数据域值为一个指定值x的节点个数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test1</span><span class="params">()</span>;                                         <span class="comment">//15 测试1 检验单链表的基本操作</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test2</span><span class="params">()</span>;                                         <span class="comment">//16 测试2 检验链表的有序归并</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test3</span><span class="params">()</span>;                                         <span class="comment">//17 测试3 检验链表去重</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span>;                                          <span class="comment">//18 主菜单</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数实现</span></span><br><span class="line"><span class="comment">//功能1 单链表的创建及初始化</span></span><br><span class="line"><span class="comment">//尾插法建立带头节点的单链表L，输入n个元素的值</span></span><br><span class="line">LinkList <span class="title function_">Create_LinkList</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p, * q;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">LNode* L = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="comment">//先建立一个带头节点的单链表</span></span><br><span class="line">L-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="comment">//q的初始值指向头节点</span></span><br><span class="line">q = L;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入单链表各元素的值：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//生成新节点</span></span><br><span class="line">p = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="comment">//输入元素值</span></span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p-&gt;data);</span><br><span class="line"><span class="comment">//将该节点插入到表尾</span></span><br><span class="line">p-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">q-&gt;next = p;</span><br><span class="line">q = p;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能2 单链表的遍历及输出</span></span><br><span class="line"><span class="comment">//打印单链表L中各元素的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Print_LinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n输出单链表中各元素的值：&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p-&gt;data);</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能3 单链表的节点插入</span></span><br><span class="line"><span class="comment">//在带头节点的单链表L中第i个位置之前插入元素e，成功返回1，失败返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Insert_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p = L;</span><br><span class="line"><span class="type">int</span>  j = <span class="number">1</span>;</span><br><span class="line"><span class="comment">//寻找第i个节点</span></span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; j &lt; i)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//i值不合法，返回0</span></span><br><span class="line"><span class="keyword">if</span> (!p || j &gt; i)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="comment">//生成新节点</span></span><br><span class="line">LNode* s = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line"><span class="comment">//生成新节点</span></span><br><span class="line">s-&gt;data = e;</span><br><span class="line">s-&gt;next = p-&gt;next;</span><br><span class="line">p-&gt;next = s;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能4 单链表的节点删除</span></span><br><span class="line"><span class="comment">//在带头节点的单链表L中删除第i个元素，并由e返回其值，成功返回1，失败返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Delete_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">1</span>;</span><br><span class="line">LNode* p = L;</span><br><span class="line"><span class="comment">//该循环执行i-1次，循环结束p指向第i-1个元素</span></span><br><span class="line"><span class="comment">//寻找第i个节点，并令p指向其前趋</span></span><br><span class="line"><span class="keyword">while</span> (p-&gt;next &amp;&amp; j &lt; i)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">j++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//删除位置不合理</span></span><br><span class="line"><span class="keyword">if</span> (!(p-&gt;next) || j &gt; i)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">LNode* q = p-&gt;next;</span><br><span class="line"><span class="comment">//用e返回被删节点数据域的值</span></span><br><span class="line">*e = q-&gt;data;</span><br><span class="line">p-&gt;next = q-&gt;next;</span><br><span class="line"><span class="comment">//删除并释放节点</span></span><br><span class="line"><span class="built_in">free</span>(q);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能5 单链表的节点按值查询</span></span><br><span class="line"><span class="comment">//在带头节点的单链表L中按值查询指定元素的位置，查询成功，则返回位置i，否则返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Locate_LinkList</span><span class="params">(LinkList L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line">LNode* p = L;</span><br><span class="line"><span class="keyword">while</span> (p &amp;&amp; p-&gt;data != e)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!p)  <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span>  <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能6 单链表的节点按位置修改</span></span><br><span class="line"><span class="comment">//在带头节点的单链表L中修改第i个位置元素的值</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Modify_LinkList</span><span class="params">(LinkList L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p = L;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (j++ &lt; i &amp;&amp; p)</span><br><span class="line">&#123;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//i值不合法，修改失败，返回0</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; <span class="number">1</span> || p == <span class="literal">NULL</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">p-&gt;data = e;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能7 获取单链表有序插入节点的正确位置</span></span><br><span class="line"><span class="comment">//已知节点数据e，将其插入到有序单链表L中，并使其仍保持有序，获取插入位置</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">GetPosition_LinkList</span><span class="params">(LinkList L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p = L;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (p-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span> (e &lt;= (p-&gt;next-&gt;data)) <span class="keyword">return</span> t;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果e比链表最后一个元素都大，那么返回的位置是t+1</span></span><br><span class="line"><span class="keyword">return</span> t + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能8 去除单链表L中的重复元素</span></span><br><span class="line"><span class="comment">//将单链表L中的重复元素删除，相同元素保留靠左边的</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DuplicateRemoveLinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p, * q;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">q = p;</span><br><span class="line"><span class="keyword">while</span> (q-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//删除q这个节点</span></span><br><span class="line"><span class="keyword">if</span> (p-&gt;data == q-&gt;next-&gt;data)</span><br><span class="line">&#123;</span><br><span class="line">LNode* tem = q-&gt;next;</span><br><span class="line"><span class="comment">//删除q-&gt;next这个节点</span></span><br><span class="line">q-&gt;next = q-&gt;next-&gt;next;</span><br><span class="line"><span class="built_in">free</span>(tem);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">q = q-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能9 反转单链表L的各个元素</span></span><br><span class="line"><span class="comment">//反转带头节点的单链表L的各个元素，如 head-&gt;1-&gt;2-&gt;3-&gt;NULL 变为 NULL&lt;-1&lt;-2&lt;-3&lt;-head</span></span><br><span class="line">LinkList <span class="title function_">ReverseLinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* head = L-&gt;next;</span><br><span class="line">LNode* prev = <span class="literal">NULL</span>;</span><br><span class="line">LNode* curr = head;</span><br><span class="line"><span class="keyword">while</span> (curr)</span><br><span class="line">&#123;</span><br><span class="line">LNode* next = curr-&gt;next;</span><br><span class="line">curr-&gt;next = prev;</span><br><span class="line">prev = curr;</span><br><span class="line">curr = next;</span><br><span class="line">&#125;</span><br><span class="line">L-&gt;next = prev;</span><br><span class="line"><span class="keyword">return</span> L;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能10 链表递增排序--冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">BubbleSort_LinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (L == <span class="literal">NULL</span> || L-&gt;next == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">LNode* p = <span class="literal">NULL</span>, * q = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (p = L-&gt;next; p-&gt;next != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (q = L-&gt;next; q-&gt;next != <span class="literal">NULL</span>; q = q-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q-&gt;data &gt; q-&gt;next-&gt;data)</span><br><span class="line">&#123;</span><br><span class="line">ElemType temp = q-&gt;data;</span><br><span class="line">q-&gt;data = q-&gt;next-&gt;data;</span><br><span class="line">q-&gt;next-&gt;data = temp;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能11 链表递增排序--直接选择排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SelectSort_LinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (L == <span class="literal">NULL</span> || L-&gt;next == <span class="literal">NULL</span>) <span class="keyword">return</span>;</span><br><span class="line">LNode* p = <span class="literal">NULL</span>, * q = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">for</span> (p = L-&gt;next; p-&gt;next != <span class="literal">NULL</span>; p = p-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (q = p-&gt;next; q != <span class="literal">NULL</span>; q = q-&gt;next)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;data &gt; q-&gt;data)</span><br><span class="line">&#123;</span><br><span class="line">ElemType temp = p-&gt;data;</span><br><span class="line">p-&gt;data = q-&gt;data;</span><br><span class="line">q-&gt;data = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能12 合并两个有序链表，并使新链表仍保持有序</span></span><br><span class="line"><span class="comment">//归并排序中会调用该函数</span></span><br><span class="line">LNode* <span class="title function_">Merge</span><span class="params">(LNode* head1, LNode* head2)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* dummyHead = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">dummyHead-&gt;data = <span class="number">0</span>;</span><br><span class="line">LNode* temp = dummyHead, * temp1 = head1, * temp2 = head2;</span><br><span class="line"><span class="keyword">while</span> (temp1 != <span class="literal">NULL</span> &amp;&amp; temp2 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (temp1-&gt;data &lt;= temp2-&gt;data)</span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;next = temp1;</span><br><span class="line">temp1 = temp1-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;next = temp2;</span><br><span class="line">temp2 = temp2-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">temp = temp-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (temp1 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;next = temp1;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (temp2 != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">temp-&gt;next = temp2;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dummyHead-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能13 链表递增排序--自底向上归并排序</span></span><br><span class="line">LinkList <span class="title function_">MergeSort_LinkList</span><span class="params">(LinkList L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//head是首元节点</span></span><br><span class="line">LNode* head = L-&gt;next;</span><br><span class="line"><span class="keyword">if</span> (head == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> head;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> length = <span class="number">0</span>;</span><br><span class="line">LNode* node = head;</span><br><span class="line"><span class="comment">//计算表长</span></span><br><span class="line"><span class="keyword">while</span> (node != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">length++;</span><br><span class="line">node = node-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">LNode* dummyHead = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">dummyHead-&gt;next = head;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> subLength = <span class="number">1</span>; subLength &lt; length; subLength &lt;&lt;= <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//subLength &lt;&lt;= 1等价于subLength *=2</span></span><br><span class="line">LNode* prev = dummyHead, * curr = dummyHead-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (curr != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">LNode* head1 = curr;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; subLength &amp;&amp; curr-&gt;next != <span class="literal">NULL</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">curr = curr-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">LNode* head2 = curr-&gt;next;</span><br><span class="line">curr-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">curr = head2;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; subLength &amp;&amp; curr != <span class="literal">NULL</span> &amp;&amp; curr-&gt;next != <span class="literal">NULL</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">curr = curr-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">LNode* next = <span class="literal">NULL</span>;</span><br><span class="line"><span class="keyword">if</span> (curr != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">next = curr-&gt;next;</span><br><span class="line">curr-&gt;next = <span class="literal">NULL</span>;</span><br><span class="line">&#125;</span><br><span class="line">LNode* merged = Merge(head1, head2);</span><br><span class="line">prev-&gt;next = merged;</span><br><span class="line"><span class="keyword">while</span> (prev-&gt;next != <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line">prev = prev-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line">curr = next;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> dummyHead;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//功能14 计算单链表L中数据域值为一个指定值x的节点个数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">Count_LinkList</span><span class="params">(LinkList L, ElemType x)</span></span><br><span class="line">&#123;</span><br><span class="line">LNode* p;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">p = L-&gt;next;</span><br><span class="line"><span class="keyword">while</span> (p)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (p-&gt;data == x) cnt++;</span><br><span class="line">p = p-&gt;next;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//返回数据域为指定值x的节点个数</span></span><br><span class="line"><span class="keyword">return</span> cnt;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试1 检验单链表L的基本操作</span></span><br><span class="line"><span class="comment">//包括：创建及初始化、节点插入、节点删除、节点查询、节点修改、链表排序、链表遍历并输出、反转链表等功能</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test1</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义一个头指针，以指示一个单链表</span></span><br><span class="line">LinkList L;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, status = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">ElemType e = <span class="number">0</span>, x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入单链表的长度：n=&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="comment">//建立一个含n个元素的单链表</span></span><br><span class="line">L = Create_LinkList(n);</span><br><span class="line"><span class="comment">//依次输出线性表各元素的值</span></span><br><span class="line">Print_LinkList(L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n1 测试插入功能\n输入待插入的元素的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入待插入的位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line"><span class="comment">//在第i个元素之前插入e</span></span><br><span class="line">status = Insert_LinkList(L, i, e);</span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;插入失败！&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n2 测试删除功能\n输入待删除元素的位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">status = Delete_LinkList(L, i, &amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;待删除元素的值为：%d\n&quot;</span>, e);</span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;删除成功！&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;删除失败！&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n3 测试查询功能\n输入待查询的元素的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line"><span class="type">int</span> position = Locate_LinkList(L, e);</span><br><span class="line"><span class="keyword">if</span> (position) <span class="built_in">printf</span>(<span class="string">&quot;该元素在链表中的位置为：第%d个元素&quot;</span>, position);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;未查询到该元素！&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n4 测试修改功能\n输入待修改元素的位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入修改后的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line">status = Modify_LinkList(L, i, e);</span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改成功！&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;输入的位置不合法，修改失败！&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n5 测试排序功能&quot;</span>);</span><br><span class="line">L = MergeSort_LinkList(L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n归并排序结束！&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n6 将元素e插入至有序单链表L中，并使L仍保持有序：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素e的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line">position = GetPosition_LinkList(L, e);</span><br><span class="line"><span class="comment">//在第position个元素之前插入e</span></span><br><span class="line">status = Insert_LinkList(L, position, e);</span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;插入成功！&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;插入失败！&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n7 测试反转链表功能\n反转链表后&quot;</span>);</span><br><span class="line"></span><br><span class="line">L = ReverseLinkList(L);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line"></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n8 计算单链表L中数据域值为x的节点个数：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入x的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="type">int</span> cnt = Count_LinkList(L, x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单链表L中数据域值为%d的个数为：%d个\n\n&quot;</span>, x, cnt);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试2 检验两个有序单链表的有序归并</span></span><br><span class="line"><span class="comment">//将两个有序单链表合并为一个新的有序单链表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test2</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> lenA = <span class="number">0</span>, lenB = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//定义一个头指针，以指示单链表LA</span></span><br><span class="line">LinkList LA;</span><br><span class="line"><span class="comment">//定义一个头指针，以指示单链表LB</span></span><br><span class="line">LinkList LB;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;创建单链表LA，输入其长度：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;lenA);</span><br><span class="line"><span class="comment">//建立一个含lenA个元素的单链表</span></span><br><span class="line">LA = Create_LinkList(lenA);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对单链表LA进行冒泡排序：&quot;</span>);</span><br><span class="line">BubbleSort_LinkList(LA);</span><br><span class="line">Print_LinkList(LA);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n创建单链表LB，输入其长度：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;lenB);</span><br><span class="line"><span class="comment">//建立一个含lenB个元素的单链表</span></span><br><span class="line">LB = Create_LinkList(lenB);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;对单链表LB进行直接选择排序：&quot;</span>);</span><br><span class="line">SelectSort_LinkList(LB);</span><br><span class="line">Print_LinkList(LB);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n合并单链表LA和LB，使新链表仍保持有序！\n合并成功！&quot;</span>);</span><br><span class="line">LinkList LC = (LNode*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(LNode));</span><br><span class="line">LC-&gt;next = Merge(LA-&gt;next, LB-&gt;next);</span><br><span class="line">Print_LinkList(LC);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//测试3 检验链表的去重</span></span><br><span class="line"><span class="comment">//删除单链表L中的重复元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">Test3</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//定义一个头指针，以指示一个单链表</span></span><br><span class="line">LinkList L;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入单链表的长度：n=&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="comment">//建立一个含n个元素的单链表</span></span><br><span class="line">L = Create_LinkList(n);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line">DuplicateRemoveLinkList(L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n去重后：&quot;</span>);</span><br><span class="line">Print_LinkList(L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> sel = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1 测试单链表的创建及初始化、节点插入、节点删除、节点查询、节点修改、链表排序、链表遍历并输出、反转链表等功能\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2 合并两个有序链表，使新链表仍保持有序\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3 删除单链表L中的重复元素\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4 退出\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的选择：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line"><span class="keyword">while</span> (sel &lt; <span class="number">1</span> || sel &gt; <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入有误，重新输入：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (sel)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">Test1();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">Test2();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">Test3();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><ul><li>测试1</li></ul><p><img src="/img/images/00006/00006_2.png" alt="公式"></p><ul><li>测试2</li></ul><p><img src="/img/images/00006/00006_3.png" alt="公式"></p><ul><li>测试3</li></ul><p><img src="/img/images/00006/00006_4.png" alt="公式"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 链表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>常用排序算法</title>
      <link href="/2023/10/21/00005/"/>
      <url>/2023/10/21/00005/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><ul><li>快速排序</li><li>归并排序</li><li>冒泡排序</li><li>选择排序</li><li>插入排序</li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdlib&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="comment">//快速排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">quick_sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> x = q[l + (r - l) / <span class="number">2</span>], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (q[++i] &lt; x); <span class="comment">//do i++; while (q[i] &lt; x);</span></span><br><span class="line"><span class="keyword">while</span> (q[--j] &gt; x); <span class="comment">//do j++; while (q[j] &gt; x);</span></span><br><span class="line"><span class="keyword">if</span> (i &lt; j) <span class="built_in">swap</span>(q[i], q[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">quick_sort</span>(q, l, j);</span><br><span class="line"><span class="built_in">quick_sort</span>(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//归并排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">merge_sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line"><span class="built_in">merge_sort</span>(q, l, mid);</span><br><span class="line"><span class="built_in">merge_sort</span>(q, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="type">int</span> i = l, j = mid + <span class="number">1</span>;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; temp;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q[i] &lt; q[j]) temp.<span class="built_in">push_back</span>(q[i++]);</span><br><span class="line"><span class="keyword">else</span> temp.<span class="built_in">push_back</span>(q[j++]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid) temp.<span class="built_in">push_back</span>(q[i++]);</span><br><span class="line"><span class="keyword">while</span> (j &lt;= r) temp.<span class="built_in">push_back</span>(q[j++]);</span><br><span class="line"><span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = temp[j];</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//冒泡排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">bubble_sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; r - l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = l; j &lt; r - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q[j] &gt; q[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">swap</span>(q[j], q[j + <span class="number">1</span>]);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="keyword">break</span>;  <span class="comment">//对冒泡排序的优化</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//选择排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">select_sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = l; i &lt;= r; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> mi = i;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i + <span class="number">1</span>; j &lt;= r; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q[mi] &gt; q[j]) mi = j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (mi != i) <span class="built_in">swap</span>(q[i], q[mi]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//插入排序</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insert_sort</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = l + <span class="number">1</span>; i &lt;= r; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = q[i];</span><br><span class="line"><span class="type">int</span> j = i - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (j &gt;= <span class="number">0</span> &amp;&amp; q[j] &gt; temp)</span><br><span class="line">&#123;</span><br><span class="line">q[j + <span class="number">1</span>] = q[j];</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">q[j + <span class="number">1</span>] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Print</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; q)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">unsigned</span> <span class="type">int</span> i = <span class="number">0</span>; i &lt; q.<span class="built_in">size</span>(); i++) cout &lt;&lt; q[i] &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; vec;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;输入数据个数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="built_in">srand</span>((<span class="type">unsigned</span>)<span class="built_in">time</span>(<span class="literal">NULL</span>));</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;随机生成&quot;</span> &lt;&lt; n &lt;&lt; <span class="string">&quot;个数据：&quot;</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">t = <span class="built_in">rand</span>() % <span class="number">100</span> + <span class="number">1</span>;</span><br><span class="line">vec.<span class="built_in">push_back</span>(t);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Print</span>(vec);</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">v1</span><span class="params">(vec)</span>, <span class="title">v2</span><span class="params">(vec)</span>, <span class="title">v3</span><span class="params">(vec)</span>, <span class="title">v4</span><span class="params">(vec)</span>, <span class="title">v5</span><span class="params">(vec)</span></span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;快速排序结果：&quot;</span>;</span><br><span class="line"><span class="built_in">quick_sort</span>(v1, <span class="number">0</span>, v1.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Print</span>(v1);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;归并排序结果：&quot;</span>;</span><br><span class="line"><span class="built_in">merge_sort</span>(v2, <span class="number">0</span>, v2.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Print</span>(v2);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;冒泡排序结果：&quot;</span>;</span><br><span class="line"><span class="built_in">bubble_sort</span>(v3, <span class="number">0</span>, v3.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Print</span>(v3);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;选择排序结果：&quot;</span>;</span><br><span class="line"><span class="built_in">bubble_sort</span>(v4, <span class="number">0</span>, v4.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Print</span>(v4);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;插入排序结果：&quot;</span>;</span><br><span class="line"><span class="built_in">insert_sort</span>(v5, <span class="number">0</span>, v5.<span class="built_in">size</span>() - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">Print</span>(v5);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><p><img src="/img/images/00005/00005_2.png" alt="公式"></p>]]></content>
      
      
      <categories>
          
          <category> 算法 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 排序 </tag>
            
            <tag> 算法 </tag>
            
            <tag> 程序设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>顺序表的常用操作实现及测试</title>
      <link href="/2023/10/21/00004/"/>
      <url>/2023/10/21/00004/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C语言实现的顺序表，包含以下功能模块：</p><ul><li><p>初始化并建立顺序表</p></li><li><p>顺序表初始值输入</p></li><li><p>按位置插入</p></li><li><p>按位置删除</p></li><li><p>按值查询</p></li><li><p>按位置修改</p></li><li><p>去除顺序表重复元素</p></li><li><p>顺序表排序</p></li><li><p>顺序表遍历及输出</p></li><li><p>合并两个有序顺序表</p></li></ul><br/><h1 id="完整代码"><a href="#完整代码" class="headerlink" title="完整代码"></a>完整代码</h1><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//动态顺序表的常用操作实现及测试</span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INITSIZE 100  <span class="comment">//顺序表初始容量</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> INCREMENT 10  <span class="comment">//顺序表动态增量</span></span></span><br><span class="line"></span><br><span class="line"><span class="comment">//数据结构</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="type">int</span> ElemType; <span class="comment">//顺序表元素类型</span></span><br><span class="line"><span class="keyword">typedef</span> <span class="class"><span class="keyword">struct</span>        //顺序表结构体</span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line">ElemType* elem;</span><br><span class="line"><span class="type">int</span> length;</span><br><span class="line"><span class="type">int</span> listsize;</span><br><span class="line">&#125; SqList;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数声明</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InitSqList</span><span class="params">(SqList* L)</span>;                        <span class="comment">//初始化</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InputSqList</span><span class="params">(SqList* L)</span>;                      <span class="comment">//输入</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintSqList</span><span class="params">(SqList L)</span>;                       <span class="comment">//遍历并输出</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InsertSqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span>;   <span class="comment">//插入</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteSqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType* e)</span>;  <span class="comment">//删除</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">LocateSqList</span><span class="params">(SqList L, ElemType e)</span>;           <span class="comment">//按值查找</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ModifySqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span>;   <span class="comment">//按位置修改</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DuplicateRemoveSqList</span><span class="params">(SqList* L)</span>;            <span class="comment">//去重</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SortSqList</span><span class="params">(SqList* L)</span>;                       <span class="comment">//排序</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MergeSqList</span><span class="params">(SqList LA, SqList LB, SqList* L)</span>; <span class="comment">//合并两个有序顺序表</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span>;                                    <span class="comment">//测试1</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span>;                                    <span class="comment">//测试2</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">test03</span><span class="params">()</span>;                                    <span class="comment">//测试3</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span>;                                      <span class="comment">//主菜单</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//主函数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//函数实现</span></span><br><span class="line"><span class="comment">//1.初始化顺序表，成功返回1，失败返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InitSqList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line">L-&gt;elem = (ElemType*)<span class="built_in">malloc</span>(INITSIZE * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line"><span class="keyword">if</span> (!L-&gt;elem) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">L-&gt;length = <span class="number">0</span>;</span><br><span class="line">L-&gt;listsize = INITSIZE;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//2.输入顺序表各个元素的值</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">InputSqList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请输入该线性表的元素个数：n=&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">while</span> (n &gt; L-&gt;listsize)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;超过了线性表的初始存储空间，请重新输入：\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">&#125;</span><br><span class="line">L-&gt;length = n;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请依次输入该线性表各元素的值：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;L-&gt;elem[i]);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//3.遍历并输出顺序表的各元素</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintSqList</span><span class="params">(SqList L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该线性表的元素依次为：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; L.length; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, L.elem[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//4.在线性表L的第i个位置之前插入新的元素e,成功则返回1，失败返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">InsertSqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length + <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//插入位置合法性校验</span></span><br><span class="line"><span class="keyword">if</span> (L-&gt;length &gt;= L-&gt;listsize)</span><br><span class="line">&#123;</span><br><span class="line">ElemType* newbase = (ElemType*)<span class="built_in">realloc</span>(L-&gt;elem, (L-&gt;listsize + INCREMENT) * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line"><span class="keyword">if</span> (!newbase) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">L-&gt;elem = newbase;</span><br><span class="line">L-&gt;listsize += INCREMENT;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = L-&gt;length - <span class="number">1</span>; j &gt;= i - <span class="number">1</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line">L-&gt;elem[j + <span class="number">1</span>] = L-&gt;elem[j];</span><br><span class="line">&#125;</span><br><span class="line">L-&gt;elem[i - <span class="number">1</span>] = e;</span><br><span class="line">++(L-&gt;length);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//5.在顺序表L中删除第i个元素，并用e返回其值，若成功则返回1，否则返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DeleteSqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType* e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//删除位置合法性校验</span></span><br><span class="line">*e = L-&gt;elem[i - <span class="number">1</span>];</span><br><span class="line"><span class="keyword">for</span> (j = i; j &lt; L-&gt;length; j++)</span><br><span class="line">&#123;</span><br><span class="line">L-&gt;elem[j - <span class="number">1</span>] = L-&gt;elem[j];</span><br><span class="line">&#125;</span><br><span class="line">--(L-&gt;length);</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//6.在顺序表L中查找第i个值与e相等的元素的位置，若找到，则返回其在L中的位置，否则返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">LocateSqList</span><span class="params">(SqList L, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; L.length &amp;&amp; L.elem[i] != e) i++;</span><br><span class="line"><span class="keyword">if</span> (L.elem[i] == e) <span class="keyword">return</span> i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//7.在顺序表L中修改第i个位置的元素，若成功则返回1，否则返回0</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">ModifySqList</span><span class="params">(SqList* L, <span class="type">int</span> i, ElemType e)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i&lt;<span class="number">1</span> || i&gt;L-&gt;length) <span class="keyword">return</span> <span class="number">0</span>; <span class="comment">//修改位置合法性校验</span></span><br><span class="line">L-&gt;elem[i - <span class="number">1</span>] = e;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//8.去除顺序表中的重复元素，相同元素保留靠后的</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DuplicateRemoveSqList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line">ElemType e;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt; L-&gt;length; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (L-&gt;elem[i] == L-&gt;elem[j])</span><br><span class="line">&#123;</span><br><span class="line">DeleteSqList(L, i + <span class="number">1</span>, &amp;e);</span><br><span class="line">j--;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//9.对线性表各元素按从小到大进行冒泡排序</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">SortSqList</span><span class="params">(SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; L-&gt;length - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; L-&gt;length - <span class="number">1</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (L-&gt;elem[i] &gt; L-&gt;elem[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">ElemType temp = L-&gt;elem[i];</span><br><span class="line">L-&gt;elem[i] = L-&gt;elem[i + <span class="number">1</span>];</span><br><span class="line">L-&gt;elem[i + <span class="number">1</span>] = temp;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//10.将两个递增顺序表LA和LB合并为新的递增顺序表L</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">MergeSqList</span><span class="params">(SqList LA, SqList LB, SqList* L)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line">L-&gt;listsize = LA.length + LB.length;</span><br><span class="line">L-&gt;elem = (ElemType*)<span class="built_in">malloc</span>(L-&gt;listsize * <span class="keyword">sizeof</span>(ElemType));</span><br><span class="line"><span class="keyword">if</span> (!L-&gt;elem) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; LA.length &amp;&amp; j &lt; LB.length)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (LA.elem[i] &lt;= LB.elem[j]) L-&gt;elem[k++] = LA.elem[i++];</span><br><span class="line"><span class="keyword">else</span> L-&gt;elem[k++] = LB.elem[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i &lt; LA.length) L-&gt;elem[k++] = LA.elem[i++];</span><br><span class="line"><span class="keyword">while</span> (j &lt; LB.length) L-&gt;elem[k++] = LB.elem[j++];</span><br><span class="line">L-&gt;length = k;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test01</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">SqList L;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, status = <span class="number">0</span>;</span><br><span class="line">ElemType e;</span><br><span class="line">InitSqList(&amp;L);              <span class="comment">//初始化顺序表测试</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;顺序表L初始化成功！\n&quot;</span>);</span><br><span class="line">InputSqList(&amp;L);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入待插入元素的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入插入位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">status = InsertSqList(&amp;L, i, e);     <span class="comment">//插入测试</span></span><br><span class="line"><span class="keyword">if</span> (status) PrintSqList(L);             <span class="comment">//输出顺序表L</span></span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;位置不合法，插入失败！\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入待删除元素的位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line">status = DeleteSqList(&amp;L, i, &amp;e);    <span class="comment">//删除测试</span></span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;删除元素的值为：%d\n删除后：&quot;</span>, e);</span><br><span class="line">PrintSqList(L);             <span class="comment">//输出顺序表L</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;位置不合法，删除失败！\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入待查找元素的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line"><span class="type">int</span> position = LocateSqList(L, e); <span class="comment">//按值查找测试</span></span><br><span class="line"><span class="keyword">if</span> (position == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;该顺序表中不存在该元素！\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;该元素位置为：第%d个元素\n&quot;</span>, position);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入待修改元素的位置：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入修改后的值：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;e);</span><br><span class="line">status = ModifySqList(&amp;L, i, e);     <span class="comment">//按位置修改测试</span></span><br><span class="line"><span class="keyword">if</span> (status)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;修改后，&quot;</span>);</span><br><span class="line">PrintSqList(L);             <span class="comment">//输出顺序表L</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;位置不合法，修改失败！\n&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test02</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">SqList L;</span><br><span class="line">InitSqList(&amp;L);             <span class="comment">//初始化</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;顺序表L初始化成功！\n&quot;</span>);</span><br><span class="line">InputSqList(&amp;L);            <span class="comment">//输入顺序表L</span></span><br><span class="line">PrintSqList(L);             <span class="comment">//输出顺序表L</span></span><br><span class="line">DuplicateRemoveSqList(&amp;L);  <span class="comment">//去重</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;去除重复元素后：&quot;</span>);</span><br><span class="line">PrintSqList(L);             <span class="comment">//输出顺序表L</span></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">test03</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">SqList L1, L2, L;</span><br><span class="line">InitSqList(&amp;L);             <span class="comment">//初始化L1</span></span><br><span class="line">InitSqList(&amp;L1);              <span class="comment">//初始化L</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;顺序表L1初始化成功！\n&quot;</span>);</span><br><span class="line">InputSqList(&amp;L1);            <span class="comment">//输入顺序表L1</span></span><br><span class="line">SortSqList(&amp;L1);             <span class="comment">//对L1排序</span></span><br><span class="line">InitSqList(&amp;L2);             <span class="comment">//初始化L2</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;顺序表L2初始化成功！\n&quot;</span>);</span><br><span class="line">InputSqList(&amp;L2);            <span class="comment">//输入顺序表L2</span></span><br><span class="line">SortSqList(&amp;L2);             <span class="comment">//对L2排序</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;将L1和L2合并为新的递增顺序表L：\n&quot;</span>);</span><br><span class="line">MergeSqList(L1, L2, &amp;L);</span><br><span class="line">PrintSqList(L);              <span class="comment">//输出顺序表L</span></span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> sel = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1：建立顺序表，在顺序表上实现插入、删除、查找、修改、输出等操作\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;2：去除顺序表中的重复元素\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;3：对两个顺序表进行排序及合并操作\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;4：退出\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的选择：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line"><span class="keyword">while</span> (sel &lt; <span class="number">1</span> || sel&gt;<span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入的选择不合法，请重新输入：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (sel)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">test01();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">test02();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">3</span>:</span><br><span class="line">test03();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line"><span class="keyword">default</span>:</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol><br/><h1 id="运行结果"><a href="#运行结果" class="headerlink" title="运行结果"></a>运行结果</h1><ul><li>测试1</li></ul><p><img src="/img/images/00004/00004_2.png" alt="公式"></p><ul><li>测试2</li></ul><p><img src="/img/images/00004/00004_3.png" alt="公式"></p><ul><li>测试3</li></ul><p><img src="/img/images/00004/00004_4.png" alt="公式"></p>]]></content>
      
      
      <categories>
          
          <category> 数据结构 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 数据结构 </tag>
            
            <tag> 顺序表 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的餐厅点餐系统</title>
      <link href="/2023/10/21/00003/"/>
      <url>/2023/10/21/00003/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的餐厅点餐系统，采用面向对象的思维进行设计，包含以下功能模块：</p><ul><li><p>添加菜品信息</p></li><li><p>删除菜品信息</p></li><li><p>修改菜品信息</p></li><li><p>查询菜品信息</p></li><li><p>显示菜单</p></li><li><p>查看餐厅用餐情况</p></li><li><p>点餐</p></li><li><p>加菜</p></li><li><p>结账</p></li><li><p>统计收支情况</p></li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><ul><li>主菜单界面</li></ul><p><img src="/img/images/00003/00003_2.png" alt="公式"></p><ul><li>查看餐厅用餐情况界面</li></ul><p><img src="/img/images/00003/00003_3.png" alt="公式"></p><ul><li>点餐界面</li></ul><p><img src="/img/images/00003/00003_4.png" alt="公式"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//获取系统当前时间</span></span><br><span class="line"><span class="function"><span class="type">static</span> string <span class="title">getTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">time_t</span> t = <span class="built_in">time</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tm</span>* now = <span class="built_in">localtime</span>(&amp;t);</span><br><span class="line">std::stringstream time;</span><br><span class="line">time &lt;&lt; now-&gt;tm_year + <span class="number">1900</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_mon + <span class="number">1</span> &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mon + <span class="number">1</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_mday &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mday;</span><br><span class="line"><span class="keyword">return</span> time.<span class="built_in">str</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//菜品类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Dish</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string dishName;</span><br><span class="line">string dishType;</span><br><span class="line"><span class="type">double</span> dishPrice;</span><br><span class="line"><span class="built_in">Dish</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Dish</span>(string dishName, string dishType, <span class="type">double</span> dishPrice)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;dishName = dishName;</span><br><span class="line"><span class="keyword">this</span>-&gt;dishType = dishType;</span><br><span class="line"><span class="keyword">this</span>-&gt;dishPrice = dishPrice;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Dish</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showDishInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt; dishName;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt;  dishType;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt;  dishPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性名，只显示总积分</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt; <span class="string">&quot;名称&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt;  <span class="string">&quot;类型&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">30</span>) &lt;&lt; <span class="string">&quot;价格&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//餐桌类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Table</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string tId;        <span class="comment">//桌子编号</span></span><br><span class="line">vector&lt;Dish&gt; ds;   <span class="comment">//点菜情况</span></span><br><span class="line"><span class="type">int</span> dsSize;        <span class="comment">//菜的数量</span></span><br><span class="line">string startTime;  <span class="comment">//开始时间</span></span><br><span class="line"><span class="type">double</span> money;      <span class="comment">//当前消费账单额度</span></span><br><span class="line">string pay;        <span class="comment">//是否结算</span></span><br><span class="line">string state;      <span class="comment">//餐桌状态：空闲 || 使用中</span></span><br><span class="line"><span class="built_in">Table</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Table</span>(string tId, vector&lt;Dish&gt; ds, <span class="type">int</span> dsSize, string startTime, <span class="type">double</span> money, string pay, string state)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;tId = tId;</span><br><span class="line"><span class="keyword">this</span>-&gt;ds = ds;</span><br><span class="line"><span class="keyword">this</span>-&gt;dsSize = dsSize;</span><br><span class="line"><span class="keyword">this</span>-&gt;startTime = startTime;</span><br><span class="line"><span class="keyword">this</span>-&gt;money = money;</span><br><span class="line"><span class="keyword">this</span>-&gt;pay = pay;</span><br><span class="line"><span class="keyword">this</span>-&gt;state = state;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">Table</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showTableInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; tId;  <span class="comment">//餐桌号</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt;  state;  <span class="comment">//餐桌状态</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">18</span>) &lt;&lt;  startTime; <span class="comment">//开始时间</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  money; <span class="comment">//当前消费账单额度</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  pay &lt;&lt; endl; <span class="comment">//结算状态</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出属性名，只显示总积分</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;餐桌号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt;  <span class="string">&quot;状态&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">18</span>) &lt;&lt;  <span class="string">&quot;点餐时间&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt;  <span class="string">&quot;消费金额&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;是否结算&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="comment">//点餐系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">OrderSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Dish&gt; menu;  <span class="comment">//菜单</span></span><br><span class="line">vector&lt;Table&gt; tas;  <span class="comment">//餐厅里所有的桌子</span></span><br><span class="line">vector&lt;Table&gt; tbs;  <span class="comment">//记录</span></span><br><span class="line"></span><br><span class="line"><span class="built_in">OrderSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;tas.<span class="built_in">resize</span>(<span class="number">20</span>);</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; i + <span class="number">1</span>;</span><br><span class="line">tas[i].tId = ss.<span class="built_in">str</span>();</span><br><span class="line">tas[i].dsSize = <span class="number">0</span>;</span><br><span class="line">tas[i].startTime = <span class="string">&quot;0000-00-00&quot;</span>;</span><br><span class="line">tas[i].money = <span class="number">0</span>;</span><br><span class="line">tas[i].pay = <span class="string">&quot;未结算&quot;</span>;</span><br><span class="line">tas[i].state = <span class="string">&quot;空闲&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">OrderSystem</span>(vector&lt;Dish&gt; menu, vector&lt;Table&gt; tas, vector&lt;Table&gt; tbs)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;menu = menu;</span><br><span class="line"><span class="keyword">this</span>-&gt;tas = tas;</span><br><span class="line"><span class="keyword">this</span>-&gt;tbs = tbs;</span><br><span class="line">&#125;</span><br><span class="line">~<span class="built_in">OrderSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//主菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">mainMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t***********欢迎来到餐厅点餐系统*************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t你可以进行以下操作:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             1   添加菜品信息             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             2   删除菜品信息             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             3   修改菜品信息             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             4   查询菜品信息             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             5   显示菜单                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             6   查看餐厅用餐情况         |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             7   点餐                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             8   加菜                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             9   结账                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             10  统计收支情况             |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             0   退出                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-10】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span> &amp;&amp; sel != <span class="string">&quot;9&quot;</span> &amp;&amp; sel != <span class="string">&quot;10&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-10】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertMenu</span>(); <span class="comment">//添加菜品至菜单</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteMenu</span>(); <span class="comment">//从菜单中删除菜品</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateMenu</span>(); <span class="comment">//修改菜品信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectMenu</span>(); <span class="comment">//查询菜品信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayMenu</span>(); <span class="comment">//显示菜单</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayTas</span>(); <span class="comment">//查看餐厅用餐情况</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">order</span>();      <span class="comment">//点餐</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateTas</span>();  <span class="comment">//加菜</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;9&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateTbs</span>();  <span class="comment">//结账</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;10&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayTbs</span>(); <span class="comment">//统计收支情况</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">mainMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//读取库存文件</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;menu.txt&quot;</span>, ios::in);</span><br><span class="line">Dish d;</span><br><span class="line"><span class="keyword">while</span>(ifs &gt;&gt; d.dishName &gt;&gt; d.dishType &gt;&gt; d.dishPrice)</span><br><span class="line">&#123;</span><br><span class="line">menu.<span class="built_in">push_back</span>(d);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//读取当前所有餐桌情况</span></span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;tas.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">jfs &gt;&gt; n; <span class="comment">//餐桌数量</span></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">Table ta;</span><br><span class="line">jfs &gt;&gt; ta.tId &gt;&gt; ta.state &gt;&gt; ta.startTime &gt;&gt; ta.money &gt;&gt; ta.pay &gt;&gt; ta.dsSize;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; ta.dsSize; j++)</span><br><span class="line">&#123;</span><br><span class="line">Dish tmp;</span><br><span class="line">jfs &gt;&gt; tmp.dishName &gt;&gt; tmp.dishType &gt;&gt; tmp.dishPrice;</span><br><span class="line"></span><br><span class="line">ta.ds.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">&#125;</span><br><span class="line">tas[i] = ta;</span><br><span class="line">&#125;</span><br><span class="line">jfs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//读取餐厅所有用餐记录</span></span><br><span class="line">ifstream kfs;</span><br><span class="line">kfs.<span class="built_in">open</span>(<span class="string">&quot;tbs.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>;</span><br><span class="line">kfs &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">Table tb;</span><br><span class="line">kfs &gt;&gt; tb.tId &gt;&gt; tb.startTime &gt;&gt; tb.money &gt;&gt; tb.pay &gt;&gt; tb.dsSize;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tb.dsSize; ++j)</span><br><span class="line">&#123;</span><br><span class="line">Dish tmp;</span><br><span class="line">kfs &gt;&gt; tmp.dishName &gt;&gt; tmp.dishType &gt;&gt; tmp.dishPrice;</span><br><span class="line">tb.ds.<span class="built_in">push_back</span>(tmp);</span><br><span class="line">&#125;</span><br><span class="line">tbs.<span class="built_in">push_back</span>(tb);</span><br><span class="line">&#125;</span><br><span class="line">kfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;menu.txt&quot;</span>, ios::out);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; menu[i].dishName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; menu[i].dishType &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; menu[i].dishPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"></span><br><span class="line">ofstream pfs;</span><br><span class="line">pfs.<span class="built_in">open</span>(<span class="string">&quot;tas.txt&quot;</span>, ios::out);</span><br><span class="line">pfs &lt;&lt; tas.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; tas[i].tId &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].state &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].startTime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].money &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].pay &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].ds.<span class="built_in">size</span>()&lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tas[i].ds.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; tas[i].ds[j].dishName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].ds[j].dishType &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tas[i].ds[j].dishPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ofstream qfs;</span><br><span class="line">qfs.<span class="built_in">open</span>(<span class="string">&quot;tbs.txt&quot;</span>, ios::out);</span><br><span class="line">qfs &lt;&lt; tbs.<span class="built_in">size</span>() &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tbs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">qfs &lt;&lt; tbs[i].tId &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].startTime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].money &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].pay &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].dsSize &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tbs[i].ds.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">qfs &lt;&lt; tbs[i].ds[j].dishName &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].ds[j].dishType &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; tbs[i].ds[j].dishPrice &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加菜品信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t**********************欢迎来到添加菜品信息功能*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\t\t当前菜单如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="built_in">traversalMenu</span>();</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 添加菜品信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请选择【1-2】：&quot;</span>;</span><br><span class="line">string sel;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入菜品信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t菜品名称：&quot;</span>;</span><br><span class="line">Dish d;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; d.dishName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d.dishName == menu[i].dishName)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t该菜品已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t菜品类型：&quot;</span>;</span><br><span class="line">cin &gt;&gt; d.dishType;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t菜品价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; d.dishPrice;</span><br><span class="line">menu.<span class="built_in">push_back</span>(d);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t\t该菜品已成功添加进菜单！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除菜品信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t***********************欢迎来到删除菜品信息功能***********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前菜单如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalMenu</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按菜名删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待删除菜品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Dish&gt;::iterator it = menu.<span class="built_in">begin</span>(); it != menu.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;dishName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t待删除菜品的信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Dish::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showDishInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t确认删除？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">menu.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到此菜品，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//修改菜品信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t***********************欢迎来到修改菜品信息功能***********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前菜单如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalMenu</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 修改菜品信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待修改菜品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (menu[i].dishName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t待修改菜品信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Dish::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">menu[i].<span class="built_in">showDishInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">Dish d = menu[i];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的菜名：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; d.dishName;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; menu.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(d.dishName == menu[j].dishName &amp;&amp; i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t该菜品名称已被录入，请重新输入菜品名称：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的菜品类型：&quot;</span>;</span><br><span class="line">cin &gt;&gt; d.dishType;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入修改后的菜品价格：&quot;</span>;</span><br><span class="line">cin &gt;&gt; d.dishPrice;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">menu[i] = d;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到此种菜品，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查询菜品信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t***********************欢迎来到查询菜品信息功能************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 按菜品名称查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 按菜品类型查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询菜品的名称：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Dish::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (menu[i].dishName == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">menu[i].<span class="built_in">showDishInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到此种菜品！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyType;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询菜品的类型：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyType;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Dish::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (menu[i].dishType == keyType)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">menu[i].<span class="built_in">showDishInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到该类型菜品！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traversalMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Dish::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; menu.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">menu[i].<span class="built_in">showDishInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//显示菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t*********************欢迎来到显示菜单功能************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前菜单如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalMenu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历餐桌</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traversalTas</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Table::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">tas[i].<span class="built_in">showTableInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//查看餐厅用餐情况</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayTas</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t*********************欢迎来到查看餐厅用餐情况功能**********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t餐厅当前用餐情况如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalTas</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 查询指定餐桌点餐情况&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyId;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询餐桌的餐桌号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyId;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Table::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tas[i].tId == keyId &amp;&amp; tas[i].ds.<span class="built_in">size</span>() &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">tas[i].<span class="built_in">showTableInfo</span>();</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t该餐桌菜单：&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tas[i].ds.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; tas[i].ds[j].dishName &lt;&lt; <span class="string">&quot;【￥&quot;</span> &lt;&lt; tas[i].ds[j].dishPrice &lt;&lt; <span class="string">&quot;】 &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到该编号餐桌或该餐桌当前空闲！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//点餐</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">order</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t************************欢迎来到点餐功能*************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅当前空闲餐桌的编号如下：&quot;</span> &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].state == <span class="string">&quot;空闲&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>) &lt;&lt; tas[i].tId;  <span class="comment">//餐桌号</span></span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt % <span class="number">15</span> == <span class="number">0</span> &amp;&amp; cnt &gt; <span class="number">0</span>) cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅菜单如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalMenu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 开始点餐&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入餐桌号：&quot;</span>;</span><br><span class="line">string id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].tId == id &amp;&amp; tas[i].state == <span class="string">&quot;空闲&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="type">bool</span> ch = <span class="literal">true</span>;</span><br><span class="line">tas[i].state = <span class="string">&quot;使用中&quot;</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入要点的菜品名称：&quot;</span>;</span><br><span class="line">string dName;</span><br><span class="line">cin &gt;&gt; dName;</span><br><span class="line"><span class="type">bool</span> op = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; menu.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dName == menu[j].dishName)</span><br><span class="line">&#123;</span><br><span class="line">op = <span class="literal">true</span>;</span><br><span class="line">tas[i].ds.<span class="built_in">push_back</span>(menu[j]);</span><br><span class="line">tas[i].money += menu[j].dishPrice;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!op) cout &lt;&lt; <span class="string">&quot;\t\t抱歉，本餐厅没有这道菜！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;\t\t点菜成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请问还需要别的菜品吗？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string cc = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; cc;</span><br><span class="line"><span class="keyword">if</span>(cc == <span class="string">&quot;0&quot;</span>) ch = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> ch = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch);</span><br><span class="line">tas[i].pay = <span class="string">&quot;未结算&quot;</span>;</span><br><span class="line">tas[i].dsSize = tas[i].ds.<span class="built_in">size</span>();</span><br><span class="line">tas[i].startTime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t点餐成功，我们会在半小时内上菜，祝您用餐愉快！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;\t\t该餐桌正在使用中或不存在该编号餐桌！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//加菜</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateTas</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t**************************欢迎来到加菜功能*****************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅当前处于使用状态的餐桌的编号如下：&quot;</span> &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].state == <span class="string">&quot;使用中&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">4</span>) &lt;&lt; tas[i].tId;  <span class="comment">//餐桌号</span></span><br><span class="line">cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt % <span class="number">10</span> == <span class="number">0</span> &amp;&amp; cnt &gt; <span class="number">0</span>) cout &lt;&lt; endl &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅菜单如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traversalMenu</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 给指定编号餐桌加菜&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入餐桌号：&quot;</span>;</span><br><span class="line">string id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].tId == id &amp;&amp; tas[i].state == <span class="string">&quot;使用中&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line"><span class="type">bool</span> ch = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入需要添加的菜品名称：&quot;</span>;</span><br><span class="line">string dName;</span><br><span class="line">cin &gt;&gt; dName;</span><br><span class="line"><span class="type">bool</span> op = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; menu.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(dName == menu[j].dishName)</span><br><span class="line">&#123;</span><br><span class="line">op = <span class="literal">true</span>;</span><br><span class="line">tas[i].ds.<span class="built_in">push_back</span>(menu[j]);</span><br><span class="line">tas[i].money += menu[j].dishPrice;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!op) cout &lt;&lt; <span class="string">&quot;\t\t抱歉，本餐厅没有这道菜！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">else</span> cout &lt;&lt; <span class="string">&quot;\t\t加菜成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请问还需要别的菜品吗？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string cc = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; cc;</span><br><span class="line"><span class="keyword">if</span>(cc == <span class="string">&quot;0&quot;</span>) ch = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> ch = <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(ch);</span><br><span class="line">tas[i].pay = <span class="string">&quot;未结算&quot;</span>;</span><br><span class="line">tas[i].dsSize = tas[i].ds.<span class="built_in">size</span>();</span><br><span class="line"><span class="comment">//tas[i].startTime = Tool::getTime();</span></span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t点餐成功，我们会在半小时内上齐追加的菜品，祝您用餐愉快！&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;\t\t该餐桌没有客人使用或不存在该编号餐桌！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//结账</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateTbs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t**************************欢迎来到结账功能*****************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅待结账的餐桌如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">Table::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].state == <span class="string">&quot;使用中&quot;</span> &amp;&amp; tas[i].pay == <span class="string">&quot;未结算&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">tas[i].<span class="built_in">showTableInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t-----------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 指定编号餐桌进行结账&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入餐桌号：&quot;</span>;</span><br><span class="line">string id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tas.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(tas[i].tId == id &amp;&amp; tas[i].state == <span class="string">&quot;使用中&quot;</span> &amp;&amp; tas[i].pay == <span class="string">&quot;未结算&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t该桌共消费：&quot;</span> &lt;&lt; tas[i].money &lt;&lt; <span class="string">&quot;元！请问是否结算？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">tas[i].pay = <span class="string">&quot;已结算&quot;</span>;</span><br><span class="line">tbs.<span class="built_in">push_back</span>(tas[i]);</span><br><span class="line">vector&lt;Dish&gt; tds;</span><br><span class="line"><span class="function">Table <span class="title">tmp</span><span class="params">(tas[i].tId, tds, <span class="number">0</span>, <span class="string">&quot;0000-00-00&quot;</span>, <span class="number">0</span>, <span class="string">&quot;未结算&quot;</span>, <span class="string">&quot;空闲&quot;</span>)</span></span>;</span><br><span class="line"></span><br><span class="line">tas[i] = tmp;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t结算成功！！！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;\t\t该餐桌没有客人使用或不存在该编号餐桌！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//统计收支情况</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayTbs</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t***********************欢迎来到统计收支情况功能***************************&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">double</span> total = <span class="number">0</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t本餐厅账本历史记录如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;编号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; <span class="string">&quot;餐桌号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt;  <span class="string">&quot;点餐时间&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">18</span>) &lt;&lt;  <span class="string">&quot;消费金额&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;是否结算&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; tbs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; i + <span class="number">1</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">16</span>) &lt;&lt; tbs[i].tId;  <span class="comment">//餐桌号</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt;  tbs[i].startTime; <span class="comment">//开始时间</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">18</span>) &lt;&lt;  tbs[i].money; <span class="comment">//当前消费账单额度</span></span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt;  tbs[i].pay &lt;&lt; endl; <span class="comment">//结算状态</span></span><br><span class="line">total += tbs[i].money;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t--------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t当前收入总额：￥&quot;</span> &lt;&lt; total &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t1 查询指定编号账单详情&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t----------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t请输入待查询的账单记录编号：&quot;</span>;</span><br><span class="line">string id;</span><br><span class="line">cin &gt;&gt; id;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; tbs.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">stringstream ss;</span><br><span class="line">ss &lt;&lt; i + <span class="number">1</span>;</span><br><span class="line">string ts = ss.<span class="built_in">str</span>();</span><br><span class="line"><span class="keyword">if</span>(id == ts)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t编号：&quot;</span> &lt;&lt; i + <span class="number">1</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t餐桌号：&quot;</span> &lt;&lt; tbs[i].tId &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t点餐时间：&quot;</span> &lt;&lt; tbs[i].startTime &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t消费金额：￥&quot;</span> &lt;&lt; tbs[i].money &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t是否结算：已结算&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t点餐菜单：&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; tbs[i].ds.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; tbs[i].ds[j].dishName &lt;&lt; <span class="string">&quot; &quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout &lt;&lt; <span class="string">&quot;\t\t未查询到该编号账单记录！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//从文件中获取餐桌数量</span></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">getTableNum</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;tas.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">jfs &gt;&gt; n; <span class="comment">//餐桌数量</span></span><br><span class="line"><span class="keyword">return</span> n;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">OrderSystem os;</span><br><span class="line"><span class="comment">//如果文件中的餐桌数量不等于0 那么不用将构造函数中初始化的餐桌数量写入文件</span></span><br><span class="line"><span class="keyword">if</span>(<span class="built_in">getTableNum</span>() == <span class="number">0</span>) os.<span class="built_in">writeFile</span>();</span><br><span class="line">os.<span class="built_in">init</span>();</span><br><span class="line">os.<span class="built_in">mainMenu</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>C语言学习笔记</title>
      <link href="/2023/10/21/00002/"/>
      <url>/2023/10/21/00002/</url>
      
        <content type="html"><![CDATA[<p><em>记录大一学习C语言时的课堂作业</em></p><h3 id="一、循环结构程序设计"><a href="#一、循环结构程序设计" class="headerlink" title="一、循环结构程序设计"></a>一、循环结构程序设计</h3><ol><li>求s&#x3D;1+2+3+……+98+99+100的值。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">100</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="2"><li>求s&#x3D;1+3+5+……+97+99的值。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">99</span>; i = i + <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">s += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="3"><li>求s&#x3D;1-3+5-7+……+97-99的值。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">50</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s += (<span class="number">2</span> * i - <span class="number">1</span>) * <span class="built_in">pow</span>(<span class="number">-1</span>, i + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="4"><li>求π的值，已知π&#x2F;4≈1-1&#x2F;3+1&#x2F;5-1&#x2F;7+…… ，计算至某项的绝对值小于1E-6为止（1E-6表示的是浮点数，即1*10的-6次方）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> s = <span class="number">0</span>, j = <span class="number">1</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; <span class="number">1</span> / (<span class="number">2</span> * i - <span class="number">1</span>) &gt;= <span class="number">1e-6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s += j / (<span class="number">2</span> * i - <span class="number">1</span>);</span><br><span class="line">j = -j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;π的值约为%lf\n&quot;</span>, <span class="number">4</span> * s);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="5"><li>求s&#x3D;1+2!+3!+4!+……+19!+20! 的值（n!表示n的阶乘）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> k = <span class="number">1</span>, sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">20</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">k *= i;</span><br><span class="line">sum += k;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="6"><li>求s&#x3D;1+3!+5!+7!+……+17!+19!的值（n!表示n的阶乘）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">long</span> <span class="type">long</span> s = <span class="number">1</span>, sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">19</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">s *= i;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">1</span>) sum += s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lld\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="7"><li>任意输入x的值，求sinx≈x-x3&#x2F;3!+x5&#x2F;5!-x7&#x2F;7!+……,直到某项的绝对值小于1E-6为止，最后输出sinx的值（1E-6表示的是浮点数，也就是1*10的-6次方）。</li></ol><ul><li>若输入x的单位为角度：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> x = <span class="number">0</span>, y = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">1</span>, jc = <span class="number">1</span>;<span class="comment">//其中jc表示阶乘的值</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入x的值【角度】:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line">x = x * <span class="number">3.1415926</span> / <span class="number">180</span>;</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">fabs</span>(<span class="built_in">pow</span>(<span class="number">-1</span>, i) * <span class="built_in">pow</span>(x, j) / jc) &gt;= <span class="number">0.000001</span>)</span><br><span class="line">&#123;</span><br><span class="line">y += <span class="built_in">pow</span>(<span class="number">-1</span>, i) * <span class="built_in">pow</span>(x, j) / jc;</span><br><span class="line">i++;</span><br><span class="line">j += <span class="number">2</span>;</span><br><span class="line">jc *= (j - <span class="number">1</span>) * j;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;sinx = %lf\n&quot;</span>, y);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>若输入x的单位为弧度：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> i = <span class="number">1</span>, jc = <span class="number">1</span>, sum = <span class="number">0</span>, x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入x的值【弧度】:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">pow</span>(x, i) / jc &gt;= <span class="number">0.000001</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum += <span class="built_in">pow</span>(<span class="number">-1</span>, (i - <span class="number">1</span>) / <span class="number">2</span>) * <span class="built_in">pow</span>(x, i) / jc;</span><br><span class="line">i += <span class="number">2</span>;</span><br><span class="line">jc *= i * (i - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;则sinx = %lf\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="8"><li>已知s&#x3D;1&#x2F;1+2&#x2F;1+3&#x2F;2+5&#x2F;3+8&#x2F;5+……，求前40项之和。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> a[<span class="number">41</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">41</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = (i == <span class="number">0</span> || i == <span class="number">1</span>) ? <span class="number">1</span> : a[i - <span class="number">2</span>] + a[i - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">40</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += a[i + <span class="number">1</span>] / a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="9"><li>已知s&#x3D;1+11+111+1111+……. 一直加到n位1，n的值自己输入。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> sum = <span class="number">0</span>, k = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入n的值:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n ; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += k;</span><br><span class="line">k = <span class="number">10</span> * k + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.0lf\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="10"><li>已知s&#x3D;1+12+123+1234+… 一直加到n位123…n，n的值自己输入。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> ans = <span class="number">0</span>, s = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, n = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入n的值:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">1</span>; ; m *= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt;= m &amp;&amp; i &lt; <span class="number">10</span> * m )</span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">10</span> * m * s + i;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ans += s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.0lf\n&quot;</span>, ans);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="11"><li>从键盘上输入若干学生的程序设计成绩，计算并输出所有学生的平均分和最高成绩。当输入负数的时候循环结束，再输出结果。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> t = <span class="number">0</span>, ave = <span class="number">0</span>, sum = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入各个学生的C语言成绩（输入负数时结束）:\n&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (<span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;t)) <span class="comment">//scanf返回参数的个数，也就是1</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (t &lt; <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">if</span> (max &lt; t) max = t;</span><br><span class="line">sum += t;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">ave = sum / i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;平均成绩为:%lf,最高成绩为:%lf\n&quot;</span>, ave, max);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="12"><li>任意输入一个正整数，判断其是否是素数，所谓素数就是指质数。（建议使用2到3种方法来实现判断）。</li></ol><ul><li>版本一：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>, flag = <span class="number">1</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n &lt;= <span class="number">1</span> || flag == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;它不是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;它是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>版本二：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n % i == <span class="number">0</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">/*通过判断以上循环是否完成来确定输入的数是否质数*/</span></span><br><span class="line"><span class="keyword">if</span> (i == n)<span class="built_in">printf</span>(<span class="string">&quot;它是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;它不是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>版本三：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, i = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= x; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>) n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">2</span>) <span class="built_in">printf</span>(<span class="string">&quot;它是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;它不是质数\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/><ol start="13"><li>输出1000以内所有的质数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">2</span>; x &lt;= <span class="number">1000</span>; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= x; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>拓展：质数筛</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="type">const</span> <span class="type">int</span> N = <span class="number">1e7</span> + <span class="number">10</span>;</span><br><span class="line"><span class="type">int</span> isprime[N + <span class="number">10</span>];</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//把N(N=1e7+10)以内的素数筛选出来  状态标记为1</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= N; i++)</span><br><span class="line">&#123;</span><br><span class="line">isprime[i] = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i * i &lt;= N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isprime[i])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = i * i; j &lt;= N; j += i)</span><br><span class="line">&#123;</span><br><span class="line">isprime[j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">2</span>; i &lt;= <span class="number">1000</span>; i++) <span class="comment">//输出1000以内的素数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isprime[i]) cout &lt;&lt; i &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="14"><li>输入一个正整数，输出比它小的最大的最多的10个质数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, i = <span class="number">0</span>, flag = <span class="number">1</span>, num = <span class="number">0</span>, z = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;z);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;比这个数小的最大的十个质数为:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (x = z; x &gt;= <span class="number">2</span>; x--)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= x; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">1</span>)<span class="comment">//此条件值为真，证明了x是素数</span></span><br><span class="line">&#123;</span><br><span class="line">num++;<span class="comment">//先计算个数</span></span><br><span class="line"><span class="keyword">if</span> (num &lt;= <span class="number">10</span>) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">break</span>;<span class="comment">//输出10个素数就终止循环！</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="15"><li>任意输入2个正整数给自变量x和y，求它们的最大公约数和最小公倍数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入两个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="comment">//求最大公约数</span></span><br><span class="line"><span class="keyword">for</span> (i = x; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span> &amp;&amp; y % i == <span class="number">0</span>)</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大公约数：%d\n&quot;</span>, i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最小公倍数：%d\n&quot;</span>, x * y / i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="16"><li>爱因斯坦阶梯问题：设有一阶梯，每步跨2阶余1阶，每步跨3阶余2阶，每步跨5阶余4阶，每步跨6阶余5阶，每步跨7阶刚好到顶，问该阶梯一共有多少阶？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (!(n % <span class="number">2</span> == <span class="number">1</span> &amp;&amp; n % <span class="number">3</span> == <span class="number">2</span> &amp;&amp; n % <span class="number">5</span> == <span class="number">4</span> &amp;&amp; n % <span class="number">6</span> == <span class="number">5</span> &amp;&amp; n % <span class="number">7</span> == <span class="number">0</span>))</span><br><span class="line">&#123;</span><br><span class="line">n++;<span class="comment">//求出的值为满足条件的最小值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="17"><li>任意输入一个十进制整数，要求输出对应的二进制结果（最后结果表示为4个字节，即32位二进制的形式）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, a[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input decimal number:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x); <span class="comment">//带符号的32位二进制数转换为十进制的范围为[-2147483647,2147483647]</span></span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) a[<span class="number">31</span>] = <span class="number">1</span>;</span><br><span class="line">y = x &gt; <span class="number">0</span> ? x : -x; <span class="comment">//将x的绝对值赋值给y</span></span><br><span class="line"><span class="keyword">while</span> (y &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = y % <span class="number">2</span>;</span><br><span class="line">i++;</span><br><span class="line">y = y / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="comment">//对于负数，这里计算的是负数的二进制补码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">30</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = !a[i]; <span class="comment">//除开符号位以外其余各位按位求反 1-&gt;0 0-&gt;1</span></span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">0</span>]++;    <span class="comment">//末位+1</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i++) <span class="comment">//处理进位</span></span><br><span class="line">&#123;</span><br><span class="line">a[i] += a[i - <span class="number">1</span>] / <span class="number">2</span>;</span><br><span class="line">a[i - <span class="number">1</span>] = a[i - <span class="number">1</span>] % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">30</span>] = a[<span class="number">30</span>] % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Output binary number:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">31</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="18"><li>根据媒体发布的信息，2010年中国GDP总量为5.845万亿美元，增长率是10.1%；美国GDP总量是14.536万亿美元，增长率3.3%，在2个GDP增长率保持2010年的水平不变的情况下，编程计算到哪一年中国的GDP总量有望超过美国？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">2010</span>;</span><br><span class="line"><span class="type">double</span> m = <span class="number">14.536</span>, z = <span class="number">5.845</span>;</span><br><span class="line"><span class="keyword">while</span> (m &gt;= z)</span><br><span class="line">&#123;</span><br><span class="line">z = z * <span class="number">1.101</span>;</span><br><span class="line">m = m * <span class="number">1.033</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;到%d年中国的GDP有望超过美国\n&quot;</span>, i);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="19"><li>从键盘上任意输入2个正整数给a和b，计算a和b之间所有整数（包括a和b）的累加和，并输出结果。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, t = <span class="number">0</span>, i = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入a和b的值(以空格分开)：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &gt; b) <span class="comment">//保证a不大于b</span></span><br><span class="line">&#123;</span><br><span class="line">t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = a; i &lt;= b; i++) sum += i;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;a到b的累加和为：%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="20"><li>张三在10年前存了一笔钱准备用来购房，按照当时的房价，这笔钱可以买房150平方米。已知银行存款年利率为6%，房价却按照每年10%的速度增长，请编写程序，计算张三存的这笔钱现在能购买多少平米的房子？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> s = <span class="number">150</span>, m = <span class="number">1</span>, i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">m = m * <span class="number">1.1</span>;</span><br><span class="line">s = s * <span class="number">1.06</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;张三的存款现在可以购买%lf平米的房子\n&quot;</span>, s / m);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="21"><li>某班级准备举行一次五子棋比赛，参赛选手每人之间必须进行一场对弈，进过统计发现一共进行了300场比赛，编程，计算并输出参赛的人数是多少？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">1</span>, s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (s != <span class="number">300</span>)</span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">s = s + (n - <span class="number">1</span>); <span class="comment">//握手定理</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="22"><li>输入1000以内所有的完数，所谓完数是指一个数值刚好是它的因子之和（但是因子中不包含本身），例如6&#x3D;1+2+3,所以6就是完数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, i = <span class="number">0</span>, s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">1</span>; x &lt;= <span class="number">1000</span>; x++)</span><br><span class="line">&#123;</span><br><span class="line">s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= x / <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span>) s += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x == s) <span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, x);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="23"><li>一个口袋中有3个红球，5个白球，6个黑球，从其中任意取出8个球，要求至少有一个白球。</li></ol><ul><li><p>输出所有的可能组合。</p></li><li><p>计算这些可能出现的概率是多少？可参考组合数的通项公式及递推公式。</p></li></ul><p><img src="/img/images/00002/00002_3.png" alt="公式"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">C</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> m)</span> <span class="comment">//通过递归求解组合C(n,m)的值</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (m == <span class="number">0</span> || m == n)</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">return</span> C(n - <span class="number">1</span>, m) + C(n - <span class="number">1</span>, m - <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> white = <span class="number">0</span>, red = <span class="number">0</span>, black = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> p = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (white = <span class="number">1</span>; white &lt;= <span class="number">5</span>; white++) <span class="comment">//要求至少有一个白球，所以white的值从1开始</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (red = <span class="number">0</span>; red &lt;= <span class="number">3</span>; red++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (black = <span class="number">0</span>; black &lt;= <span class="number">6</span>; black++)</span><br><span class="line">&#123;</span><br><span class="line">p = C(<span class="number">5</span>, white) * C(<span class="number">3</span>, red) * C(<span class="number">6</span>, black) / C(<span class="number">14</span>, <span class="number">8</span>); <span class="comment">//通过组合求概率</span></span><br><span class="line"><span class="keyword">if</span> (white + red + black == <span class="number">8</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d个白球,%d个红球,%d个黑球的概率为:%lf\n&quot;</span>, white, red, black, p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="24"><li>有若干只鸡兔同在一个笼子里，从上面数，有36个头，从下面数，有100只脚。问笼中各有多少只鸡和兔？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> c = <span class="number">0</span>, r = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">36</span>; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (r = <span class="number">0</span>; r &lt;= <span class="number">36</span>; r++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">2</span> * c + <span class="number">4</span> * r == <span class="number">100</span> &amp;&amp; c + r == <span class="number">36</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;鸡:%d只 兔:%d只\n&quot;</span>, c, r);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="25"><li>0-9可以组成多少个没有重复的3位偶数？这里没有重复的就是指该数值中每位上的数值互不相等。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, sum = <span class="number">0</span>, a1 = <span class="number">0</span>, a2 = <span class="number">0</span>, a3 = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">100</span>; i &lt;= <span class="number">999</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">a1 = i % <span class="number">10</span>; <span class="comment">//个位</span></span><br><span class="line">a2 = i / <span class="number">10</span> % <span class="number">10</span>; <span class="comment">//十位</span></span><br><span class="line">a3 = i / <span class="number">100</span> % <span class="number">10</span>; <span class="comment">//百位</span></span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">2</span> == <span class="number">0</span> &amp;&amp; a1 != a2 &amp;&amp; a1 != a3 &amp;&amp; a2 != a3)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="26"><li>编写程序输出9*9乘法表。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d*%d=%d\t&quot;</span>, j, i, i * j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="27"><li>求出用1元人民币兑换1分，2分，5分硬币的所有兑换方案，要求兑换硬币总数是70枚。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (a = <span class="number">0</span>; a &lt;= <span class="number">100</span>; a++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (b = <span class="number">0</span>; b &lt;= <span class="number">50</span>; b++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (c = <span class="number">0</span>; c &lt;= <span class="number">20</span>; c++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a + b + c == <span class="number">70</span> &amp;&amp; a + <span class="number">2</span> * b + <span class="number">5</span> * c == <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d种方案：1分%d枚,2分%d枚,5分%d枚\n&quot;</span>, sum, a, b, c);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="28"><li>水仙花数是指一个N位正整数（N≥3），它的每个位上的数字的N次幂之和等于它本身。例如：153&#x3D;1^3^+5^3^+3^3^。 本题要求编写两个函数，一个判断给定整数是否水仙花数，另一个按从小到大的顺序打印出给定区间(m,n)内所有的水仙花数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">narcissistic</span><span class="params">(<span class="type">int</span> number)</span>; <span class="comment">//判断是否是水仙花数</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span>; <span class="comment">//打印m和n之间的水仙花数</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d %d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line">PrintN(m, n);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">narcissistic</span><span class="params">(<span class="type">int</span> number)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">50</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, j = <span class="number">0</span>, sum = <span class="number">0</span>, k = <span class="number">0</span>, t = <span class="number">1</span>;</span><br><span class="line"><span class="type">int</span> n = number;</span><br><span class="line"><span class="keyword">while</span> (number &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i++] = number % <span class="number">10</span>;</span><br><span class="line">number /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">&#123;</span><br><span class="line">t = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt; i; k++)</span><br><span class="line">t *= a[j];</span><br><span class="line">sum += t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sum == n) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">PrintN</span><span class="params">(<span class="type">int</span> m, <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = m + <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (narcissistic(i) == <span class="number">1</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="29"><li>输出以下图形（必须用循环的思想来解决）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">   *</span><br><span class="line">  ***</span><br><span class="line"> *****</span><br><span class="line">*******</span><br><span class="line"> *****</span><br><span class="line">  ***</span><br><span class="line">   *</span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>, x = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">4</span>; i++) <span class="comment">//第1至4行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= <span class="number">6</span> - i; k++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">1</span>; x &lt;= <span class="number">2</span> * i - <span class="number">1</span>; x++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">3</span>; i &gt;= <span class="number">1</span>; i--) <span class="comment">//第5至7行</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">1</span>; k &lt;= <span class="number">6</span> - i; k++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">1</span>; x &lt;= <span class="number">2</span> * i - <span class="number">1</span>; x++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;*&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="30"><li>某君从某年开始每年都举办一次生日party，并且每次都要吹熄与年龄相同根数的蜡烛。现在算起来，他一共吹熄了236根蜡烛。请问，他从多少岁开始过生日party的？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>, sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">1</span>; y &lt;= <span class="number">236</span>; y++)</span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>; <span class="comment">//表示吹熄的蜡烛总数</span></span><br><span class="line"><span class="keyword">for</span> (i = y; i &lt;= <span class="number">236</span>; i++) <span class="comment">//从第y岁开始吹</span></span><br><span class="line">&#123;</span><br><span class="line">sum += i;</span><br><span class="line"><span class="keyword">if</span> (sum == <span class="number">236</span>) <span class="built_in">printf</span>(<span class="string">&quot;从%d岁开始过生日\n&quot;</span>, y);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sum &gt; <span class="number">236</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//运行结束后可以得到26和236两个答案，理论都可行，但236实际不可能，故答案为26</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="31"><li>输入年月日，计算这天是该年的第几天。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> year = <span class="number">0</span>, month = <span class="number">0</span>, day = <span class="number">0</span>, s = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入年月日（中间用空格隔开）: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;year, &amp;month, &amp;day);</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= month - <span class="number">1</span>)        <span class="comment">//计算所有整月的总天数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || i == <span class="number">3</span> || i == <span class="number">5</span> || i == <span class="number">7</span> || i == <span class="number">8</span> || i == <span class="number">10</span>)</span><br><span class="line">s = s + <span class="number">31</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">4</span> || i == <span class="number">6</span> || i == <span class="number">9</span> || i == <span class="number">11</span>)</span><br><span class="line">s = s + <span class="number">30</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">s = s + <span class="number">28</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">s = s + day;                 <span class="comment">//加上该非整月的day天</span></span><br><span class="line"><span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; month &gt;= <span class="number">3</span>)</span><br><span class="line">s++;                 <span class="comment">//如果为闰年，并且月份在2月之后，则s+1</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, s);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">DayNum</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> num[<span class="number">12</span>] = &#123;<span class="number">31</span>, <span class="number">28</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>, <span class="number">30</span>, <span class="number">31</span>&#125;;</span><br><span class="line"><span class="type">int</span> ans = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">1</span>; i &lt; m; i++) ans += num[i - <span class="number">1</span>];</span><br><span class="line">ans += d;</span><br><span class="line"><span class="keyword">if</span> (((y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span>) || y % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; m &gt;= <span class="number">3</span>) ans++;</span><br><span class="line"><span class="keyword">return</span> ans;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> year = <span class="number">0</span>, month = <span class="number">0</span>, day = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入年月日（中间用空格隔开）: &quot;</span>);</span><br><span class="line">cin &gt;&gt; year &gt;&gt; month &gt;&gt; day;</span><br><span class="line">cout &lt;&lt; <span class="built_in">DayNum</span>(year, month, day) &lt;&lt; endl;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="32"><li>输入一个起始年月日，再输入一个终止年月日，计算这2个日期之间一共有多少天？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span><span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DateNumber</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="comment">//函数DateNumber的作用是计算日期year-month-day是该年的第几天</span></span><br><span class="line"><span class="type">int</span> i = <span class="number">1</span>, s = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= month - <span class="number">1</span>)       <span class="comment">//计算所有整月的总天数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || i == <span class="number">3</span> || i == <span class="number">5</span> || i == <span class="number">7</span> || i == <span class="number">8</span> || i == <span class="number">10</span>)</span><br><span class="line">s = s + <span class="number">31</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">4</span> || i == <span class="number">6</span> || i == <span class="number">9</span> || i == <span class="number">11</span>)</span><br><span class="line">s = s + <span class="number">30</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">s = s + <span class="number">28</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">s = s + day;               <span class="comment">//加上该日期所处非整月的day天</span></span><br><span class="line"><span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; month &gt;= <span class="number">3</span>)</span><br><span class="line">s++;               <span class="comment">//如果为闰年，并且月份在2月之后，则s+1</span></span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y1 = <span class="number">0</span>, m1 = <span class="number">0</span>, d1 = <span class="number">0</span>, y2 = <span class="number">0</span>, m2 = <span class="number">0</span>, d2 = <span class="number">0</span>, s1 = <span class="number">0</span>, s2 = <span class="number">0</span>, i = <span class="number">0</span>, result = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入起始年月日（用空格隔开）: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;y1, &amp;m1, &amp;d1);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入终止年月日（用空格隔开）: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d%d&quot;</span>, &amp;y2, &amp;m2, &amp;d2);</span><br><span class="line">s1 = DateNumber(y1, m1, d1); <span class="comment">//调用函数DateNumber计算日期y1-m1-d1处于y1年的第几天</span></span><br><span class="line">s2 = DateNumber(y2, m2, d2); <span class="comment">//调用函数DateNumber计算日期y2-m2-d2处于y2年的第几天</span></span><br><span class="line"><span class="comment">//总天数=起始年剩的天数+中间所有年的天数+终止年已经过了的天数</span></span><br><span class="line">result = <span class="number">365</span> - s1 + <span class="number">365</span> * (y2 - y1 - <span class="number">1</span>) + s2;<span class="comment">//先默认都是平年，后面再纠正由于闰年带来的误差</span></span><br><span class="line"><span class="keyword">for</span> (i = y1 + <span class="number">1</span>; i &lt;= y2 - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; i % <span class="number">100</span> != <span class="number">0</span> || i % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">result++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> ((y1 % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y1 % <span class="number">100</span> != <span class="number">0</span> || y1 % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; (y1 != y2))</span><br><span class="line">result++;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从起始日至终止日共经过%d天\n&quot;</span>, result);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/><ol start="33"><li>任意输入一个年份，输出该年的日历（以下公式中的 [ ] 均代表取整）。</li></ol><ul><li>公式一：输入年月日year-month-day，求出该日期在该年是第S天，再由S和year求出对应星期w。</li></ul><p><img src="/img/images/00002/00002_4.png" alt="公式"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DateToWeek</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">1</span>, s = <span class="number">0</span>, week = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= month - <span class="number">1</span>)       <span class="comment">//计算所有整月的总天数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || i == <span class="number">3</span> || i == <span class="number">5</span> || i == <span class="number">7</span> || i == <span class="number">8</span> || i == <span class="number">10</span>)</span><br><span class="line">s = s + <span class="number">31</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">4</span> || i == <span class="number">6</span> || i == <span class="number">9</span> || i == <span class="number">11</span>)</span><br><span class="line">s = s + <span class="number">30</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">s = s + <span class="number">28</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">s = s + day;               <span class="comment">//加上该日期所处非整月的day天</span></span><br><span class="line"><span class="keyword">if</span> ((year % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; year % <span class="number">100</span> != <span class="number">0</span> || year % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; month &gt;= <span class="number">3</span>)</span><br><span class="line">s++;</span><br><span class="line">week = ((year - <span class="number">1</span>) + (year - <span class="number">1</span>) / <span class="number">4</span> - (year - <span class="number">1</span>) / <span class="number">100</span> + (year - <span class="number">1</span>) / <span class="number">400</span> + s) % <span class="number">7</span>;</span><br><span class="line"><span class="keyword">return</span> week;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>, m = <span class="number">0</span>, d = <span class="number">0</span>, w = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  输入年份：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> Days[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span> || y % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">Days[<span class="number">1</span>]++; <span class="comment">//闰年2月加一天</span></span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">1</span>; m &lt;= <span class="number">12</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          %4d年%2d月\n&quot;</span>, y, m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  --------------------------\n&quot;</span>);</span><br><span class="line">w = DateToWeek(y, m, <span class="number">1</span>); <span class="comment">//该年每个月1号为星期w</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  一  二  三  四  五  六  日\n&quot;</span>); <span class="comment">//中式日历排版</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= (w - <span class="number">1</span> + <span class="number">7</span>) % <span class="number">7</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>);  <span class="comment">//每次循环打印4个空格，循环次数由w决定</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= Days[m - <span class="number">1</span>]; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, i);</span><br><span class="line"><span class="keyword">if</span> ((w + i - <span class="number">1</span> + <span class="number">7</span>) % <span class="number">7</span> == <span class="number">0</span>)  <span class="comment">//换行依据和w有关</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>公式二：即蔡勒公式，输入年月日year-month-day，根据方程求出该日期对应星期w。</li></ul><p><img src="/img/images/00002/00002_5.png" alt="公式"></p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">DateToWeek</span><span class="params">(<span class="type">int</span> year, <span class="type">int</span> month, <span class="type">int</span> day)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (month == <span class="number">1</span> || month == <span class="number">2</span>) <span class="comment">//判断month是否为1或2　</span></span><br><span class="line">&#123;</span><br><span class="line">year--;</span><br><span class="line">month += <span class="number">12</span>; <span class="comment">//蔡勒公式需要把当年的1月和2月视作前一年的13月和14月</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> ye = year / <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> ar = year % <span class="number">100</span>;</span><br><span class="line"><span class="type">int</span> week = ye / <span class="number">4</span> - <span class="number">2</span> * ye + ar + ar / <span class="number">4</span> + <span class="number">26</span> * (month + <span class="number">1</span>) / <span class="number">10</span> + day - <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (week &lt; <span class="number">0</span>)</span><br><span class="line">week += <span class="number">7</span>;</span><br><span class="line">week %= <span class="number">7</span>;</span><br><span class="line"><span class="keyword">return</span> week;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> y = <span class="number">0</span>, m = <span class="number">0</span>, d = <span class="number">0</span>, w = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  输入年份：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="type">int</span> Days[<span class="number">12</span>] = &#123; <span class="number">31</span>,<span class="number">28</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span>,<span class="number">30</span>,<span class="number">31</span> &#125;;</span><br><span class="line"><span class="keyword">if</span> (y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span> || y % <span class="number">400</span> == <span class="number">0</span>)</span><br><span class="line">Days[<span class="number">1</span>]++; <span class="comment">//闰年2月加一天</span></span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">1</span>; m &lt;= <span class="number">12</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;          %4d年%2d月\n&quot;</span>, y, m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  --------------------------\n&quot;</span>);</span><br><span class="line">w = DateToWeek(y, m, <span class="number">1</span>); <span class="comment">//该年每个月1号为星期w</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;  日  一  二  三  四  五  六\n&quot;</span>); <span class="comment">//西式日历排版</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= w; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;    &quot;</span>); <span class="comment">//每次循环打印4个空格，循环次数由w决定</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= Days[m - <span class="number">1</span>]; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%4d&quot;</span>, i);</span><br><span class="line"><span class="keyword">if</span> ((w + i) % <span class="number">7</span> == <span class="number">0</span>)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="二、数组"><a href="#二、数组" class="headerlink" title="二、数组"></a>二、数组</h3><ol start="34"><li>输入一个寝室6位同学的身高，要求按照从小到大的顺序输出。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> h[<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;, t = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d个同学的身高:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;h[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (h[i] &gt; h[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t = h[i];</span><br><span class="line">h[i] = h[i + <span class="number">1</span>];</span><br><span class="line">h[i + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125; <span class="comment">//冒泡排序法，考试重点</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从小到大排列为:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++) <span class="built_in">printf</span>(<span class="string">&quot;%.2lf  &quot;</span>, h[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="35"><li>输入某班级所有同学的程序设计技术期末成绩（人数是33人），要求输出最好的2位同学的成绩。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> h[<span class="number">33</span>] = &#123; <span class="number">0</span> &#125;, t = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d个同学的C语言成绩:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;h[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">31</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">31</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (h[i] &gt; h[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t = h[i];</span><br><span class="line">h[i] = h[i + <span class="number">1</span>];</span><br><span class="line">h[i + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;两个最好成绩为:%lf和%lf\n&quot;</span>, h[<span class="number">31</span>], h[<span class="number">32</span>]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="36"><li>学校举行校园歌手大赛，一共有n位裁判（n由自己输入），这n位裁判位为选手打分，去掉一个最高分和去掉一个最低分，再计算平均分就是该选手的最后得分，请编写程序模仿7位裁判为某位选手的打分过程。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> t = <span class="number">0</span>, ave = <span class="number">0</span>, sum = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入裁判数量:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">double</span>* a = (<span class="type">double</span>*)<span class="built_in">malloc</span>(<span class="number">8</span> * n); <span class="comment">//动态申请内存;</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;请第%d个裁判打分:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n - <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">2</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t = a[i];</span><br><span class="line">a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">a[i + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n - <span class="number">1</span>; i++) sum += a[i];</span><br><span class="line">ave = sum / (n - <span class="number">2</span>); <span class="comment">//计算平均分</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;去掉最高分和最低分,选手最后平均得分为%lf\n&quot;</span>, ave);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="37"><li>任意输入10个数值，计算出它们的平均值，然后求得并输出与平均值最接近的数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> h[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;, k[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">double</span> ave = <span class="number">0</span>, sum = <span class="number">0</span>, min = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d个同学的身高:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;h[i]);</span><br><span class="line">sum = sum + h[i];</span><br><span class="line">&#125;</span><br><span class="line">ave = sum / <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;平均身高为%lf\n&quot;</span>, ave);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">k[i] = <span class="built_in">fabs</span>(h[i] - ave); <span class="comment">//求出各身高与平均值的差的绝对值</span></span><br><span class="line"></span><br><span class="line">min = k[<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (min &gt; k[i])</span><br><span class="line">min = k[i];<span class="comment">//求十个差值中的最小值</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">9</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="built_in">fabs</span>(ave - h[i]) == min) <span class="comment">//找出满足要求的那个身高</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;与平均值最接近的身高为%lf\n&quot;</span>, h[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="38"><li>输入班级33位同学的程序设计技术期末成绩（百分制，分数控制在0-100之间），分别统计优，良，中，及格，不及格等5种情况的人数，以及百分比。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x[<span class="number">33</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>, e = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;第%d个同学的成绩【0-100】为:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x[i]);</span><br><span class="line"><span class="keyword">while</span> (x[i] &gt; <span class="number">100</span> || x[i] &lt; <span class="number">0</span>) <span class="comment">//纠错功能</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;你输入的分数不正确，请你重新输入第%d个同学的成绩[0,100]:&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">32</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (<span class="number">90</span> &lt;= x[i] &amp;&amp; x[i] &lt;= <span class="number">100</span>)</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">80</span> &lt;= x[i])</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">70</span> &lt;= x[i])</span><br><span class="line">c++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">60</span> &lt;= x[i])</span><br><span class="line">d++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (<span class="number">0</span> &lt;= x[i])</span><br><span class="line">e++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;优秀%d人,占比%lf%%\n&quot;</span>, a, (<span class="type">double</span>)a / <span class="number">33</span> * <span class="number">100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;良好%d人,占比%lf%%\n&quot;</span>, b, (<span class="type">double</span>)b / <span class="number">33</span> * <span class="number">100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;中等%d人,占比%lf%%\n&quot;</span>, c, (<span class="type">double</span>)c / <span class="number">33</span> * <span class="number">100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;及格%d人,占比%lf%%\n&quot;</span>, d, (<span class="type">double</span>)d / <span class="number">33</span> * <span class="number">100</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;不及格%d人,占比%lf%%\n&quot;</span>, e, (<span class="type">double</span>)e / <span class="number">33</span> * <span class="number">100</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="39"><li>将一个整数逆序排列并输出。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, k = <span class="number">0</span>, a = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个整数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">x = k &gt; <span class="number">0</span> ? k : -k;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;逆序排列后为：&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (k &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (k == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a = x % <span class="number">10</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a);</span><br><span class="line">x = x / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="40"><li>FIBONACCI数列，已知该数列的第1个数值是1，第2个数值也是1，从第3个数值开始，每个数值等于其前2个数值之和，请编程输出该数列的前40项。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">40</span>] = &#123; <span class="number">0</span> &#125;, i;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">39</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = (i == <span class="number">0</span> || i == <span class="number">1</span>) ? <span class="number">1</span> : a[i - <span class="number">1</span>] + a[i - <span class="number">2</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="41"><li>编写程序，请给一个一维数组任意输入6个整数，例如：假设输入如下数值：</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">7</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">1</span> <span class="number">5</span></span><br></pre></td></tr></table></figure><p>要求建立一个具有如下内容的方阵并输出：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span><span class="number">7</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span><span class="number">5</span><span class="number">7</span> <span class="number">4</span> <span class="number">8</span> <span class="number">9</span></span><br><span class="line"><span class="number">9</span><span class="number">1</span><span class="number">5</span><span class="number">7</span> <span class="number">4</span> <span class="number">8</span></span><br><span class="line"><span class="number">8</span><span class="number">9</span><span class="number">1</span><span class="number">5</span><span class="number">7</span> <span class="number">4</span></span><br><span class="line"><span class="number">4</span><span class="number">8</span><span class="number">9</span><span class="number">1</span><span class="number">5</span><span class="number">7</span></span><br><span class="line"><span class="number">7</span><span class="number">4</span><span class="number">8</span><span class="number">9</span><span class="number">1</span><span class="number">5</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">6</span>][<span class="number">6</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, m = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;任意输入六个数值:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[<span class="number">5</span>][i]);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (m = <span class="number">0</span>; m &lt;= <span class="number">5</span>; m++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i - j == <span class="number">5</span> - m || i - j == <span class="number">-1</span> - m) <span class="comment">//计算二维数组各个变量的值</span></span><br><span class="line">a[i][j] = a[<span class="number">5</span>][m];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">5</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i][j]); <span class="comment">//二维数组的矩阵形式输出</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="42"><li>请编写程序实现功能：从键盘上输入6名学生的5门成绩，分别统计出每个学生的平均成绩和总成绩，并输出。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> s[<span class="number">6</span>][<span class="number">7</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d位同学的5门成绩(以空格分开)：&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">5</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;s[i][j]);</span><br><span class="line">s[i][<span class="number">5</span>] += s[i][j];</span><br><span class="line">&#125;</span><br><span class="line">s[i][<span class="number">6</span>] = s[i][<span class="number">5</span>] / <span class="number">5</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;科目&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;高数&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;思修&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;英语&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;离散&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;C语言&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;总分&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;平均分&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">6</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;成绩&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; <span class="number">7</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10.0lf&quot;</span>, s[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="43"><li>任意输入3行4列的矩阵中的所有值，求转置矩阵。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">3</span>][<span class="number">4</span>] = &#123; <span class="number">0</span> &#125;, b[<span class="number">4</span>][<span class="number">3</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入3行4列的矩阵的值:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">b[j][i] = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其转置矩阵为：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, b[j][i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="44"><li>任意输入一个二维数组4行5列的所有制，找到并输出该二维数组中最大值及其位置。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">4</span>][<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>, max = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入4行5列矩阵的值:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">max = a[<span class="number">0</span>][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] &gt; max)</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">4</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][j] == max)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最大值为a[%d][%d]=%d\n&quot;</span>, i, j, max);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="45"><li>编写程序输出n行n列的杨辉三角。n的值自己输入,如下所示：</li></ol><p>输入：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">5</span></span><br></pre></td></tr></table></figure><p>输出：</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">2</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">3</span> <span class="number">3</span> <span class="number">1</span></span><br><span class="line"><span class="number">1</span> <span class="number">4</span> <span class="number">6</span> <span class="number">4</span> <span class="number">1</span></span><br></pre></td></tr></table></figure><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>][<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, j = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入n的值:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d行%d列的杨辉三角为:\n&quot;</span>, n, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (j == <span class="number">0</span> || i == j)</span><br><span class="line">a[i][j] = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">a[i][j] = a[i - <span class="number">1</span>][j] + a[i - <span class="number">1</span>][j - <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\t&quot;</span>, a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="46"><li>鞍点(Saddle point)在微分方程中，沿着某一方向是稳定的，另一条方向是不稳定的奇点，叫做鞍点。在泛函中，既不是极大值点也不是极小值点的临界点，叫做鞍点。在矩阵中，一个数在所在行中是最大值，在所在列中是最小值，则被称为鞍点。在物理上要广泛一些，指在一个方向是极大值，另一个方向是极小值的点。输入n行n列的矩阵，求出鞍点。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, n = <span class="number">0</span>, m = <span class="number">0</span>, x = <span class="number">0</span>, y = <span class="number">0</span>, min = <span class="number">0</span>, max = <span class="number">0</span>, flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入矩阵的行数m和列数n：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;m, &amp;n);</span><br><span class="line"><span class="type">int</span>** a;</span><br><span class="line">a = (<span class="type">int</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>*) * m);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">a[i] = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n); <span class="comment">//为m行n列的二维数组动态开辟空间</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入矩阵各个元素的值(以空格分隔):\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= m - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n - <span class="number">1</span>; j++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a[i][j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= m - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">max = a[i][<span class="number">0</span>];</span><br><span class="line"><span class="keyword">for</span> (y = <span class="number">0</span>; y &lt;= n - <span class="number">2</span>; y++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i][y] &lt; a[i][y + <span class="number">1</span>])</span><br><span class="line">max = a[i][y + <span class="number">1</span>];</span><br><span class="line">&#125;</span><br><span class="line">min = a[<span class="number">0</span>][j];</span><br><span class="line"><span class="keyword">for</span> (x = <span class="number">0</span>; x &lt;= m - <span class="number">2</span>; x++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[x][j] &gt; a[x + <span class="number">1</span>][j])</span><br><span class="line">min = a[x + <span class="number">1</span>][j];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (max == a[i][j] &amp;&amp; min == a[i][j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;YES,鞍点值为%d,坐标为第%d行第%d列\n&quot;</span>, a[i][j], i, j);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;NO\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; m; i++) <span class="built_in">free</span>(a[i]);</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="47"><li>任意输入一段英文，统计其中英文字符a的个数，不区分大小写。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> E[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(E);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] == <span class="string">&#x27;A&#x27;</span> || E[i] == <span class="string">&#x27;a&#x27;</span>)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字符a（不区分大小写）的个数是%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="48"><li>任意输入一段英文，分别统计出其中26个英文字母各自的个数，不区分大小写。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> E[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(E);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">65</span>; j &lt;= <span class="number">90</span>; j++) <span class="comment">//这里是A到Z在ASCII码表中的范围</span></span><br><span class="line">&#123;</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] == j || E[i] == j + <span class="number">32</span>) <span class="comment">//对数组E中每个位置上的字符进行依次判断属于A 或者 a</span></span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字符%c的个数是%d\n&quot;</span>, j, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="49"><li>任意输入一段英文，分别统计出英文字符、数字字符、空格字符和其他字符等四大类字符各自的个数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> E[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(E);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;Z&#x27;</span> || E[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (E[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (E[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">c++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字符个数是%d\n&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数字字符个数是%d\n&quot;</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;空格字符个数是%d\n&quot;</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其他字符个数是%d\n&quot;</span>, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="50"><li>任意输入一段英文，统计其中英文单词的个数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> E[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(E);</span><br><span class="line">sum = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] &gt;= <span class="number">65</span> &amp;&amp; E[i] &lt;= <span class="number">90</span> || E[i] &gt;= <span class="number">97</span> &amp;&amp; E[i] &lt;= <span class="number">122</span>) <span class="comment">//左边是英文字母</span></span><br><span class="line"><span class="keyword">if</span> (!(E[i + <span class="number">1</span>] &gt;= <span class="number">65</span> &amp;&amp; E[i + <span class="number">1</span>] &lt;= <span class="number">90</span> || E[i + <span class="number">1</span>] &gt;= <span class="number">97</span> &amp;&amp; E[i + <span class="number">1</span>] &lt;= <span class="number">122</span>)) <span class="comment">//右边不是英文字母</span></span><br><span class="line"><span class="keyword">if</span> (E[i + <span class="number">1</span>] != <span class="string">&#x27;-&#x27;</span>) <span class="comment">//右边也不是符号&quot;-&quot;</span></span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;单词个数是%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="51"><li>任意输入一段英文，将其中所有的数字字符删除,再输出结果（删除功能采用的是后面往前覆盖的思路设计）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delete_zf</span><span class="params">(<span class="type">char</span> zfc[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line">n = <span class="built_in">strlen</span>(zfc); <span class="comment">//计算字符串长度</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (zfc[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; zfc[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = i + <span class="number">1</span>; j &lt;= n; j++)</span><br><span class="line">&#123;</span><br><span class="line">zfc[j - <span class="number">1</span>] = zfc[j];<span class="comment">//从i+1位置开始到n位置的字符整体往前覆盖</span></span><br><span class="line">&#125;</span><br><span class="line">i--; <span class="comment">//删除之后i不能变，因为它这个位置放的是后面覆盖过来的且没有判断过的字符</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> zfc[<span class="number">1000</span>], del;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(zfc);</span><br><span class="line">delete_zf(zfc);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输出删除数字字符之后的英文:&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(zfc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="52"><li>从键盘上任意输入一个字符串，将该字符串中的字符按照ASCII码的顺序从小到大的顺序排序后输出。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个字符串:\n&quot;</span>);</span><br><span class="line">gets(a);</span><br><span class="line">n = <span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= n - <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">2</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] &gt; a[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t = a[i];</span><br><span class="line">a[i] = a[i + <span class="number">1</span>];</span><br><span class="line">a[i + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该字符串按照ASCII码的顺序从小到大的顺序排序为:\n&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(a);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="53"><li>编程实现输入一行字符，将其中重复出现的字符全部删除。例如：若输入字符串：abcdabghakdmncdgkp，则删除重复字符后应输出：abcdghkmnp。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> a[<span class="number">1000</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个字符串:\n&quot;</span>);</span><br><span class="line">gets(a);</span><br><span class="line">n = <span class="built_in">strlen</span>(a);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i - <span class="number">1</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[i] == a[j])</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (k = i + <span class="number">1</span>; k &lt;= n - <span class="number">1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line">a[k - <span class="number">1</span>] = a[k];</span><br><span class="line">&#125;</span><br><span class="line">n--; <span class="comment">//删除某个重复字母后，更新当前的字符数组长度</span></span><br><span class="line">i--; <span class="comment">//防止遇到连续相同字符时漏删</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;该字符串删除重复元素后为:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (k = <span class="number">0</span>; k &lt;= n - <span class="number">1</span>; k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, a[k]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="三、自定义函数"><a href="#三、自定义函数" class="headerlink" title="三、自定义函数"></a>三、自定义函数</h3><ol start="54"><li>任意输入一个整数，编写一个函数isPrimeNumber用来判断输入的整数是否是素数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrimeNumber</span><span class="params">(<span class="type">int</span> s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (s &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= s; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">if</span> (isPrimeNumber(n)) <span class="built_in">printf</span>(<span class="string">&quot;这个数是素数\n&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="built_in">printf</span>(<span class="string">&quot;这个数不是素数\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="55"><li>编写函数求Fibonacci数列的第n项的值，然后在主函数中调用该函数输出第n项的值。</li></ol><ul><li>递归法，效率低：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">fib</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (n == <span class="number">1</span> || n == <span class="number">2</span>) ? <span class="number">1</span> : fib(n - <span class="number">1</span>) + fib(n - <span class="number">2</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;斐波那契数列第%d项为:%.0lf\n&quot;</span>, n, fib(n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>迭代法，效率高：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> f1 = <span class="number">0</span>, f2 = <span class="number">1</span>, fn = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= n; i++)</span><br><span class="line">&#123;</span><br><span class="line">fn = f1 + f2;</span><br><span class="line">f1 = f2, f2 = fn;</span><br><span class="line">&#125; <span class="comment">//迭代法求斐波那契数列</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%.0lf&quot;</span>, f1);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="56"><li>编写排序的函数sort，实现调用该函数对任意一组数据进行从小到大的顺序排序（建议使用冒泡排序法的格式书写）。</li></ol><ul><li>冒泡排序法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">bubble_sort</span><span class="params">(<span class="type">int</span>* q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; r - l; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; r - l - i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q[j] &gt; q[j + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = q[j];</span><br><span class="line">q[j] = q[j + <span class="number">1</span>];</span><br><span class="line">q[j + <span class="number">1</span>] = temp;</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="keyword">return</span>; <span class="comment">//对冒泡排序的优化</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入各元素：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p[i]);</span><br><span class="line">bubble_sort(p, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>快速排序法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">quick_sort</span><span class="params">(<span class="type">int</span>* q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span> x = q[l + (r - l) / <span class="number">2</span>], i = l - <span class="number">1</span>, j = r + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">while</span> (q[++i] &lt; x);</span><br><span class="line"><span class="keyword">while</span> (q[--j] &gt; x);</span><br><span class="line"><span class="keyword">if</span> (i &lt; j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> temp = q[i];</span><br><span class="line">q[i] = q[j];</span><br><span class="line">q[j] = temp;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">quick_sort(q, l, j);</span><br><span class="line">quick_sort(q, j + <span class="number">1</span>, r);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入各元素：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p[i]);</span><br><span class="line">quick_sort(p, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>归并排序法：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">merge_sort</span><span class="params">(<span class="type">int</span>* q, <span class="type">int</span> l, <span class="type">int</span> r)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (l &gt;= r) <span class="keyword">return</span>;</span><br><span class="line"><span class="type">int</span>* temp = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * (r - l + <span class="number">1</span>));</span><br><span class="line"><span class="type">int</span> mid = l + (r - l) / <span class="number">2</span>;</span><br><span class="line">merge_sort(q, l, mid);</span><br><span class="line">merge_sort(q, mid + <span class="number">1</span>, r);</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>, i = l, j = mid + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid &amp;&amp; j &lt;= r)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (q[i] &lt;= q[j]) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">else</span> temp[k++] = q[j++];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= mid) temp[k++] = q[i++];</span><br><span class="line"><span class="keyword">while</span> (j &lt;= r) temp[k++] = q[j++];</span><br><span class="line"><span class="keyword">for</span> (i = l, j = <span class="number">0</span>; i &lt;= r; i++, j++) q[i] = temp[j];</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入元素个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* p = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入各元素：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;p[i]);</span><br><span class="line">merge_sort(p, <span class="number">0</span>, n - <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;排序后：&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, p[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="57"><li>任意输入一个正整数n，求n！（例如5！&#x3D;1 *2 *3 *4 *5），要求将求n！的过程写成自定义函数。</li></ol><ul><li>利用循环求解：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">fact</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span>  s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (n--) s *= (n + <span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d的阶乘为:%.0lf\n&quot;</span>, n, fact(n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>或者：</p><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="function"><span class="type">double</span> <span class="title">fact</span><span class="params">(<span class="type">int</span> n)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">double</span>  s = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">for</span> (; n &gt;= <span class="number">1</span>; n--)</span><br><span class="line">s *= n;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">(<span class="type">void</span>)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d的阶乘为:%.0lf\n&quot;</span>, n, <span class="built_in">fact</span>(n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>利用递归求解：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line">using namespace <span class="built_in">std</span>;</span><br><span class="line"><span class="type">double</span> <span class="title function_">fact</span><span class="params">(<span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (n == <span class="number">0</span> || n == <span class="number">1</span>) ? <span class="number">1</span> : (n * fact(n - <span class="number">1</span>));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">cin</span> &gt;&gt; n;</span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; fixed &lt;&lt; setprecision(<span class="number">0</span>) &lt;&lt; fact(n) &lt;&lt; <span class="built_in">endl</span>; <span class="comment">//不以科学记数法输出，保留0位小数</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/><ol start="58"><li>汉诺塔（又称河内塔）问题是源于印度一个古老传说的益智玩具。大梵天创造世界的时候做了三根金刚石柱子，在一根柱子上从下往上按照大小顺序摞着64片黄金圆盘。大梵天命令婆罗门把圆盘从下面开始按大小顺序重新摆放在另一根柱子上。并且规定，每次移动一个圆盘，在小圆盘上不能放大圆盘，在三根柱子之间一次只能移动一个圆盘，柱子可以编号为A B C，编程输出n个圆盘从A柱子移动到C柱子的步骤。</li></ol><p><img src="/img/images/00002/00002_2.png" alt="汉诺塔游戏：把所有盘子从A移动到C"></p><p>解题思路：<br>（1）把A柱子上的前N-1个盘子借助C柱子，全部移动到B柱子上（过程暂不考虑），再把第N个盘子由A柱子移动到C柱子上，那么剩下要移动的盘子在B柱子上了。<br>（2）把B柱子上的前N-2个盘子借助C柱子，全部移动到A柱子上（过程暂不考虑），再把第N-1个盘子由B柱子移动到C柱子上。<br>（3）重复上面的两个步骤即可把A柱子上的盘子全部移动到C柱子上。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">loveyou</span><span class="params">(<span class="type">int</span> n, <span class="type">char</span> start, <span class="type">char</span> help, <span class="type">char</span> end)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n &gt;= <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">loveyou(n - <span class="number">1</span>, start, end, help);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c------&gt;%c\n&quot;</span>, start, end);</span><br><span class="line">loveyou(n - <span class="number">1</span>, help, start, end);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (n == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c------&gt;%c\n&quot;</span>, start, end);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入圆盘的数量:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line">loveyou(n, <span class="string">&#x27;A&#x27;</span>, <span class="string">&#x27;B&#x27;</span>, <span class="string">&#x27;C&#x27;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="59"><li>任意输入一段英文，分别统计出英文字符、数字字符、空格字符和其他字符等四大类字符各自的个数。要求将统计四大类字符个数的过程书写为自定义函数，输入、调用函数、输出结果放在主函数中完成。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">tjzf</span><span class="params">(<span class="type">char</span> E[])</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;Z&#x27;</span> || E[i] &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (E[i] &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; E[i] &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (E[i] == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">c++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> F[<span class="number">1000</span>];</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(F);</span><br><span class="line">tjzf(F);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字符个数是%d\n&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数字字符个数是%d\n&quot;</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;空格字符个数是%d\n&quot;</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其他字符个数是%d\n&quot;</span>, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="60"><li>一个班级有n位同学（n为正整数，由自己输入），输入他们的程序设计技术期末考试成绩，要求将求所有人的平均分功能、求最高分功能、最低分功能分别写成3个自定义函数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">double</span> <span class="title function_">getmax</span><span class="params">(<span class="type">double</span> a[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> max = a[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (max &lt; a[i]) max = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> max;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">getmin</span><span class="params">(<span class="type">double</span> a[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> min = a[<span class="number">0</span>];</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (min &gt; a[i]) min = a[i];</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> min;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">double</span> <span class="title function_">getave</span><span class="params">(<span class="type">double</span> a[], <span class="type">int</span> n)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> sum = <span class="number">0</span>, ave = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) sum += a[i];</span><br><span class="line">ave = sum / n;</span><br><span class="line"><span class="keyword">return</span> ave;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入班级人数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">double</span>* a = (<span class="type">double</span>*)<span class="built_in">malloc</span>(<span class="number">8</span> * n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入所有同学的成绩:\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;a[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;最高分为%.2lf,最低分为%.2lf,平均分为%.2lf\n&quot;</span>, getmax(a, n), getmin(a, n), getave(a, n));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="61"><li>输入2个正整数给x和y，求得这2个数值的最大公约数和最小公倍数，（要求求最大公约数和求最小公倍数的功能必须分别用自定义函数来完成）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gys</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = x; i &gt;= <span class="number">1</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x % i == <span class="number">0</span> &amp;&amp; y % i == <span class="number">0</span>) <span class="keyword">return</span> i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">gbs</span><span class="params">(<span class="type">int</span> x, <span class="type">int</span> y)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = x; i &lt;= x * y; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i % x == <span class="number">0</span> &amp;&amp; i % y == <span class="number">0</span>) <span class="keyword">return</span> i;;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入两个正整数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;a, &amp;b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;它们的最大公约数为%d，最小公倍数为%d\n&quot;</span>, gys(a, b), gbs(a, b));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="62"><li>验证歌德巴赫猜想：输入一个任何一个不小于6的偶数，它可以表示为两个素数之和，也就是两个质数之和（要求判断某个数是否是素数的过程用自定义函数来实现）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPrimeNumber</span><span class="params">(<span class="type">int</span> s)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (s &lt;= <span class="number">1</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i * i &lt;= s; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s % i == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个不小于4的偶数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line"><span class="keyword">while</span> (k % <span class="number">2</span> != <span class="number">0</span> || k &lt; <span class="number">4</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入错误,请重新输入:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">2</span>; i &lt;= k - <span class="number">2</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (isPrimeNumber(i) == <span class="number">1</span> &amp;&amp; isPrimeNumber(k - i) == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d+%d=%d\n&quot;</span>, i, k - i, k);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="63"><li>小明刚刚看完电影《第39级台阶》，离开电影院的时候，他数了数礼堂前的台阶数，恰好是39级!站在台阶前，他突然又想着一个问题：如果我每一步只能迈上1个或2个台阶。先迈左脚，然后左右交替，最后一步是迈右脚，也就是说一共要走偶数步。那么，上完39级台阶，有多少种不同的上法呢？请编写程序计算并输出结果。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> sf = <span class="number">0</span>;</span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> n, <span class="type">int</span> step)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (n &gt; <span class="number">39</span>) <span class="keyword">return</span>;</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">39</span> &amp;&amp; step % <span class="number">2</span> == <span class="number">0</span>) sf++;</span><br><span class="line">f(n + <span class="number">1</span>, step + <span class="number">1</span>);</span><br><span class="line">f(n + <span class="number">2</span>, step + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">f(<span class="number">0</span>, <span class="number">0</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;共有%d种上法\n&quot;</span>, sf);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="64"><li>角谷定理。输入一个自然数，若为偶数，则把它除以2，若为奇数，则把它乘以3加1。经过如此有限次运算后，总可以得到自然数值1。求经过多少次可得到自然数1（要求此题用函数的递归调用方法实现）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">pd</span><span class="params">(<span class="type">int</span> s, <span class="type">int</span> sum)</span> <span class="comment">//sum表示次数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s == <span class="number">1</span>) <span class="keyword">return</span> sum;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s &gt; <span class="number">1</span> &amp;&amp; s % <span class="number">2</span> == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">pd(s / <span class="number">2</span>, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s &gt; <span class="number">1</span> &amp;&amp; s % <span class="number">2</span> == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line">sum++;</span><br><span class="line">pd(<span class="number">3</span> * s + <span class="number">1</span>, sum);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">return</span> <span class="number">-1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一个自然数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;至少需经过%d次运算可以得到自然数1\n&quot;</span>, pd(a, <span class="number">0</span>));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="四、指针"><a href="#四、指针" class="headerlink" title="四、指针"></a>四、指针</h3><ol start="65"><li>从键盘输入一个字符串，要求找出大写字母、小写字母、空格、数字和其他字符各自的数量（必须用指针来完成）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a = <span class="number">0</span>, b = <span class="number">0</span>, c = <span class="number">0</span>, d = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span>* E = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="number">5000</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段英文:&quot;</span>);</span><br><span class="line">gets(E);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(E + i) &gt;= <span class="string">&#x27;A&#x27;</span> &amp;&amp; *(E + i) &lt;= <span class="string">&#x27;Z&#x27;</span> || *(E + i) &gt;= <span class="string">&#x27;a&#x27;</span> &amp;&amp; *(E + i) &lt;= <span class="string">&#x27;z&#x27;</span>)</span><br><span class="line">a++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(E + i) &gt;= <span class="string">&#x27;0&#x27;</span> &amp;&amp; *(E + i) &lt;= <span class="string">&#x27;9&#x27;</span>)</span><br><span class="line">b++;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (*(E + i) == <span class="string">&#x27; &#x27;</span>)</span><br><span class="line">c++;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">d++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英文字符个数是%d\n&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;数字字符个数是%d\n&quot;</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;空格字符个数是%d\n&quot;</span>, c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;其他字符个数是%d\n&quot;</span>, d);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="66"><li>输入n个整数（n由自己输入），要求输出最大值和最小值（必须用指针来完成）。</li></ol><ul><li>普通版：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">double</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入数据个数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">double</span>* p = (<span class="type">double</span>*)<span class="built_in">malloc</span>(<span class="number">8</span> * n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入这%d个数据:&quot;</span>, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, p + i);</span><br><span class="line"><span class="keyword">for</span> (j = n - <span class="number">2</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(p + i) &lt; *(p + i + <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">t = *(p + i);</span><br><span class="line">*(p + i) = *(p + i + <span class="number">1</span>);</span><br><span class="line">*(p + i + <span class="number">1</span>) = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从高到低排序后输出：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf\t&quot;</span>, *(p + i));</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>自定义函数版：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">input</span><span class="params">(<span class="type">double</span>* p, <span class="type">int</span> n)</span> <span class="comment">//输入函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入%d个数据:&quot;</span>, n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++)</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, p + i);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">output</span><span class="params">(<span class="type">double</span>* p, <span class="type">int</span> n)</span> <span class="comment">//输出函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按从高到低排序并输出：\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%lf\n&quot;</span>, *(p + i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">sort</span><span class="params">(<span class="type">double</span>* p, <span class="type">int</span> n)</span> <span class="comment">//排序函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="type">double</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (j = n - <span class="number">2</span>; j &gt;= <span class="number">0</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(p + i) &lt; *(p + i + <span class="number">1</span>))</span><br><span class="line">&#123;</span><br><span class="line">t = *(p + i);</span><br><span class="line">*(p + i) = *(p + i + <span class="number">1</span>);</span><br><span class="line">*(p + i + <span class="number">1</span>) = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span> <span class="comment">//主函数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入数据的个数：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">double</span>* p = (<span class="type">double</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">double</span>) * n);</span><br><span class="line">input(p, n);</span><br><span class="line">sort(p, n);</span><br><span class="line">output(p, n);</span><br><span class="line"><span class="built_in">free</span>(p);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="67"><li>输入10个整数，存入一维数组a中。要求设计一个函数move，实现如下功能：使数组a中前面各个元素顺序向后移动m个位置，最后m个数变成最前面的m个数（要求此题必须用自定义函数外加指针来实现数据的移动）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span> a[<span class="number">10</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入10个整数:&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++) <span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, a + i);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入需要移动的数据个数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">1</span>; j &lt;= m; j++)</span><br><span class="line">&#123;</span><br><span class="line">t = *(a + <span class="number">9</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">8</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">*(a + i + <span class="number">1</span>) = *(a + i);</span><br><span class="line">&#125;</span><br><span class="line">*(a + <span class="number">0</span>) = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; <span class="number">10</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d &quot;</span>, *(a + i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="68"><li>自定义一个函数，将一个十进制正整数转换为对应的二进制数（必须用指针来完成）。</li></ol><ul><li>数组版（转换为补码）：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DecToBin</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//正负数都可以转换,这里转换成对应的二进制补码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">32</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) a[<span class="number">31</span>] = <span class="number">1</span>;</span><br><span class="line">y = x &gt; <span class="number">0</span> ? x : -x; <span class="comment">//将x的绝对值赋值给y</span></span><br><span class="line"><span class="keyword">while</span> (y &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = y % <span class="number">2</span>;</span><br><span class="line">i++;</span><br><span class="line">y = y / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="comment">//对于负数，这里计算的是负数的二进制补码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">30</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = !a[i]; <span class="comment">//除开符号位以外其余各位按位求反 1-&gt;0 0-&gt;1</span></span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">0</span>]++;    <span class="comment">//末位+1</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">30</span>; i++) <span class="comment">//处理进位</span></span><br><span class="line">&#123;</span><br><span class="line">a[i] += a[i - <span class="number">1</span>] / <span class="number">2</span>;</span><br><span class="line">a[i - <span class="number">1</span>] = a[i - <span class="number">1</span>] % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line">a[<span class="number">30</span>] = a[<span class="number">30</span>] % <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">31</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, a[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input decimal number:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k); <span class="comment">//带符号的32位二进制数转换为十进制的范围为[-2147483647,2147483647]</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Output binary number:&quot;</span>);</span><br><span class="line">DecToBin(k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指针版（转换为原码）：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">DecToBin</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//正负数都可以转换,这里转换成对应的二进制原码</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="type">int</span>* a = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * <span class="number">32</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">31</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">*(a + i) = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>)</span><br><span class="line">*(a + <span class="number">31</span>) = <span class="number">1</span>; <span class="comment">//为负数定义符号位</span></span><br><span class="line">y = x &gt; <span class="number">0</span> ? x : -x; <span class="comment">//y取x的绝对值</span></span><br><span class="line">i = <span class="number">0</span>; <span class="comment">//给i重新赋值为0</span></span><br><span class="line"><span class="keyword">while</span> (y &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">*(a + i) = y % <span class="number">2</span>;</span><br><span class="line">i++;</span><br><span class="line">y = y / <span class="number">2</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">31</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, *(a + i));</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">free</span>(a);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input decimal number:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Output binary number:&quot;</span>);</span><br><span class="line">DecToBin(k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="69"><li>自定义一个函数，删除一个字符串中从第n个字符开始的连续m个字符（必须用指针来完成）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">void</span> <span class="title function_">delete_zf</span><span class="params">(<span class="type">char</span>* zf, <span class="type">int</span> n, <span class="type">int</span> m)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, c;</span><br><span class="line">c = <span class="built_in">strlen</span>(zf);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= c - n - m; i++)</span><br><span class="line">&#123;</span><br><span class="line">*(zf + n + i) = *(zf + n + i + m);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> zfc[<span class="number">1000</span>];</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>, n = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入一段字符串:&quot;</span>);</span><br><span class="line">gets(zfc);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;从第多少个字符开始删除:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;删除多少个字符:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;m);</span><br><span class="line">delete_zf(zfc, n - <span class="number">1</span>, m);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输出结果:&quot;</span>);</span><br><span class="line"><span class="built_in">puts</span>(zfc);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="70"><li>n个学生围成圈（n由自己输入），从第1个同学开始报数，（报数的方式是1，2，3），其中报到3的同学出列，重复之，直到最后只剩下一个同学为止。编程求得这个同学的原本的是第几个同学？（必须用指针来实现）。</li></ol><ul><li>数组版（跳出数字默认为3）：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, i = <span class="number">0</span>, k = <span class="number">3</span>, t = <span class="number">0</span>, num = <span class="number">0</span>; <span class="comment">//总人数n,跳出数字k</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入总人数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* ar = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++) <span class="comment">//给n个人编号</span></span><br><span class="line">&#123;</span><br><span class="line">ar[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = n; <span class="comment">//num用来临时存放总人数</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;; i++) <span class="comment">//终止条件置空实现无限循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n) <span class="comment">//回溯，转完一圈了</span></span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ar[i - <span class="number">1</span>] != <span class="number">0</span>) <span class="comment">//不为跳出数字k的同学跳过</span></span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t == k)</span><br><span class="line">&#123;</span><br><span class="line">ar[i - <span class="number">1</span>] = <span class="number">0</span>; <span class="comment">//出列的同学赋值为0</span></span><br><span class="line">num--; <span class="comment">//同时当前总人数减1</span></span><br><span class="line">t = <span class="number">0</span>; <span class="comment">//又重新开始计数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)<span class="comment">//只剩一人时跳出循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//打印目标值，最后编号不为0的同学就是剩下的那个</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ar[i] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这个同学原本是第%d个同学\n&quot;</span>, ar[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>指针版（跳出数字默认为3）：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, k = <span class="number">3</span>, i = <span class="number">0</span>, t = <span class="number">0</span>, num = <span class="number">0</span>; <span class="comment">//总人数n,跳出数字k</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入总人数:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;n);</span><br><span class="line"><span class="type">int</span>* ar = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//给n个人编号</span></span><br><span class="line">&#123;</span><br><span class="line">*(ar + i) = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = n; <span class="comment">//num用来临时存放总人数</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;; i++) <span class="comment">//终止条件置空实现无限循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n)<span class="comment">//回溯，转完一圈了</span></span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">if</span> (*(ar + i - <span class="number">1</span>) != <span class="number">0</span>) <span class="comment">//不为跳出数字k的同学跳过</span></span><br><span class="line">t++;</span><br><span class="line"><span class="keyword">if</span> (t == k)</span><br><span class="line">&#123;</span><br><span class="line">*(ar + i - <span class="number">1</span>) = <span class="number">0</span>; <span class="comment">//出列的同学赋值为0</span></span><br><span class="line">num--; <span class="comment">//同时当前总人数减1</span></span><br><span class="line">t = <span class="number">0</span>; <span class="comment">//又重新开始计数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)<span class="comment">//只剩一人时跳出循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//打印目标值，最后编号不为0的同学就是剩下的那个</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (*(ar + i) != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这个同学原本是第%d个同学\n&quot;</span>, ar[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>拓展（跳出数字由自己输入）：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> n, k, i = <span class="number">0</span>, t = <span class="number">0</span>, num = <span class="number">0</span>; <span class="comment">//总人数n,跳出数字k</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入总人数和跳出数字:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;n, &amp;k);</span><br><span class="line"><span class="type">int</span>* ar = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * n);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= n - <span class="number">1</span>; i++) <span class="comment">//给n个人编号</span></span><br><span class="line">&#123;</span><br><span class="line">ar[i] = i + <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">num = n; <span class="comment">//num用来临时存放总人数</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>;; i++) <span class="comment">//终止条件置空实现无限循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &gt; n) <span class="comment">//回溯，转完一圈了</span></span><br><span class="line">&#123;</span><br><span class="line">i = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ar[i - <span class="number">1</span>] != <span class="number">0</span>) <span class="comment">//不为跳出数字k的同学跳过</span></span><br><span class="line">&#123;</span><br><span class="line">t++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t == k) <span class="comment">//出列的同学赋值为0</span></span><br><span class="line">&#123;</span><br><span class="line">ar[i - <span class="number">1</span>] = <span class="number">0</span>;</span><br><span class="line">num--; <span class="comment">//同时总人数减1</span></span><br><span class="line">t = <span class="number">0</span>; <span class="comment">//又重新开始计数</span></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">1</span>)<span class="comment">//只剩一人时跳出循环</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; n; i++) <span class="comment">//打印目标值，最后编号不为0的同学就是剩下的那个</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (ar[i] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这个同学原本是第%d个同学\n&quot;</span>, ar[i]);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="五、结构体"><a href="#五、结构体" class="headerlink" title="五、结构体"></a>五、结构体</h3><ol start="71"><li>声明4个结构体类型来描述学生，其成员包括：学号、姓名、性别、C语言课程成绩。再定义一个结构体变量，从键盘输入各成员具体的数据，然后输出。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> number;</span><br><span class="line"><span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line"><span class="type">char</span> gender[<span class="number">5</span>];</span><br><span class="line"><span class="type">double</span> cscore;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入学号:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu.number);</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入姓名:&quot;</span>);</span><br><span class="line">gets(stu.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入性别:&quot;</span>);</span><br><span class="line">gets(stu.gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入C语言成绩:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stu.cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11d&quot;</span>, stu.number);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu.gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu.cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="72"><li>声明一个结构体类型来表示日期，其成员包括：年、月、曰，编写一个函数用于计算某日是本年中的第几天？</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">date_num</span><span class="params">(<span class="type">int</span> y, <span class="type">int</span> m, <span class="type">int</span> d)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> s = <span class="number">0</span>, i = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">while</span> (i &lt;= m - <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i == <span class="number">1</span> || i == <span class="number">3</span> || i == <span class="number">5</span> || i == <span class="number">7</span> || i == <span class="number">8</span> || i == <span class="number">10</span>)</span><br><span class="line">s = s + <span class="number">31</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">4</span> || i == <span class="number">6</span> || i == <span class="number">9</span> || i == <span class="number">11</span>)</span><br><span class="line">s = s + <span class="number">30</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (i == <span class="number">2</span>)</span><br><span class="line">s = s + <span class="number">28</span>;</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line">s = s + d;</span><br><span class="line"><span class="keyword">if</span> ((y % <span class="number">4</span> == <span class="number">0</span> &amp;&amp; y % <span class="number">100</span> != <span class="number">0</span> || y % <span class="number">400</span> == <span class="number">0</span>) &amp;&amp; m &gt;= <span class="number">3</span>)</span><br><span class="line">s++;</span><br><span class="line"><span class="keyword">return</span> s;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> num = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Date</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> year;</span><br><span class="line"><span class="type">int</span> month;</span><br><span class="line"><span class="type">int</span> day;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Date</span> <span class="title">date1</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入年份:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;date1.year);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入月份:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;date1.month);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入日期:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;date1.day); <span class="comment">//日期没做纠错功能，输入时请输入合法日期</span></span><br><span class="line">num = date_num(date1.year, date1.month, date1.day);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;这一天是该年的第%d天\n&quot;</span>, num);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="73"><li>某班有7名学生，均选修了C语言课程，要求统计该班C语言课程成绩不及格的学生人数，并输出不及格学生的信息（包括学号、姓名、性别、C语言课程成绩）。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;windows.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> H 200</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> number;</span><br><span class="line"><span class="type">char</span> name[<span class="number">11</span>];</span><br><span class="line"><span class="type">char</span> gender[<span class="number">5</span>];</span><br><span class="line"><span class="type">double</span> cscore;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[<span class="title">H</span>];</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">add_information</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, sel = <span class="number">0</span>;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">tem_stu</span>;</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|                欢迎来到信息录入功能                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].number == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t接下来请继续选择您的操作:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|   1 录入学生信息       |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|   2 返回主菜单         |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t请输入您的选择【1-2】：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line"><span class="keyword">while</span> (sel &lt; <span class="number">1</span> || sel&gt;<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入错误，请重新输入您的选择【1-2】:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="number">1</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入学号:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;tem_stu.number);</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入姓名:&quot;</span>);</span><br><span class="line">gets(tem_stu.name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入性别:&quot;</span>);</span><br><span class="line">gets(tem_stu.gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入C语言成绩:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;tem_stu.cscore);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (tem_stu.number == stu[i].number)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t该学号已存在！信息添加失败！！！\n&quot;</span>);</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].number == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">stu[i] = tem_stu;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t信息添加成功！！！\n\n&quot;</span>);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">show_information</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|                欢迎来到信息显示功能                  |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t全部名单：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t| %-12s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s|&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].number != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t| %-12d&quot;</span>, stu[i].number);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, stu[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, stu[i].gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10.2lf|&quot;</span>, stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n\t\t\t不及格名单：\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t| %-12s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s|&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; H; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].number != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].cscore &lt; <span class="number">60</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t| %-12d&quot;</span>, stu[i].number);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, stu[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10s&quot;</span>, stu[i].gender);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-10.2lf|&quot;</span>, stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|-------------------------------------------|\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t&quot;</span>);</span><br><span class="line">system(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">void</span> <span class="title function_">menu</span><span class="params">()</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> sel = <span class="number">0</span>;</span><br><span class="line">system(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t****************** 欢迎您！尊贵的Sniper ****************\n\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t请选择您的操作:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|                1   信息录入                          |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|------------------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|                2   信息显示                          |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|------------------------------------------------------|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|                0   退出                              |\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t|———————————————————————————|\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t请输入您的选择【0-2】：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (sel &lt; <span class="number">0</span> || sel&gt;<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\t\t\t输入错误,请重新输入你的选择【0-2】：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">switch</span> (sel)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">case</span> <span class="number">1</span>:</span><br><span class="line">add_information();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">2</span>:</span><br><span class="line">show_information();</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">case</span> <span class="number">0</span>:</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">system(<span class="string">&quot;color 70&quot;</span>);</span><br><span class="line">menu();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="74"><li>己知一个班有5名学生，本学期学习了三门课程，分别为C语言、高数和英语。</li></ol><p>（1）输出每一门课程的平均成绩；</p><p>（2）输出总成绩最高的学生的信息（包括学号、姓名、性别、3门课程的成绩以及总成绩）；</p><p>（3）按C语言课程的成绩从高到低对全班学生进行排序，并输出排序后的结果。</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">int</span> xh;</span><br><span class="line"><span class="type">char</span> xm[<span class="number">11</span>];</span><br><span class="line"><span class="type">char</span> xb[<span class="number">3</span>];</span><br><span class="line"><span class="type">double</span> cscore;</span><br><span class="line"><span class="type">double</span> gscore;</span><br><span class="line"><span class="type">double</span> yscore;</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">student</span> <span class="title">stu</span>[5], <span class="title">jh</span>;</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].xh == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d名学生的信息\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;学号:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;stu[i].xh);</span><br><span class="line">getchar();</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名:&quot;</span>);</span><br><span class="line">gets(stu[i].xm);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;性别:&quot;</span>);</span><br><span class="line">gets(stu[i].xb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C语言成绩:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;高数成绩:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stu[i].gscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英语成绩:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%lf&quot;</span>, &amp;stu[i].yscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;所有学生信息:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;高数成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;英语成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11d&quot;</span>, stu[i].xh);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xm);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].gscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].yscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="type">double</span> sum_c = <span class="number">0</span>, sum_g = <span class="number">0</span>, sum_y = <span class="number">0</span>, ave_c, ave_g, ave_y;<span class="comment">/*六个量分别表示C程.高数.英语的全班总分及平均分*/</span></span><br><span class="line"><span class="type">double</span> zf[<span class="number">5</span>] = &#123; <span class="number">0</span> &#125;, t = <span class="number">0</span>;<span class="comment">/*数组zf存储每个人的总分*/</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">zf[i] = stu[i].cscore + stu[i].gscore + stu[i].yscore;</span><br><span class="line">sum_c += stu[i].cscore;</span><br><span class="line">sum_g += stu[i].gscore;</span><br><span class="line">sum_y += stu[i].yscore;</span><br><span class="line">&#125;</span><br><span class="line">ave_c = sum_c / <span class="number">5</span>;</span><br><span class="line">ave_g = sum_g / <span class="number">5</span>;</span><br><span class="line">ave_y = sum_y / <span class="number">5</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;C语言平均成绩为:%.2lf\n&quot;</span>, ave_c);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;高数平均成绩为:%.2lf\n&quot;</span>, ave_g);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;英语平均成绩为:%.2lf\n&quot;</span>, ave_y);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (zf[i] &gt; zf[i + <span class="number">1</span>])</span><br><span class="line">&#123;</span><br><span class="line">t = zf[i];</span><br><span class="line">zf[i] = zf[i + <span class="number">1</span>];</span><br><span class="line">zf[i + <span class="number">1</span>] = t;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;总成绩分最高的学生信息:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;高数成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;英语成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;总成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].cscore + stu[i].gscore + stu[i].yscore == zf[<span class="number">4</span>])</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11d&quot;</span>, stu[i].xh);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xm);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].gscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].yscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, zf[<span class="number">4</span>]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= <span class="number">3</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">3</span> - j; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (stu[i].cscore &lt; stu[i + <span class="number">1</span>].cscore)</span><br><span class="line">&#123;</span><br><span class="line">jh = stu[i];</span><br><span class="line">stu[i] = stu[i + <span class="number">1</span>];</span><br><span class="line">stu[i + <span class="number">1</span>] = jh;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;按C语言成绩进行由高到低排序:\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;学号&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;姓名&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;性别&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;C语言成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;高数成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, <span class="string">&quot;英语成绩&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="number">4</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11d&quot;</span>, stu[i].xh);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xm);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11s&quot;</span>, stu[i].xb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].cscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].gscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%-11.2lf&quot;</span>, stu[i].yscore);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="六、数据读取和数据存储"><a href="#六、数据读取和数据存储" class="headerlink" title="六、数据读取和数据存储"></a>六、数据读取和数据存储</h3><ol start="75"><li>编程统计文本文件”data.txt”中字符’$’出现的次数，并将统计的次数结果写入文本文件”res.txt”中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* fp;</span><br><span class="line">FILE* fq;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">fp = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); <span class="comment">//需要提前创建源程序当前目录下的data.txt文件,否则会文件打开失败</span></span><br><span class="line">fq = fopen(<span class="string">&quot;res.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件data.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!feof(fp)) <span class="comment">//feof()函数的功能是检测流上的文件结束符，如果文件结束，则返回非0值;如果文件未结束，则返回0值</span></span><br><span class="line">&#123;</span><br><span class="line">ch = fgetc(fp);</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&#x27;$&#x27;</span>)</span><br><span class="line">n++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fq, <span class="string">&quot;%d&quot;</span>, n); <span class="comment">//将n的结果写入到res.txt文档中</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, n); <span class="comment">//将n的结果显示到屏幕中</span></span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fq);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="76"><li>从源程序当前目录下名为“xhar2.txt”的文本文件中读取前10个字符，依次显示在屏幕上，如果文本文件中不足10个字符，则有多少个字符读取多少个字符，并显示在屏幕上。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* fp;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> ch;</span><br><span class="line">fp = fopen(<span class="string">&quot;xhar2.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); <span class="comment">//需要提前创建源程序当前目录下的data.txt文件,否则会文件打开失败</span></span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件xhar2.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (!feof(fp))</span><br><span class="line">&#123;</span><br><span class="line">n++;</span><br><span class="line">ch = fgetc(fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, ch);</span><br><span class="line"><span class="keyword">if</span> (n == <span class="number">10</span>) <span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="77"><li>有2个磁盘文件a.txt和b.txt，要求产生一个新的文件c.txt，将b.txt中的数据追加到a.txt后面，再一并存入到c.txt中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* fa;</span><br><span class="line">FILE* fb;</span><br><span class="line">FILE* fc;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> ch, ck;</span><br><span class="line">fa = fopen(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;a&quot;</span>);</span><br><span class="line">fb = fopen(<span class="string">&quot;b.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);<span class="comment">//&quot;b.txt&quot;文档需要提前手动创建</span></span><br><span class="line"><span class="keyword">if</span> (fb == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件b.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> ((ch = fgetc(fb)) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">fputc(ch, fa);</span><br><span class="line">&#125;</span><br><span class="line">fclose(fa); <span class="comment">//关闭以&quot;a&quot;文件操作方式打开的a.txt</span></span><br><span class="line">fa = fopen(<span class="string">&quot;a.txt&quot;</span>, <span class="string">&quot;r&quot;</span>); <span class="comment">//再以&quot;r&quot;文件操作方式重新打开a.txt</span></span><br><span class="line">fc = fopen(<span class="string">&quot;c.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">while</span> ((ck = fgetc(fa)) != EOF)</span><br><span class="line">&#123;</span><br><span class="line">fputc(ck, fc);</span><br><span class="line">&#125;</span><br><span class="line">fclose(fc);</span><br><span class="line">fclose(fa);</span><br><span class="line">fclose(fb);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;运行成功,打开文件查看吧!\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="78"><li>编写程序将全班同学的姓名、地址和电话号码写入到一个文件class.txt中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 200</span></span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span></span></span><br><span class="line"><span class="class">&#123;</span></span><br><span class="line"><span class="type">char</span> name[<span class="number">15</span>];</span><br><span class="line"><span class="type">char</span> address[<span class="number">30</span>];</span><br><span class="line"><span class="type">char</span> phone_number[<span class="number">15</span>];</span><br><span class="line">&#125;;</span><br><span class="line"><span class="class"><span class="keyword">struct</span> <span class="title">Student</span> <span class="title">stu</span>[<span class="title">N</span>];</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, sel = <span class="number">0</span>, M = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; N; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入第%d个学生的信息：\n&quot;</span>, i + <span class="number">1</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;姓名：&quot;</span>);</span><br><span class="line">gets(stu[i].name);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;地址：&quot;</span>);</span><br><span class="line">gets(stu[i].address);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;联系方式：&quot;</span>);</span><br><span class="line">gets(stu[i].phone_number);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---------------------\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;是否继续输入？\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;1 是  2 否\n&quot;</span>);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入你的选择：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">getchar();</span><br><span class="line"><span class="keyword">while</span> (sel &lt; <span class="number">1</span> || sel&gt;<span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;输入错误，请重新输入：&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;sel);</span><br><span class="line">getchar();</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;---------------------\n&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="number">1</span>)</span><br><span class="line"><span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (sel == <span class="number">2</span>)</span><br><span class="line">&#123;</span><br><span class="line">M = i + <span class="number">1</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">FILE* fp;</span><br><span class="line">fp = fopen(<span class="string">&quot;class.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件打开失败！&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%-9s%-28s%-15s\n&quot;</span>, <span class="string">&quot;姓名&quot;</span>, <span class="string">&quot;地址&quot;</span>, <span class="string">&quot;联系方式&quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; M; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%-9s%-28s%-15s\n&quot;</span>, stu[i].name, stu[i].address, stu[i].phone_number);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//如果需要从文件中读取信息可以先利用rewind(fp)重置文件指针，再通过fscanf()函数读取，用法与fprintf()类似</span></span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;信息保存成功！请打开文件class.txt查看！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="79"><li>从文件data.txt中读取2个正整数，计算这2个正整数之间所有正整数的和（包括本身），最后将结束写入到文件he.txt中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* fp, * fq;</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, i = <span class="number">0</span>, a = <span class="number">0</span>, b = <span class="number">0</span>, t = <span class="number">0</span>;</span><br><span class="line">fp = fopen(<span class="string">&quot;data.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">fq = fopen(<span class="string">&quot;result.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span> || fq == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件data.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;a);</span><br><span class="line"><span class="built_in">fscanf</span>(fp, <span class="string">&quot;%d&quot;</span>, &amp;b);</span><br><span class="line"><span class="keyword">if</span> (a &gt; b)<span class="comment">//a与b的值交换，必须保证计算中a小b大</span></span><br><span class="line">&#123;</span><br><span class="line">t = a;</span><br><span class="line">a = b;</span><br><span class="line">b = t;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = a; i &lt;= b; i++)</span><br><span class="line">&#123;</span><br><span class="line">sum += i;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fq, <span class="string">&quot;%d\n&quot;</span>, sum);<span class="comment">//输出到文件中</span></span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fq);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;信息保存成功！请打开文件he.txt查看！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="80"><li>从键盘上读取3个字符串，依次写入名为“string.txt”的文本文件。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">char</span> s[<span class="number">100</span>], c[<span class="number">100</span>], t[<span class="number">100</span>];</span><br><span class="line">FILE* fp;</span><br><span class="line"><span class="keyword">if</span> ((fp = fopen(<span class="string">&quot;string.txt&quot;</span>, <span class="string">&quot;w&quot;</span>)) == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件string.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fscanf</span>(<span class="built_in">stdin</span>, <span class="string">&quot;%s%s%s&quot;</span>, s, c, t); <span class="comment">//空格和回车一样都被作为一个字符串结束的标志</span></span><br><span class="line"><span class="built_in">fprintf</span>(fp, <span class="string">&quot;%s %s %s&quot;</span>, s, c, t);</span><br><span class="line">fclose(fp);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;信息保存成功！请打开文件class.txt查看！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="81"><li>从English.txt文件中读取一段英文，统计单词个数，然后将结果存入result.txt中。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">FILE* fp, * fq;</span><br><span class="line"><span class="type">char</span> E[<span class="number">5000</span>];</span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line">fp = fopen(<span class="string">&quot;English.txt&quot;</span>, <span class="string">&quot;r&quot;</span>);</span><br><span class="line">fq = fopen(<span class="string">&quot;result.txt&quot;</span>, <span class="string">&quot;w&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (fp == <span class="literal">NULL</span> || fq == <span class="literal">NULL</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;文件English.txt打开失败，请在源程序目录下手动创建该文件！\n&quot;</span>);</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">fgets(E, <span class="number">5000</span>, fp);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= <span class="built_in">strlen</span>(E) - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (E[i] &gt;= <span class="number">65</span> &amp;&amp; E[i] &lt;= <span class="number">90</span> || E[i] &gt;= <span class="number">97</span> &amp;&amp; E[i] &lt;= <span class="number">122</span>)</span><br><span class="line"><span class="keyword">if</span> (!(E[i + <span class="number">1</span>] &gt;= <span class="number">65</span> &amp;&amp; E[i + <span class="number">1</span>] &lt;= <span class="number">90</span> || E[i + <span class="number">1</span>] &gt;= <span class="number">97</span> &amp;&amp; E[i + <span class="number">1</span>] &lt;= <span class="number">122</span>))</span><br><span class="line"><span class="keyword">if</span> (E[i + <span class="number">1</span>] != <span class="string">&#x27;-&#x27;</span>)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">fprintf</span>(fq, <span class="string">&quot;单词个数是%d\n&quot;</span>, sum);</span><br><span class="line">fclose(fp);</span><br><span class="line">fclose(fq);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;信息保存成功！请打开文件result.txt查看！\n&quot;</span>);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><br/><h3 id="七、基础算法题"><a href="#七、基础算法题" class="headerlink" title="七、基础算法题"></a>七、基础算法题</h3><ol start="82"><li>利用欧几里得算法（又称为辗转相除法）快速计算2个整数的最大公约数。</li></ol><ul><li>参考公式：</li></ul><p><img src="/img/images/00002/00002_6.png" alt="公式"></p><ul><li>示例代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">gcd</span><span class="params">(<span class="type">int</span> a, <span class="type">int</span> b)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">return</span> (b == <span class="number">0</span>) ? a : gcd(b, a % b);</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>, y = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input two positive integers:&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;x, &amp;y);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Output their greatest common divisor:%d&quot;</span>, gcd(x, y));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="83"><li>大数相加：计算两个非负整数A、B的和。不过这一次有些特殊，A、B可能会很大。</li></ol><ul><li>输入格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一行输入一个非负整数A。</span><br><span class="line">第二行输入一个非负整数B。</span><br><span class="line">A、B的长度不大于<span class="number">1000</span>。</span><br></pre></td></tr></table></figure><ul><li>输出格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出A+B的值。不要有多余的前导零。</span><br></pre></td></tr></table></figure><ul><li>样例输入：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">1234567891011121314151617181920123456789</span></span><br><span class="line"><span class="number">5974994545148254725545124662176431426461421426416</span></span><br></pre></td></tr></table></figure><ul><li>样例输出：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num1:   <span class="number">1234567891011121314151617181920123456789</span></span><br><span class="line">num2:   <span class="number">5974994545148254725545124662176431426461421426416</span></span><br><span class="line">num1Len:<span class="number">40</span></span><br><span class="line">num2Len:<span class="number">49</span></span><br><span class="line"> sum:   <span class="number">5974994546382822616556245976328048608381544883205</span></span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, max = <span class="number">0</span>, i = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="type">char</span> b[N];</span><br><span class="line"><span class="comment">//以字符串形式输入加数和被加数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input two non-negative integers:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, b);</span><br><span class="line">A = <span class="built_in">strlen</span>(a);</span><br><span class="line">B = <span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num1:\t%s\n&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num2:\t%s\n&quot;</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num1Len:%d\n&quot;</span>, A);      <span class="comment">//输出非负整数num1的长度</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num2Len:%d\n&quot;</span>, B);  <span class="comment">//输出非负整数num2的长度</span></span><br><span class="line">max = A &gt; B ? A : B;            <span class="comment">//取num1和num2较大一个数的位数为max</span></span><br><span class="line"><span class="type">char</span>* c = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span>) * max);</span><br><span class="line"><span class="type">char</span>* d = (<span class="type">char</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">char</span>) * max);</span><br><span class="line"><span class="type">int</span>* s = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * (max + <span class="number">1</span>)); <span class="comment">//数组s存放答案</span></span><br><span class="line"><span class="keyword">for</span> (i = max; i &gt;= <span class="number">0</span>; i--) s[i] = <span class="number">0</span>;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= max - A - <span class="number">1</span>; i++) c[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (i = max - A; i &lt; max ; i++) c[i] = a[i - max + A];</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= max - B - <span class="number">1</span>; i++) d[i] = <span class="string">&#x27;0&#x27;</span>;</span><br><span class="line"><span class="keyword">for</span> (i = max - B; i &lt; max ; i++) d[i] = b[i - max + B];</span><br><span class="line"></span><br><span class="line"><span class="comment">//按照竖式相加算法对数据进行运算</span></span><br><span class="line"><span class="keyword">for</span> (i = max - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;   <span class="comment">//逐位相加并赋值给数组s的各个元素，暂时不处理进位</span></span><br><span class="line">s[max - <span class="number">1</span> - i] = (c[i] - <span class="number">48</span>) + (d[i] - <span class="number">48</span>); </span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (i = max - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (s[max - <span class="number">1</span> - i] &gt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">s[max - <span class="number">1</span> - i] = s[max - <span class="number">1</span> - i] % <span class="number">10</span>; <span class="comment">//处理进位</span></span><br><span class="line">s[max - i]++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//对结果进行输出</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot; sum:\t&quot;</span>);</span><br><span class="line"><span class="keyword">if</span> (s[max] != <span class="number">0</span>)            </span><br><span class="line">&#123;   <span class="comment">//如果数组s最后一个元素有来自低位的进位 ，则输出 </span></span><br><span class="line"><span class="keyword">for</span> (i = max; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (s[max] == <span class="number">0</span>)      </span><br><span class="line">&#123;   <span class="comment">//如果数组s最后一个元素没有来自低位的进位 ，则不输出</span></span><br><span class="line"><span class="keyword">for</span> (i = max - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, s[i]);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>C++版本：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;cstdio&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Add</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>() || i &lt; B.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (i &lt; A.<span class="built_in">size</span>()) t += A[i];</span><br><span class="line"><span class="keyword">if</span> (i &lt; B.<span class="built_in">size</span>()) t += B[i];</span><br><span class="line">C.<span class="built_in">push_back</span>(t % <span class="number">10</span>);</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (t) C.<span class="built_in">push_back</span>(<span class="number">1</span>);</span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Add</span>(A, B);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) <span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, C[i]);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="84"><li>大数相乘：计算两个非负整数A、B的乘积。A、B可能会很大。</li></ol><ul><li>输入格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">第一行输入一个非负整数A。</span><br><span class="line">第二行输入一个非负整数B。</span><br><span class="line">A、B的长度不大于<span class="number">1000</span>。</span><br></pre></td></tr></table></figure><ul><li>输出格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出A×B的值。不要有多余的前导零。</span><br></pre></td></tr></table></figure><ul><li>样例输入：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">9876543210123456789103</span></span><br><span class="line"><span class="number">15656489879654321156632157</span>    </span><br></pre></td></tr></table></figure><ul><li>样例输出：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">num1:    <span class="number">9876543210123456789103</span></span><br><span class="line">num2:    <span class="number">15656489879654321156632157</span></span><br><span class="line">num1Len:<span class="number">22</span></span><br><span class="line">num2Len:<span class="number">26</span></span><br><span class="line">product: <span class="number">154631998815266502735860414063580937236496985171</span></span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdlib.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">define</span> N 100010</span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> A = <span class="number">0</span>, B = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> a[N];</span><br><span class="line"><span class="type">char</span> b[N];</span><br><span class="line"><span class="comment">//以字符串形式输入乘数和被乘数</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Please input two non-negative integers:\n&quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, a);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%s&quot;</span>, b);</span><br><span class="line">A = <span class="built_in">strlen</span>(a);</span><br><span class="line">B = <span class="built_in">strlen</span>(b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num1:\t %s\n&quot;</span>, a);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num2:\t %s\n&quot;</span>, b);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num1Len:%d\n&quot;</span>, A);           <span class="comment">//输出非负整数num1的长度</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;num2Len:%d\n&quot;</span>, B); <span class="comment">//输出非负整数num2的长度</span></span><br><span class="line"><span class="comment">//为数据准备存放位置</span></span><br><span class="line"><span class="type">int</span>* e = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * A);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; A; i++) e[i] = a[i] - <span class="number">48</span>;</span><br><span class="line"><span class="type">int</span>* f = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * B);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; B; i++) f[i] = b[i] - <span class="number">48</span>;</span><br><span class="line"><span class="type">int</span>* t = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="number">4</span> * (A + B));  <span class="comment">//t存放结果</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= A + B - <span class="number">1</span>; i++) t[i] = <span class="number">0</span>;</span><br><span class="line"><span class="comment">//二维数组s为乘法竖式运算过程中的数据提供存放位置，s为B行A+B-1列的二维数组</span></span><br><span class="line"><span class="type">int</span>** s = (<span class="type">int</span>**)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>*) * B);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt; B; i++)</span><br><span class="line">s[i] = (<span class="type">int</span>*)<span class="built_in">malloc</span>(<span class="keyword">sizeof</span>(<span class="type">int</span>) * (A + B - <span class="number">1</span>));</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= B - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= A + B - <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line">s[i][j] = <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//按照乘法竖式算法对数据进行运算</span></span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= B - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (j = A + B - <span class="number">2</span> - i; j &gt;= B - <span class="number">1</span> - i; j--)</span><br><span class="line">&#123;</span><br><span class="line">s[i][j] = e[i + j - B + <span class="number">1</span>] * f[B - <span class="number">1</span> - i];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= A + B - <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= B - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line">t[j + <span class="number">1</span>] = t[j + <span class="number">1</span>] + s[i][j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = A + B - <span class="number">1</span>; j &gt;= <span class="number">1</span>; j--)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (t[j] &gt;= <span class="number">10</span>)</span><br><span class="line">&#123;</span><br><span class="line">t[j - <span class="number">1</span>] = t[j - <span class="number">1</span>] + t[j] / <span class="number">10</span>;  <span class="comment">//处理进位</span></span><br><span class="line">t[j] = t[j] % <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出结果</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;product: &quot;</span>);</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">0</span>; i &lt;= A + B - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (t[i] == <span class="number">0</span> &amp;&amp; i != A + B - <span class="number">1</span>) <span class="keyword">continue</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t[i] == <span class="number">0</span> &amp;&amp; i == A + B - <span class="number">1</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t[i] != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (; i &lt;= A + B - <span class="number">1</span>; i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, t[i]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><ul><li>C++版本：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">Mul</span><span class="params">(vector&lt;<span class="type">int</span>&gt;&amp; A, vector&lt;<span class="type">int</span>&gt;&amp; B)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="function">vector&lt;<span class="type">int</span>&gt; <span class="title">C</span><span class="params">(A.size() + B.size(), <span class="number">0</span>)</span></span>; <span class="comment">// 初始化为0,且999*99最多5位</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; A.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> j = <span class="number">0</span>; j &lt; B.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">C[i + j] += A[i] * B[j];</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; C.<span class="built_in">size</span>(); i++)   <span class="comment">// i = C.size() - 1时 t 一定小于 10</span></span><br><span class="line">&#123;</span><br><span class="line">t += C[i];</span><br><span class="line">C[i] = t % <span class="number">10</span>;</span><br><span class="line">t /= <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span> (C.<span class="built_in">size</span>() &gt; <span class="number">1</span> &amp;&amp; C.<span class="built_in">back</span>() == <span class="number">0</span>) C.<span class="built_in">pop_back</span>(); <span class="comment">// 必须要去前导 0，因为最高位很可能是 0</span></span><br><span class="line"><span class="keyword">return</span> C;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string a, b;</span><br><span class="line">cin &gt;&gt; a &gt;&gt; b;</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; A, B;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = a.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) A.<span class="built_in">push_back</span>(a[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = b.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) B.<span class="built_in">push_back</span>(b[i] - <span class="string">&#x27;0&#x27;</span>);</span><br><span class="line">vector&lt;<span class="type">int</span>&gt; C = <span class="built_in">Mul</span>(A, B);</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = C.<span class="built_in">size</span>() - <span class="number">1</span>; i &gt;= <span class="number">0</span>; i--) cout &lt;&lt; C[i];</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="85"><li>话说大诗人李白，一生好饮。一天，他提着酒壶，从家里出来，酒壶中有酒2斗。他边走边唱：无事街上走，提壶去打酒。逢店加一倍，遇花喝一斗。这一路上，他一共遇到店5次，遇到花10次，已知最后一次遇到的是花，他正好把酒喝光了。 请你计算李白遇到店和花的次序，可以把遇店记为a，遇花记为b。则：babaabbabbabbbb 就是合理的次序。像这样的答案一共有多少呢？请你计算出所有可能方案的个数。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="comment">//jiu表示酒的数量</span></span><br><span class="line"><span class="comment">//hua表示遇见花的次数</span></span><br><span class="line"><span class="comment">//dian表示遇见店的次数</span></span><br><span class="line"><span class="comment">//yujian每次遇见的是店或花  店记为0，遇花记为1</span></span><br><span class="line"><span class="type">int</span> sum = <span class="number">0</span>;<span class="comment">//表示所有符合题意的组合数量，这里可以等价写为 int sum;</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> jiu, <span class="type">int</span> hua, <span class="type">int</span> dian, <span class="type">int</span> yujian)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (hua + dian == <span class="number">15</span>)<span class="comment">//某种组合结束</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (jiu == <span class="number">0</span> &amp;&amp; hua == <span class="number">10</span> &amp;&amp; dian == <span class="number">5</span> &amp;&amp; yujian == <span class="number">1</span>)</span><br><span class="line">sum++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">f(jiu - <span class="number">1</span>, hua + <span class="number">1</span>, dian + <span class="number">0</span>, <span class="number">1</span>); <span class="comment">//某次遇见花</span></span><br><span class="line">f(jiu * <span class="number">2</span>, hua + <span class="number">0</span>, dian + <span class="number">1</span>, <span class="number">0</span>); <span class="comment">//某次遇见店</span></span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">f(<span class="number">2</span>, <span class="number">0</span>, <span class="number">0</span>, <span class="number">1</span>);</span><br><span class="line"><span class="comment">//最后一个实参表示遇见，因为没有出门，所以这个值不存在，那就随便写</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, sum);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="86"><li>某电视台举办了低碳生活大奖赛。题目的计分规则相当奇怪：每位选手需要回答10个问题（其编号为1到10），越后面越有难度。答对的，当前分数翻倍；答错了则扣掉与题号相同的分数（选手必须回答问题，不回答按错误处理）。每位选手都有一个起步的分数为10分。某获胜选手最终得分刚好是100分，如果不让你看比赛过程，你能推断出他（她）哪个题目答对了，哪个题目答错了吗？如果把答对的记为1，答错的记为0，则10个题目的回答情况可以用仅含有1和0的字符串来表示。例如：0010110011 就是可能的情况。你的任务是算出所有可能情况。每个答案占一行。</li></ol><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> ti[<span class="number">11</span>] = &#123; <span class="number">0</span> &#125;; <span class="comment">//用来存储每道题的回答情况0或者1,0表示错误，1表示正确</span></span><br><span class="line"><span class="comment">//提醒：数组ti的编号实际用1-10</span></span><br><span class="line"><span class="comment">//score表示当前得分，num是当前第num道题目</span></span><br><span class="line"><span class="type">void</span> <span class="title function_">f</span><span class="params">(<span class="type">int</span> score, <span class="type">int</span> num)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (num == <span class="number">11</span>)<span class="comment">//10道题目全部做完</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (score == <span class="number">100</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (i = <span class="number">1</span>; i &lt;= <span class="number">10</span>; i++)</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, ti[i]);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;\n&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="comment">//10道题目没有做完</span></span><br><span class="line">&#123;</span><br><span class="line">ti[num] = <span class="number">1</span>; <span class="comment">//讨论第num道题目的正确情况</span></span><br><span class="line">f(score * <span class="number">2</span>, num + <span class="number">1</span>);</span><br><span class="line">ti[num] = <span class="number">0</span>; <span class="comment">//讨论第num道题目的错误情况</span></span><br><span class="line">f(score - num, num + <span class="number">1</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line">f(<span class="number">10</span>, <span class="number">1</span>);<span class="comment">//从基础分10分开始，从第1题开始</span></span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="87"><li>输入一个十进制数N，将它转换成R进制数输出。在10≤R≤16的情况下，用’A’表示10，用’B’表示11，用’C’表示12，用’D’表示13，用’E’表示14，用’F’表示15。</li></ol><ul><li>输入格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入包含两个整数 N（N≤<span class="number">10000</span>）和R（<span class="number">2</span>≤R≤<span class="number">16</span>）。</span><br><span class="line">注意：N有可能是负整数。</span><br></pre></td></tr></table></figure><ul><li>输出格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输出一行，表示转换后的数。</span><br></pre></td></tr></table></figure><ul><li>样例输入：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">742035030</span> <span class="number">16</span></span><br></pre></td></tr></table></figure><ul><li>样例输出：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">2</span>C3A8E56</span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> t = <span class="number">0</span>, N = <span class="number">0</span>, R = <span class="number">0</span>, i = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="type">char</span> s[<span class="number">1000</span>] = &#123; <span class="string">&#x27;\0&#x27;</span> &#125;;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d%d&quot;</span>, &amp;N, &amp;R);</span><br><span class="line"><span class="keyword">if</span> (N == <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;0&quot;</span>);</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (N != <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (N &lt; <span class="number">0</span>) <span class="built_in">printf</span>(<span class="string">&quot;-&quot;</span>);</span><br><span class="line">N = N &gt; <span class="number">0</span> ? N : -N;</span><br><span class="line"><span class="keyword">while</span> (N)</span><br><span class="line">&#123;</span><br><span class="line">t = N % R;</span><br><span class="line"><span class="keyword">if</span> (t &gt;= <span class="number">0</span> &amp;&amp; t &lt;= <span class="number">9</span>)</span><br><span class="line">s[i] = <span class="number">48</span> + t;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (t &gt;= <span class="number">10</span> &amp;&amp; t &lt;= <span class="number">15</span>)</span><br><span class="line">s[i] = <span class="number">55</span> + t;</span><br><span class="line">i++;</span><br><span class="line">N = N / R;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = i - <span class="number">1</span>; j &gt;= <span class="number">0</span>; j--) <span class="built_in">printf</span>(<span class="string">&quot;%c&quot;</span>, s[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"></span><br></pre></td></tr></table></figure><br/><ol start="88"><li>给你一个整数x ，如果x是一个回文整数，返回true；否则，返回false。回文数是指正序（从左向右）和倒序（从右向左）读都是一样的整数。例如，121是回文数，而123不是。</li></ol><ul><li>示例1：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">输入：x = <span class="number">121</span></span><br><span class="line">输出：<span class="literal">true</span></span><br></pre></td></tr></table></figure><ul><li>示例2：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = <span class="number">-121</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">解释：从左向右读, 为 <span class="number">-121</span> 。 从右向左读, 为 <span class="number">121</span>- 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><ul><li>示例3：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输入：x = <span class="number">10</span></span><br><span class="line">输出：<span class="literal">false</span></span><br><span class="line">解释：从右向左读, 为 <span class="number">01</span> 。因此它不是一个回文数。</span><br></pre></td></tr></table></figure><ul><li>代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdbool.h&gt;</span></span></span><br><span class="line"><span class="type">bool</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = x % <span class="number">10</span>;</span><br><span class="line">i++;</span><br><span class="line">x = x / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= (i - <span class="number">1</span>) / <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] != a[i - <span class="number">1</span> - j]) <span class="keyword">return</span> <span class="literal">false</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="literal">true</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> x = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;Input x: &quot;</span>);</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;x);</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, isPalindrome(x));</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="89"><li>一个正整数，如果交换高低位以后和原数相等，那么称这个数为回文数。比如121，2332 都是回文数，13，4567不是回文数。任意一个正整数，如果其不是回文数，将该数交换高低位以后和原数相加得到一个新的数，如果新数不是回文数，重复这个变换，直到得到一个回文数为止。例如，57变换后得到132(57 + 75)，132得到363(132 + 231))，363是一个回文数。曾经有数学家猜想：对于任意正整数，经过有限次上述变换以后，一定能得出一个回文数。至今这个猜想还没有被证明是对的。现在请你通过程序来验证。</li></ol><ul><li>输入格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一行一个正整数n。</span><br></pre></td></tr></table></figure><ul><li>输出格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">输出第一行一个正整数，表示得到一个回文数的最少变换次数。</span><br><span class="line">接下来一行，输出变换过程，相邻的数之间用<span class="string">&quot;---&gt;&quot;</span>连接。输出格式可以参见样例。</span><br><span class="line">保证最后生成的数在<span class="type">int</span>范围内。</span><br></pre></td></tr></table></figure><ul><li>样例输入：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">349</span></span><br></pre></td></tr></table></figure><ul><li>样例输出：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br><span class="line"><span class="number">349</span>---&gt;<span class="number">1292</span>---&gt;<span class="number">4213</span>---&gt;<span class="number">7337</span></span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;stdio.h&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;math.h&gt;</span></span></span><br><span class="line"><span class="type">int</span> <span class="title function_">isPalindrome</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//如果传入的正整数是回文数则返回1，否则返回0</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (x &lt; <span class="number">0</span>) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span> (x == <span class="number">0</span>) <span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> i = <span class="number">0</span>, j = <span class="number">0</span>, a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;;</span><br><span class="line"><span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = x % <span class="number">10</span>;</span><br><span class="line">i++;</span><br><span class="line">x = x / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= (i - <span class="number">1</span>) / <span class="number">2</span>; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (a[j] != a[i - <span class="number">1</span> - j]) <span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">fz</span><span class="params">(<span class="type">int</span> x)</span> <span class="comment">//返回翻转后的正整数</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, i = <span class="number">0</span>, y = <span class="number">0</span>, j = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">while</span> (x &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = x % <span class="number">10</span>;</span><br><span class="line">i++;</span><br><span class="line">x = x / <span class="number">10</span>;</span><br><span class="line">&#125;</span><br><span class="line">i--;</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt;= i; j++)</span><br><span class="line">&#123;</span><br><span class="line">y += a[j] * <span class="built_in">pow</span>(<span class="number">10</span>, i - j);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">return</span> y;</span><br><span class="line">&#125;</span><br><span class="line"><span class="type">int</span> <span class="title function_">main</span><span class="params">(<span class="type">void</span>)</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> k = <span class="number">0</span>, i = <span class="number">0</span>, a[<span class="number">100</span>] = &#123; <span class="number">0</span> &#125;, j = <span class="number">0</span>;</span><br><span class="line"><span class="built_in">scanf</span>(<span class="string">&quot;%d&quot;</span>, &amp;k);</span><br><span class="line"><span class="keyword">while</span> (isPalindrome(k) == <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">a[i] = k;</span><br><span class="line">k += fz(k);</span><br><span class="line">i++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d\n&quot;</span>, i);</span><br><span class="line"><span class="keyword">for</span> (j = <span class="number">0</span>; j &lt; i; j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d---&gt;&quot;</span>, a[j]);</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">printf</span>(<span class="string">&quot;%d&quot;</span>, k);</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><ol start="90"><li>小华非常喜欢吃布丁。这一天她打算购买原味和抹茶味两种布丁，共n个，之后按照一定顺序将n个布丁全部吃完。然而如果小华连续吃到三个同口味的布丁，她会感到厌腻而无法继续吃。请你帮助小华规划吃布丁的每一种可行的口味顺序，使她能够全部吃完而不产生厌腻感。</li></ol><ul><li>输入格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">输入一个正整数n，表示布丁的数量。</span><br></pre></td></tr></table></figure><ul><li>输出格式：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">每行输出一个由<span class="string">&#x27;0&#x27;</span>和<span class="string">&#x27;1&#x27;</span>组成的字符串，表示一种可行的吃布丁的顺序。其中<span class="number">0</span>表示原味，<span class="number">1</span>表示抹茶味。 请将可行的每种方案按字典序升序输入。</span><br></pre></td></tr></table></figure><ul><li>样例输入：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">3</span></span><br></pre></td></tr></table></figure><ul><li>样例输出：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line"><span class="number">001</span></span><br><span class="line"><span class="number">010</span></span><br><span class="line"><span class="number">011</span></span><br><span class="line"><span class="number">100</span></span><br><span class="line"><span class="number">101</span></span><br><span class="line"><span class="number">110</span></span><br></pre></td></tr></table></figure><ul><li>数据范围：</li></ul><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">对于<span class="number">100</span>%的数据，保证<span class="number">1</span>≤n≤<span class="number">20</span>；</span><br></pre></td></tr></table></figure><ul><li>示例代码：</li></ul><figure class="highlight cpp"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">f</span><span class="params">(<span class="type">int</span> j, <span class="type">int</span> n, <span class="type">int</span>* a)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">if</span> (j == n) <span class="comment">//如果吃的布丁的个数达到了n个，这时就代表一种情况结束了</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="type">int</span> flag = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt;= n - <span class="number">3</span>; i++)</span><br><span class="line">&#123;<span class="comment">//遍历该情况，如果存在连续三个相同的布丁，则这种情况flag取值变为1，并且不输出这种情况</span></span><br><span class="line"><span class="keyword">if</span> (a[i] == a[i + <span class="number">1</span>] &amp;&amp; a[i] == a[i + <span class="number">2</span>] &amp;&amp; a[i + <span class="number">1</span>] == a[i + <span class="number">2</span>])</span><br><span class="line">flag = <span class="number">1</span>;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (flag == <span class="number">0</span>) <span class="comment">//如果flag取值依然为0，就代表这种情况符合要求，可以输出</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; a[i];</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">a[j] = <span class="number">0</span>; <span class="comment">//讨论第j个布丁是原味的情况</span></span><br><span class="line"><span class="built_in">f</span>(j + <span class="number">1</span>, n, a); <span class="comment">//先讨论0的情况，再讨论1的情况是为了按照字典序输出</span></span><br><span class="line">a[j] = <span class="number">1</span>; <span class="comment">//讨论第j个布丁是抹茶味的情况</span></span><br><span class="line"><span class="built_in">f</span>(j + <span class="number">1</span>, n, a);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>;</span><br><span class="line">cin &gt;&gt; n;</span><br><span class="line"><span class="type">int</span>* p = <span class="keyword">new</span> <span class="type">int</span>[n];</span><br><span class="line"><span class="built_in">f</span>(<span class="number">0</span>, n, p); <span class="comment">//初始情况：吃了0个布丁，还有n个，数组p用来表示吃的情况</span></span><br><span class="line"><span class="keyword">delete</span>[] p;</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
      
      
      <categories>
          
          <category> C语言学习笔记 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C语言 </tag>
            
            <tag> 学习笔记 </tag>
            
            <tag> 期末考试 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>基于C++的校车管理系统</title>
      <link href="/2023/10/20/00001/"/>
      <url>/2023/10/20/00001/</url>
      
        <content type="html"><![CDATA[<h1 id="功能模块设计"><a href="#功能模块设计" class="headerlink" title="功能模块设计"></a>功能模块设计</h1><p>基于C++语言实现的校车管理系统，采用面向对象的思维进行设计，包含管理员和乘客两个功能模块。</p><h2 id="管理员模块"><a href="#管理员模块" class="headerlink" title="管理员模块"></a>管理员模块</h2><ul><li><p>添加校车信息</p></li><li><p>删除校车信息</p></li><li><p>修改校车信息</p></li><li><p>查询校车信息</p></li><li><p>校车信息一览表</p></li><li><p>用户信息一览表</p></li><li><p>已售车票信息一览表</p></li><li><p>管理用户信息</p></li><li><p>清空系统数据</p></li><li><p>注销登录</p></li></ul><h2 id="用户模块"><a href="#用户模块" class="headerlink" title="用户模块"></a>用户模块</h2><ul><li>校车信息一览表</li><li>查询校车信息</li><li>订票</li><li>退票</li><li>修改密码</li><li>注销登录</li><li>乘客注册</li></ul><br/><h1 id="主要运行界面"><a href="#主要运行界面" class="headerlink" title="主要运行界面"></a>主要运行界面</h1><ul><li>管理员菜单界面</li></ul><p><img src="/img/images/00001/00001_2.png" alt="公式"></p><ul><li>校车信息一览表界面</li></ul><p><img src="/img/images/00001/00001_3.png" alt="公式"></p><ul><li>订票界面</li></ul><p><img src="/img/images/00001/00001_4.png" alt="公式"></p><br/><h1 id="系统完整代码"><a href="#系统完整代码" class="headerlink" title="系统完整代码"></a>系统完整代码</h1><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br><span class="line">81</span><br><span class="line">82</span><br><span class="line">83</span><br><span class="line">84</span><br><span class="line">85</span><br><span class="line">86</span><br><span class="line">87</span><br><span class="line">88</span><br><span class="line">89</span><br><span class="line">90</span><br><span class="line">91</span><br><span class="line">92</span><br><span class="line">93</span><br><span class="line">94</span><br><span class="line">95</span><br><span class="line">96</span><br><span class="line">97</span><br><span class="line">98</span><br><span class="line">99</span><br><span class="line">100</span><br><span class="line">101</span><br><span class="line">102</span><br><span class="line">103</span><br><span class="line">104</span><br><span class="line">105</span><br><span class="line">106</span><br><span class="line">107</span><br><span class="line">108</span><br><span class="line">109</span><br><span class="line">110</span><br><span class="line">111</span><br><span class="line">112</span><br><span class="line">113</span><br><span class="line">114</span><br><span class="line">115</span><br><span class="line">116</span><br><span class="line">117</span><br><span class="line">118</span><br><span class="line">119</span><br><span class="line">120</span><br><span class="line">121</span><br><span class="line">122</span><br><span class="line">123</span><br><span class="line">124</span><br><span class="line">125</span><br><span class="line">126</span><br><span class="line">127</span><br><span class="line">128</span><br><span class="line">129</span><br><span class="line">130</span><br><span class="line">131</span><br><span class="line">132</span><br><span class="line">133</span><br><span class="line">134</span><br><span class="line">135</span><br><span class="line">136</span><br><span class="line">137</span><br><span class="line">138</span><br><span class="line">139</span><br><span class="line">140</span><br><span class="line">141</span><br><span class="line">142</span><br><span class="line">143</span><br><span class="line">144</span><br><span class="line">145</span><br><span class="line">146</span><br><span class="line">147</span><br><span class="line">148</span><br><span class="line">149</span><br><span class="line">150</span><br><span class="line">151</span><br><span class="line">152</span><br><span class="line">153</span><br><span class="line">154</span><br><span class="line">155</span><br><span class="line">156</span><br><span class="line">157</span><br><span class="line">158</span><br><span class="line">159</span><br><span class="line">160</span><br><span class="line">161</span><br><span class="line">162</span><br><span class="line">163</span><br><span class="line">164</span><br><span class="line">165</span><br><span class="line">166</span><br><span class="line">167</span><br><span class="line">168</span><br><span class="line">169</span><br><span class="line">170</span><br><span class="line">171</span><br><span class="line">172</span><br><span class="line">173</span><br><span class="line">174</span><br><span class="line">175</span><br><span class="line">176</span><br><span class="line">177</span><br><span class="line">178</span><br><span class="line">179</span><br><span class="line">180</span><br><span class="line">181</span><br><span class="line">182</span><br><span class="line">183</span><br><span class="line">184</span><br><span class="line">185</span><br><span class="line">186</span><br><span class="line">187</span><br><span class="line">188</span><br><span class="line">189</span><br><span class="line">190</span><br><span class="line">191</span><br><span class="line">192</span><br><span class="line">193</span><br><span class="line">194</span><br><span class="line">195</span><br><span class="line">196</span><br><span class="line">197</span><br><span class="line">198</span><br><span class="line">199</span><br><span class="line">200</span><br><span class="line">201</span><br><span class="line">202</span><br><span class="line">203</span><br><span class="line">204</span><br><span class="line">205</span><br><span class="line">206</span><br><span class="line">207</span><br><span class="line">208</span><br><span class="line">209</span><br><span class="line">210</span><br><span class="line">211</span><br><span class="line">212</span><br><span class="line">213</span><br><span class="line">214</span><br><span class="line">215</span><br><span class="line">216</span><br><span class="line">217</span><br><span class="line">218</span><br><span class="line">219</span><br><span class="line">220</span><br><span class="line">221</span><br><span class="line">222</span><br><span class="line">223</span><br><span class="line">224</span><br><span class="line">225</span><br><span class="line">226</span><br><span class="line">227</span><br><span class="line">228</span><br><span class="line">229</span><br><span class="line">230</span><br><span class="line">231</span><br><span class="line">232</span><br><span class="line">233</span><br><span class="line">234</span><br><span class="line">235</span><br><span class="line">236</span><br><span class="line">237</span><br><span class="line">238</span><br><span class="line">239</span><br><span class="line">240</span><br><span class="line">241</span><br><span class="line">242</span><br><span class="line">243</span><br><span class="line">244</span><br><span class="line">245</span><br><span class="line">246</span><br><span class="line">247</span><br><span class="line">248</span><br><span class="line">249</span><br><span class="line">250</span><br><span class="line">251</span><br><span class="line">252</span><br><span class="line">253</span><br><span class="line">254</span><br><span class="line">255</span><br><span class="line">256</span><br><span class="line">257</span><br><span class="line">258</span><br><span class="line">259</span><br><span class="line">260</span><br><span class="line">261</span><br><span class="line">262</span><br><span class="line">263</span><br><span class="line">264</span><br><span class="line">265</span><br><span class="line">266</span><br><span class="line">267</span><br><span class="line">268</span><br><span class="line">269</span><br><span class="line">270</span><br><span class="line">271</span><br><span class="line">272</span><br><span class="line">273</span><br><span class="line">274</span><br><span class="line">275</span><br><span class="line">276</span><br><span class="line">277</span><br><span class="line">278</span><br><span class="line">279</span><br><span class="line">280</span><br><span class="line">281</span><br><span class="line">282</span><br><span class="line">283</span><br><span class="line">284</span><br><span class="line">285</span><br><span class="line">286</span><br><span class="line">287</span><br><span class="line">288</span><br><span class="line">289</span><br><span class="line">290</span><br><span class="line">291</span><br><span class="line">292</span><br><span class="line">293</span><br><span class="line">294</span><br><span class="line">295</span><br><span class="line">296</span><br><span class="line">297</span><br><span class="line">298</span><br><span class="line">299</span><br><span class="line">300</span><br><span class="line">301</span><br><span class="line">302</span><br><span class="line">303</span><br><span class="line">304</span><br><span class="line">305</span><br><span class="line">306</span><br><span class="line">307</span><br><span class="line">308</span><br><span class="line">309</span><br><span class="line">310</span><br><span class="line">311</span><br><span class="line">312</span><br><span class="line">313</span><br><span class="line">314</span><br><span class="line">315</span><br><span class="line">316</span><br><span class="line">317</span><br><span class="line">318</span><br><span class="line">319</span><br><span class="line">320</span><br><span class="line">321</span><br><span class="line">322</span><br><span class="line">323</span><br><span class="line">324</span><br><span class="line">325</span><br><span class="line">326</span><br><span class="line">327</span><br><span class="line">328</span><br><span class="line">329</span><br><span class="line">330</span><br><span class="line">331</span><br><span class="line">332</span><br><span class="line">333</span><br><span class="line">334</span><br><span class="line">335</span><br><span class="line">336</span><br><span class="line">337</span><br><span class="line">338</span><br><span class="line">339</span><br><span class="line">340</span><br><span class="line">341</span><br><span class="line">342</span><br><span class="line">343</span><br><span class="line">344</span><br><span class="line">345</span><br><span class="line">346</span><br><span class="line">347</span><br><span class="line">348</span><br><span class="line">349</span><br><span class="line">350</span><br><span class="line">351</span><br><span class="line">352</span><br><span class="line">353</span><br><span class="line">354</span><br><span class="line">355</span><br><span class="line">356</span><br><span class="line">357</span><br><span class="line">358</span><br><span class="line">359</span><br><span class="line">360</span><br><span class="line">361</span><br><span class="line">362</span><br><span class="line">363</span><br><span class="line">364</span><br><span class="line">365</span><br><span class="line">366</span><br><span class="line">367</span><br><span class="line">368</span><br><span class="line">369</span><br><span class="line">370</span><br><span class="line">371</span><br><span class="line">372</span><br><span class="line">373</span><br><span class="line">374</span><br><span class="line">375</span><br><span class="line">376</span><br><span class="line">377</span><br><span class="line">378</span><br><span class="line">379</span><br><span class="line">380</span><br><span class="line">381</span><br><span class="line">382</span><br><span class="line">383</span><br><span class="line">384</span><br><span class="line">385</span><br><span class="line">386</span><br><span class="line">387</span><br><span class="line">388</span><br><span class="line">389</span><br><span class="line">390</span><br><span class="line">391</span><br><span class="line">392</span><br><span class="line">393</span><br><span class="line">394</span><br><span class="line">395</span><br><span class="line">396</span><br><span class="line">397</span><br><span class="line">398</span><br><span class="line">399</span><br><span class="line">400</span><br><span class="line">401</span><br><span class="line">402</span><br><span class="line">403</span><br><span class="line">404</span><br><span class="line">405</span><br><span class="line">406</span><br><span class="line">407</span><br><span class="line">408</span><br><span class="line">409</span><br><span class="line">410</span><br><span class="line">411</span><br><span class="line">412</span><br><span class="line">413</span><br><span class="line">414</span><br><span class="line">415</span><br><span class="line">416</span><br><span class="line">417</span><br><span class="line">418</span><br><span class="line">419</span><br><span class="line">420</span><br><span class="line">421</span><br><span class="line">422</span><br><span class="line">423</span><br><span class="line">424</span><br><span class="line">425</span><br><span class="line">426</span><br><span class="line">427</span><br><span class="line">428</span><br><span class="line">429</span><br><span class="line">430</span><br><span class="line">431</span><br><span class="line">432</span><br><span class="line">433</span><br><span class="line">434</span><br><span class="line">435</span><br><span class="line">436</span><br><span class="line">437</span><br><span class="line">438</span><br><span class="line">439</span><br><span class="line">440</span><br><span class="line">441</span><br><span class="line">442</span><br><span class="line">443</span><br><span class="line">444</span><br><span class="line">445</span><br><span class="line">446</span><br><span class="line">447</span><br><span class="line">448</span><br><span class="line">449</span><br><span class="line">450</span><br><span class="line">451</span><br><span class="line">452</span><br><span class="line">453</span><br><span class="line">454</span><br><span class="line">455</span><br><span class="line">456</span><br><span class="line">457</span><br><span class="line">458</span><br><span class="line">459</span><br><span class="line">460</span><br><span class="line">461</span><br><span class="line">462</span><br><span class="line">463</span><br><span class="line">464</span><br><span class="line">465</span><br><span class="line">466</span><br><span class="line">467</span><br><span class="line">468</span><br><span class="line">469</span><br><span class="line">470</span><br><span class="line">471</span><br><span class="line">472</span><br><span class="line">473</span><br><span class="line">474</span><br><span class="line">475</span><br><span class="line">476</span><br><span class="line">477</span><br><span class="line">478</span><br><span class="line">479</span><br><span class="line">480</span><br><span class="line">481</span><br><span class="line">482</span><br><span class="line">483</span><br><span class="line">484</span><br><span class="line">485</span><br><span class="line">486</span><br><span class="line">487</span><br><span class="line">488</span><br><span class="line">489</span><br><span class="line">490</span><br><span class="line">491</span><br><span class="line">492</span><br><span class="line">493</span><br><span class="line">494</span><br><span class="line">495</span><br><span class="line">496</span><br><span class="line">497</span><br><span class="line">498</span><br><span class="line">499</span><br><span class="line">500</span><br><span class="line">501</span><br><span class="line">502</span><br><span class="line">503</span><br><span class="line">504</span><br><span class="line">505</span><br><span class="line">506</span><br><span class="line">507</span><br><span class="line">508</span><br><span class="line">509</span><br><span class="line">510</span><br><span class="line">511</span><br><span class="line">512</span><br><span class="line">513</span><br><span class="line">514</span><br><span class="line">515</span><br><span class="line">516</span><br><span class="line">517</span><br><span class="line">518</span><br><span class="line">519</span><br><span class="line">520</span><br><span class="line">521</span><br><span class="line">522</span><br><span class="line">523</span><br><span class="line">524</span><br><span class="line">525</span><br><span class="line">526</span><br><span class="line">527</span><br><span class="line">528</span><br><span class="line">529</span><br><span class="line">530</span><br><span class="line">531</span><br><span class="line">532</span><br><span class="line">533</span><br><span class="line">534</span><br><span class="line">535</span><br><span class="line">536</span><br><span class="line">537</span><br><span class="line">538</span><br><span class="line">539</span><br><span class="line">540</span><br><span class="line">541</span><br><span class="line">542</span><br><span class="line">543</span><br><span class="line">544</span><br><span class="line">545</span><br><span class="line">546</span><br><span class="line">547</span><br><span class="line">548</span><br><span class="line">549</span><br><span class="line">550</span><br><span class="line">551</span><br><span class="line">552</span><br><span class="line">553</span><br><span class="line">554</span><br><span class="line">555</span><br><span class="line">556</span><br><span class="line">557</span><br><span class="line">558</span><br><span class="line">559</span><br><span class="line">560</span><br><span class="line">561</span><br><span class="line">562</span><br><span class="line">563</span><br><span class="line">564</span><br><span class="line">565</span><br><span class="line">566</span><br><span class="line">567</span><br><span class="line">568</span><br><span class="line">569</span><br><span class="line">570</span><br><span class="line">571</span><br><span class="line">572</span><br><span class="line">573</span><br><span class="line">574</span><br><span class="line">575</span><br><span class="line">576</span><br><span class="line">577</span><br><span class="line">578</span><br><span class="line">579</span><br><span class="line">580</span><br><span class="line">581</span><br><span class="line">582</span><br><span class="line">583</span><br><span class="line">584</span><br><span class="line">585</span><br><span class="line">586</span><br><span class="line">587</span><br><span class="line">588</span><br><span class="line">589</span><br><span class="line">590</span><br><span class="line">591</span><br><span class="line">592</span><br><span class="line">593</span><br><span class="line">594</span><br><span class="line">595</span><br><span class="line">596</span><br><span class="line">597</span><br><span class="line">598</span><br><span class="line">599</span><br><span class="line">600</span><br><span class="line">601</span><br><span class="line">602</span><br><span class="line">603</span><br><span class="line">604</span><br><span class="line">605</span><br><span class="line">606</span><br><span class="line">607</span><br><span class="line">608</span><br><span class="line">609</span><br><span class="line">610</span><br><span class="line">611</span><br><span class="line">612</span><br><span class="line">613</span><br><span class="line">614</span><br><span class="line">615</span><br><span class="line">616</span><br><span class="line">617</span><br><span class="line">618</span><br><span class="line">619</span><br><span class="line">620</span><br><span class="line">621</span><br><span class="line">622</span><br><span class="line">623</span><br><span class="line">624</span><br><span class="line">625</span><br><span class="line">626</span><br><span class="line">627</span><br><span class="line">628</span><br><span class="line">629</span><br><span class="line">630</span><br><span class="line">631</span><br><span class="line">632</span><br><span class="line">633</span><br><span class="line">634</span><br><span class="line">635</span><br><span class="line">636</span><br><span class="line">637</span><br><span class="line">638</span><br><span class="line">639</span><br><span class="line">640</span><br><span class="line">641</span><br><span class="line">642</span><br><span class="line">643</span><br><span class="line">644</span><br><span class="line">645</span><br><span class="line">646</span><br><span class="line">647</span><br><span class="line">648</span><br><span class="line">649</span><br><span class="line">650</span><br><span class="line">651</span><br><span class="line">652</span><br><span class="line">653</span><br><span class="line">654</span><br><span class="line">655</span><br><span class="line">656</span><br><span class="line">657</span><br><span class="line">658</span><br><span class="line">659</span><br><span class="line">660</span><br><span class="line">661</span><br><span class="line">662</span><br><span class="line">663</span><br><span class="line">664</span><br><span class="line">665</span><br><span class="line">666</span><br><span class="line">667</span><br><span class="line">668</span><br><span class="line">669</span><br><span class="line">670</span><br><span class="line">671</span><br><span class="line">672</span><br><span class="line">673</span><br><span class="line">674</span><br><span class="line">675</span><br><span class="line">676</span><br><span class="line">677</span><br><span class="line">678</span><br><span class="line">679</span><br><span class="line">680</span><br><span class="line">681</span><br><span class="line">682</span><br><span class="line">683</span><br><span class="line">684</span><br><span class="line">685</span><br><span class="line">686</span><br><span class="line">687</span><br><span class="line">688</span><br><span class="line">689</span><br><span class="line">690</span><br><span class="line">691</span><br><span class="line">692</span><br><span class="line">693</span><br><span class="line">694</span><br><span class="line">695</span><br><span class="line">696</span><br><span class="line">697</span><br><span class="line">698</span><br><span class="line">699</span><br><span class="line">700</span><br><span class="line">701</span><br><span class="line">702</span><br><span class="line">703</span><br><span class="line">704</span><br><span class="line">705</span><br><span class="line">706</span><br><span class="line">707</span><br><span class="line">708</span><br><span class="line">709</span><br><span class="line">710</span><br><span class="line">711</span><br><span class="line">712</span><br><span class="line">713</span><br><span class="line">714</span><br><span class="line">715</span><br><span class="line">716</span><br><span class="line">717</span><br><span class="line">718</span><br><span class="line">719</span><br><span class="line">720</span><br><span class="line">721</span><br><span class="line">722</span><br><span class="line">723</span><br><span class="line">724</span><br><span class="line">725</span><br><span class="line">726</span><br><span class="line">727</span><br><span class="line">728</span><br><span class="line">729</span><br><span class="line">730</span><br><span class="line">731</span><br><span class="line">732</span><br><span class="line">733</span><br><span class="line">734</span><br><span class="line">735</span><br><span class="line">736</span><br><span class="line">737</span><br><span class="line">738</span><br><span class="line">739</span><br><span class="line">740</span><br><span class="line">741</span><br><span class="line">742</span><br><span class="line">743</span><br><span class="line">744</span><br><span class="line">745</span><br><span class="line">746</span><br><span class="line">747</span><br><span class="line">748</span><br><span class="line">749</span><br><span class="line">750</span><br><span class="line">751</span><br><span class="line">752</span><br><span class="line">753</span><br><span class="line">754</span><br><span class="line">755</span><br><span class="line">756</span><br><span class="line">757</span><br><span class="line">758</span><br><span class="line">759</span><br><span class="line">760</span><br><span class="line">761</span><br><span class="line">762</span><br><span class="line">763</span><br><span class="line">764</span><br><span class="line">765</span><br><span class="line">766</span><br><span class="line">767</span><br><span class="line">768</span><br><span class="line">769</span><br><span class="line">770</span><br><span class="line">771</span><br><span class="line">772</span><br><span class="line">773</span><br><span class="line">774</span><br><span class="line">775</span><br><span class="line">776</span><br><span class="line">777</span><br><span class="line">778</span><br><span class="line">779</span><br><span class="line">780</span><br><span class="line">781</span><br><span class="line">782</span><br><span class="line">783</span><br><span class="line">784</span><br><span class="line">785</span><br><span class="line">786</span><br><span class="line">787</span><br><span class="line">788</span><br><span class="line">789</span><br><span class="line">790</span><br><span class="line">791</span><br><span class="line">792</span><br><span class="line">793</span><br><span class="line">794</span><br><span class="line">795</span><br><span class="line">796</span><br><span class="line">797</span><br><span class="line">798</span><br><span class="line">799</span><br><span class="line">800</span><br><span class="line">801</span><br><span class="line">802</span><br><span class="line">803</span><br><span class="line">804</span><br><span class="line">805</span><br><span class="line">806</span><br><span class="line">807</span><br><span class="line">808</span><br><span class="line">809</span><br><span class="line">810</span><br><span class="line">811</span><br><span class="line">812</span><br><span class="line">813</span><br><span class="line">814</span><br><span class="line">815</span><br><span class="line">816</span><br><span class="line">817</span><br><span class="line">818</span><br><span class="line">819</span><br><span class="line">820</span><br><span class="line">821</span><br><span class="line">822</span><br><span class="line">823</span><br><span class="line">824</span><br><span class="line">825</span><br><span class="line">826</span><br><span class="line">827</span><br><span class="line">828</span><br><span class="line">829</span><br><span class="line">830</span><br><span class="line">831</span><br><span class="line">832</span><br><span class="line">833</span><br><span class="line">834</span><br><span class="line">835</span><br><span class="line">836</span><br><span class="line">837</span><br><span class="line">838</span><br><span class="line">839</span><br><span class="line">840</span><br><span class="line">841</span><br><span class="line">842</span><br><span class="line">843</span><br><span class="line">844</span><br><span class="line">845</span><br><span class="line">846</span><br><span class="line">847</span><br><span class="line">848</span><br><span class="line">849</span><br><span class="line">850</span><br><span class="line">851</span><br><span class="line">852</span><br><span class="line">853</span><br><span class="line">854</span><br><span class="line">855</span><br><span class="line">856</span><br><span class="line">857</span><br><span class="line">858</span><br><span class="line">859</span><br><span class="line">860</span><br><span class="line">861</span><br><span class="line">862</span><br><span class="line">863</span><br><span class="line">864</span><br><span class="line">865</span><br><span class="line">866</span><br><span class="line">867</span><br><span class="line">868</span><br><span class="line">869</span><br><span class="line">870</span><br><span class="line">871</span><br><span class="line">872</span><br><span class="line">873</span><br><span class="line">874</span><br><span class="line">875</span><br><span class="line">876</span><br><span class="line">877</span><br><span class="line">878</span><br><span class="line">879</span><br><span class="line">880</span><br><span class="line">881</span><br><span class="line">882</span><br><span class="line">883</span><br><span class="line">884</span><br><span class="line">885</span><br><span class="line">886</span><br><span class="line">887</span><br><span class="line">888</span><br><span class="line">889</span><br><span class="line">890</span><br><span class="line">891</span><br><span class="line">892</span><br><span class="line">893</span><br><span class="line">894</span><br><span class="line">895</span><br><span class="line">896</span><br><span class="line">897</span><br><span class="line">898</span><br><span class="line">899</span><br><span class="line">900</span><br><span class="line">901</span><br><span class="line">902</span><br><span class="line">903</span><br><span class="line">904</span><br><span class="line">905</span><br><span class="line">906</span><br><span class="line">907</span><br><span class="line">908</span><br><span class="line">909</span><br><span class="line">910</span><br><span class="line">911</span><br><span class="line">912</span><br><span class="line">913</span><br><span class="line">914</span><br><span class="line">915</span><br><span class="line">916</span><br><span class="line">917</span><br><span class="line">918</span><br><span class="line">919</span><br><span class="line">920</span><br><span class="line">921</span><br><span class="line">922</span><br><span class="line">923</span><br><span class="line">924</span><br><span class="line">925</span><br><span class="line">926</span><br><span class="line">927</span><br><span class="line">928</span><br><span class="line">929</span><br><span class="line">930</span><br><span class="line">931</span><br><span class="line">932</span><br><span class="line">933</span><br><span class="line">934</span><br><span class="line">935</span><br><span class="line">936</span><br><span class="line">937</span><br><span class="line">938</span><br><span class="line">939</span><br><span class="line">940</span><br><span class="line">941</span><br><span class="line">942</span><br><span class="line">943</span><br><span class="line">944</span><br><span class="line">945</span><br><span class="line">946</span><br><span class="line">947</span><br><span class="line">948</span><br><span class="line">949</span><br><span class="line">950</span><br><span class="line">951</span><br><span class="line">952</span><br><span class="line">953</span><br><span class="line">954</span><br><span class="line">955</span><br><span class="line">956</span><br><span class="line">957</span><br><span class="line">958</span><br><span class="line">959</span><br><span class="line">960</span><br><span class="line">961</span><br><span class="line">962</span><br><span class="line">963</span><br><span class="line">964</span><br><span class="line">965</span><br><span class="line">966</span><br><span class="line">967</span><br><span class="line">968</span><br><span class="line">969</span><br><span class="line">970</span><br><span class="line">971</span><br><span class="line">972</span><br><span class="line">973</span><br><span class="line">974</span><br><span class="line">975</span><br><span class="line">976</span><br><span class="line">977</span><br><span class="line">978</span><br><span class="line">979</span><br><span class="line">980</span><br><span class="line">981</span><br><span class="line">982</span><br><span class="line">983</span><br><span class="line">984</span><br><span class="line">985</span><br><span class="line">986</span><br><span class="line">987</span><br><span class="line">988</span><br><span class="line">989</span><br><span class="line">990</span><br><span class="line">991</span><br><span class="line">992</span><br><span class="line">993</span><br><span class="line">994</span><br><span class="line">995</span><br><span class="line">996</span><br><span class="line">997</span><br><span class="line">998</span><br><span class="line">999</span><br><span class="line">1000</span><br><span class="line">1001</span><br><span class="line">1002</span><br><span class="line">1003</span><br><span class="line">1004</span><br><span class="line">1005</span><br><span class="line">1006</span><br><span class="line">1007</span><br><span class="line">1008</span><br><span class="line">1009</span><br><span class="line">1010</span><br><span class="line">1011</span><br><span class="line">1012</span><br><span class="line">1013</span><br><span class="line">1014</span><br><span class="line">1015</span><br><span class="line">1016</span><br><span class="line">1017</span><br><span class="line">1018</span><br><span class="line">1019</span><br><span class="line">1020</span><br><span class="line">1021</span><br><span class="line">1022</span><br><span class="line">1023</span><br><span class="line">1024</span><br><span class="line">1025</span><br><span class="line">1026</span><br><span class="line">1027</span><br><span class="line">1028</span><br><span class="line">1029</span><br><span class="line">1030</span><br><span class="line">1031</span><br><span class="line">1032</span><br><span class="line">1033</span><br><span class="line">1034</span><br><span class="line">1035</span><br><span class="line">1036</span><br><span class="line">1037</span><br><span class="line">1038</span><br><span class="line">1039</span><br><span class="line">1040</span><br><span class="line">1041</span><br><span class="line">1042</span><br><span class="line">1043</span><br><span class="line">1044</span><br><span class="line">1045</span><br><span class="line">1046</span><br><span class="line">1047</span><br><span class="line">1048</span><br><span class="line">1049</span><br><span class="line">1050</span><br><span class="line">1051</span><br><span class="line">1052</span><br><span class="line">1053</span><br><span class="line">1054</span><br><span class="line">1055</span><br><span class="line">1056</span><br><span class="line">1057</span><br><span class="line">1058</span><br><span class="line">1059</span><br><span class="line">1060</span><br><span class="line">1061</span><br><span class="line">1062</span><br><span class="line">1063</span><br><span class="line">1064</span><br><span class="line">1065</span><br><span class="line">1066</span><br><span class="line">1067</span><br><span class="line">1068</span><br><span class="line">1069</span><br><span class="line">1070</span><br><span class="line">1071</span><br><span class="line">1072</span><br><span class="line">1073</span><br><span class="line">1074</span><br><span class="line">1075</span><br><span class="line">1076</span><br><span class="line">1077</span><br><span class="line">1078</span><br><span class="line">1079</span><br><span class="line">1080</span><br><span class="line">1081</span><br><span class="line">1082</span><br><span class="line">1083</span><br><span class="line">1084</span><br><span class="line">1085</span><br><span class="line">1086</span><br><span class="line">1087</span><br><span class="line">1088</span><br><span class="line">1089</span><br><span class="line">1090</span><br><span class="line">1091</span><br><span class="line">1092</span><br><span class="line">1093</span><br><span class="line">1094</span><br><span class="line">1095</span><br><span class="line">1096</span><br><span class="line">1097</span><br><span class="line">1098</span><br><span class="line">1099</span><br><span class="line">1100</span><br><span class="line">1101</span><br><span class="line">1102</span><br><span class="line">1103</span><br><span class="line">1104</span><br><span class="line">1105</span><br><span class="line">1106</span><br><span class="line">1107</span><br><span class="line">1108</span><br><span class="line">1109</span><br><span class="line">1110</span><br><span class="line">1111</span><br><span class="line">1112</span><br><span class="line">1113</span><br><span class="line">1114</span><br><span class="line">1115</span><br><span class="line">1116</span><br><span class="line">1117</span><br><span class="line">1118</span><br><span class="line">1119</span><br><span class="line">1120</span><br><span class="line">1121</span><br><span class="line">1122</span><br><span class="line">1123</span><br><span class="line">1124</span><br><span class="line">1125</span><br><span class="line">1126</span><br><span class="line">1127</span><br><span class="line">1128</span><br><span class="line">1129</span><br><span class="line">1130</span><br><span class="line">1131</span><br><span class="line">1132</span><br><span class="line">1133</span><br><span class="line">1134</span><br><span class="line">1135</span><br><span class="line">1136</span><br><span class="line">1137</span><br><span class="line">1138</span><br><span class="line">1139</span><br><span class="line">1140</span><br><span class="line">1141</span><br><span class="line">1142</span><br><span class="line">1143</span><br><span class="line">1144</span><br><span class="line">1145</span><br><span class="line">1146</span><br><span class="line">1147</span><br><span class="line">1148</span><br><span class="line">1149</span><br><span class="line">1150</span><br><span class="line">1151</span><br><span class="line">1152</span><br><span class="line">1153</span><br><span class="line">1154</span><br><span class="line">1155</span><br><span class="line">1156</span><br><span class="line">1157</span><br><span class="line">1158</span><br><span class="line">1159</span><br><span class="line">1160</span><br><span class="line">1161</span><br><span class="line">1162</span><br><span class="line">1163</span><br><span class="line">1164</span><br><span class="line">1165</span><br><span class="line">1166</span><br><span class="line">1167</span><br><span class="line">1168</span><br><span class="line">1169</span><br><span class="line">1170</span><br><span class="line">1171</span><br><span class="line">1172</span><br><span class="line">1173</span><br><span class="line">1174</span><br><span class="line">1175</span><br><span class="line">1176</span><br><span class="line">1177</span><br><span class="line">1178</span><br><span class="line">1179</span><br><span class="line">1180</span><br><span class="line">1181</span><br><span class="line">1182</span><br><span class="line">1183</span><br><span class="line">1184</span><br><span class="line">1185</span><br><span class="line">1186</span><br><span class="line">1187</span><br><span class="line">1188</span><br><span class="line">1189</span><br><span class="line">1190</span><br><span class="line">1191</span><br><span class="line">1192</span><br><span class="line">1193</span><br><span class="line">1194</span><br><span class="line">1195</span><br><span class="line">1196</span><br><span class="line">1197</span><br><span class="line">1198</span><br><span class="line">1199</span><br><span class="line">1200</span><br><span class="line">1201</span><br><span class="line">1202</span><br><span class="line">1203</span><br><span class="line">1204</span><br><span class="line">1205</span><br><span class="line">1206</span><br><span class="line">1207</span><br><span class="line">1208</span><br><span class="line">1209</span><br><span class="line">1210</span><br><span class="line">1211</span><br><span class="line">1212</span><br><span class="line">1213</span><br><span class="line">1214</span><br><span class="line">1215</span><br><span class="line">1216</span><br><span class="line">1217</span><br><span class="line">1218</span><br><span class="line">1219</span><br><span class="line">1220</span><br><span class="line">1221</span><br><span class="line">1222</span><br><span class="line">1223</span><br><span class="line">1224</span><br><span class="line">1225</span><br><span class="line">1226</span><br><span class="line">1227</span><br><span class="line">1228</span><br><span class="line">1229</span><br><span class="line">1230</span><br><span class="line">1231</span><br><span class="line">1232</span><br><span class="line">1233</span><br><span class="line">1234</span><br><span class="line">1235</span><br><span class="line">1236</span><br><span class="line">1237</span><br><span class="line">1238</span><br><span class="line">1239</span><br><span class="line">1240</span><br><span class="line">1241</span><br><span class="line">1242</span><br><span class="line">1243</span><br><span class="line">1244</span><br><span class="line">1245</span><br><span class="line">1246</span><br><span class="line">1247</span><br><span class="line">1248</span><br><span class="line">1249</span><br><span class="line">1250</span><br><span class="line">1251</span><br><span class="line">1252</span><br><span class="line">1253</span><br><span class="line">1254</span><br><span class="line">1255</span><br><span class="line">1256</span><br><span class="line">1257</span><br><span class="line">1258</span><br><span class="line">1259</span><br><span class="line">1260</span><br><span class="line">1261</span><br><span class="line">1262</span><br><span class="line">1263</span><br><span class="line">1264</span><br><span class="line">1265</span><br><span class="line">1266</span><br><span class="line">1267</span><br><span class="line">1268</span><br><span class="line">1269</span><br><span class="line">1270</span><br><span class="line">1271</span><br><span class="line">1272</span><br><span class="line">1273</span><br><span class="line">1274</span><br><span class="line">1275</span><br><span class="line">1276</span><br><span class="line">1277</span><br><span class="line">1278</span><br><span class="line">1279</span><br><span class="line">1280</span><br><span class="line">1281</span><br><span class="line">1282</span><br><span class="line">1283</span><br><span class="line">1284</span><br><span class="line">1285</span><br><span class="line">1286</span><br><span class="line">1287</span><br><span class="line">1288</span><br><span class="line">1289</span><br><span class="line">1290</span><br><span class="line">1291</span><br><span class="line">1292</span><br><span class="line">1293</span><br><span class="line">1294</span><br><span class="line">1295</span><br><span class="line">1296</span><br><span class="line">1297</span><br><span class="line">1298</span><br><span class="line">1299</span><br><span class="line">1300</span><br><span class="line">1301</span><br><span class="line">1302</span><br><span class="line">1303</span><br><span class="line">1304</span><br><span class="line">1305</span><br><span class="line">1306</span><br><span class="line">1307</span><br><span class="line">1308</span><br><span class="line">1309</span><br><span class="line">1310</span><br><span class="line">1311</span><br><span class="line">1312</span><br><span class="line">1313</span><br><span class="line">1314</span><br><span class="line">1315</span><br><span class="line">1316</span><br><span class="line">1317</span><br><span class="line">1318</span><br><span class="line">1319</span><br><span class="line">1320</span><br><span class="line">1321</span><br><span class="line">1322</span><br><span class="line">1323</span><br><span class="line">1324</span><br><span class="line">1325</span><br><span class="line">1326</span><br><span class="line">1327</span><br><span class="line">1328</span><br><span class="line">1329</span><br><span class="line">1330</span><br><span class="line">1331</span><br><span class="line">1332</span><br><span class="line">1333</span><br><span class="line">1334</span><br><span class="line">1335</span><br><span class="line">1336</span><br><span class="line">1337</span><br><span class="line">1338</span><br><span class="line">1339</span><br><span class="line">1340</span><br><span class="line">1341</span><br><span class="line">1342</span><br><span class="line">1343</span><br><span class="line">1344</span><br><span class="line">1345</span><br><span class="line">1346</span><br><span class="line">1347</span><br><span class="line">1348</span><br><span class="line">1349</span><br><span class="line">1350</span><br><span class="line">1351</span><br><span class="line">1352</span><br><span class="line">1353</span><br><span class="line">1354</span><br><span class="line">1355</span><br><span class="line">1356</span><br><span class="line">1357</span><br><span class="line">1358</span><br><span class="line">1359</span><br><span class="line">1360</span><br><span class="line">1361</span><br><span class="line">1362</span><br><span class="line">1363</span><br><span class="line">1364</span><br><span class="line">1365</span><br><span class="line">1366</span><br><span class="line">1367</span><br><span class="line">1368</span><br><span class="line">1369</span><br><span class="line">1370</span><br><span class="line">1371</span><br><span class="line">1372</span><br><span class="line">1373</span><br><span class="line">1374</span><br><span class="line">1375</span><br><span class="line">1376</span><br><span class="line">1377</span><br><span class="line">1378</span><br><span class="line">1379</span><br><span class="line">1380</span><br><span class="line">1381</span><br><span class="line">1382</span><br><span class="line">1383</span><br><span class="line">1384</span><br><span class="line">1385</span><br><span class="line">1386</span><br><span class="line">1387</span><br><span class="line">1388</span><br><span class="line">1389</span><br><span class="line">1390</span><br><span class="line">1391</span><br><span class="line">1392</span><br><span class="line">1393</span><br><span class="line">1394</span><br><span class="line">1395</span><br><span class="line">1396</span><br><span class="line">1397</span><br><span class="line">1398</span><br><span class="line">1399</span><br><span class="line">1400</span><br><span class="line">1401</span><br><span class="line">1402</span><br><span class="line">1403</span><br><span class="line">1404</span><br><span class="line">1405</span><br><span class="line">1406</span><br><span class="line">1407</span><br><span class="line">1408</span><br><span class="line">1409</span><br><span class="line">1410</span><br><span class="line">1411</span><br><span class="line">1412</span><br><span class="line">1413</span><br><span class="line">1414</span><br><span class="line">1415</span><br><span class="line">1416</span><br><span class="line">1417</span><br><span class="line">1418</span><br><span class="line">1419</span><br><span class="line">1420</span><br><span class="line">1421</span><br><span class="line">1422</span><br><span class="line">1423</span><br><span class="line">1424</span><br><span class="line">1425</span><br><span class="line">1426</span><br><span class="line">1427</span><br><span class="line">1428</span><br><span class="line">1429</span><br><span class="line">1430</span><br><span class="line">1431</span><br><span class="line">1432</span><br><span class="line">1433</span><br><span class="line">1434</span><br><span class="line">1435</span><br><span class="line">1436</span><br><span class="line">1437</span><br><span class="line">1438</span><br><span class="line">1439</span><br><span class="line">1440</span><br><span class="line">1441</span><br><span class="line">1442</span><br><span class="line">1443</span><br><span class="line">1444</span><br><span class="line">1445</span><br><span class="line">1446</span><br><span class="line">1447</span><br><span class="line">1448</span><br><span class="line">1449</span><br><span class="line">1450</span><br><span class="line">1451</span><br><span class="line">1452</span><br><span class="line">1453</span><br><span class="line">1454</span><br><span class="line">1455</span><br><span class="line">1456</span><br><span class="line">1457</span><br><span class="line">1458</span><br><span class="line">1459</span><br><span class="line">1460</span><br><span class="line">1461</span><br><span class="line">1462</span><br><span class="line">1463</span><br><span class="line">1464</span><br><span class="line">1465</span><br><span class="line">1466</span><br><span class="line">1467</span><br><span class="line">1468</span><br><span class="line">1469</span><br><span class="line">1470</span><br><span class="line">1471</span><br><span class="line">1472</span><br><span class="line">1473</span><br><span class="line">1474</span><br><span class="line">1475</span><br><span class="line">1476</span><br><span class="line">1477</span><br><span class="line">1478</span><br><span class="line">1479</span><br><span class="line">1480</span><br><span class="line">1481</span><br><span class="line">1482</span><br><span class="line">1483</span><br><span class="line">1484</span><br><span class="line">1485</span><br><span class="line">1486</span><br><span class="line">1487</span><br><span class="line">1488</span><br><span class="line">1489</span><br><span class="line">1490</span><br><span class="line">1491</span><br><span class="line">1492</span><br><span class="line">1493</span><br><span class="line">1494</span><br><span class="line">1495</span><br><span class="line">1496</span><br><span class="line">1497</span><br><span class="line">1498</span><br><span class="line">1499</span><br><span class="line">1500</span><br><span class="line">1501</span><br><span class="line">1502</span><br><span class="line">1503</span><br><span class="line">1504</span><br><span class="line">1505</span><br><span class="line">1506</span><br><span class="line">1507</span><br><span class="line">1508</span><br><span class="line">1509</span><br><span class="line">1510</span><br><span class="line">1511</span><br><span class="line">1512</span><br><span class="line">1513</span><br><span class="line">1514</span><br><span class="line">1515</span><br><span class="line">1516</span><br><span class="line">1517</span><br><span class="line">1518</span><br><span class="line">1519</span><br><span class="line">1520</span><br><span class="line">1521</span><br><span class="line">1522</span><br><span class="line">1523</span><br><span class="line">1524</span><br><span class="line">1525</span><br><span class="line">1526</span><br><span class="line">1527</span><br><span class="line">1528</span><br><span class="line">1529</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">#<span class="keyword">define</span> _CRT_SECURE_NO_WARNINGS</span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iostream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;algorithm&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;string&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;iomanip&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;fstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;vector&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;sstream&gt;</span></span></span><br><span class="line"><span class="meta">#<span class="keyword">include</span> <span class="string">&lt;ctime&gt;</span></span></span><br><span class="line"><span class="keyword">using</span> <span class="keyword">namespace</span> std;</span><br><span class="line"><span class="comment">//工具类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Tool</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line"><span class="comment">//获取系统当前时间</span></span><br><span class="line"><span class="function"><span class="type">static</span> string <span class="title">getTime</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="type">time_t</span> t = <span class="built_in">time</span>(<span class="literal">NULL</span>);</span><br><span class="line"><span class="keyword">struct</span> <span class="title class_">tm</span>* now = <span class="built_in">localtime</span>(&amp;t);</span><br><span class="line">std::stringstream time;</span><br><span class="line">time &lt;&lt; now-&gt;tm_year + <span class="number">1900</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_mon + <span class="number">1</span> &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mon + <span class="number">1</span> &lt;&lt; <span class="string">&quot;-&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_mday &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_mday &lt;&lt; <span class="string">&quot;_&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_hour &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_hour &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_min &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_min &lt;&lt; <span class="string">&quot;:&quot;</span>;</span><br><span class="line"><span class="keyword">if</span>(now-&gt;tm_sec &lt; <span class="number">10</span>) time &lt;&lt; <span class="string">&quot;0&quot;</span>;</span><br><span class="line">time &lt;&lt; now-&gt;tm_sec;</span><br><span class="line"><span class="keyword">return</span> time.<span class="built_in">str</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">// 用户类  普通乘客和管理员都通过这个类定义</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Person</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string name;     <span class="comment">//用户名  作为主键  唯一标识</span></span><br><span class="line">string pwd;      <span class="comment">//登录系统的密码</span></span><br><span class="line">string dotime;   <span class="comment">//购票时间</span></span><br><span class="line">string mark;     <span class="comment">//标志  mark为&quot;1&quot; 表示为管理员  mark为&quot;2&quot;表示为乘客</span></span><br><span class="line"><span class="built_in">Person</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">Person</span>(string name, string pwd, string dotime, string mark)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;pwd = pwd;</span><br><span class="line"><span class="keyword">this</span>-&gt;dotime = dotime;</span><br><span class="line"><span class="keyword">this</span>-&gt;mark = mark;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出用户表的某一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showPersonInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; name;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; pwd &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;用户名&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;密码&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//校车类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">Line</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">string num;                  <span class="comment">//校车编号</span></span><br><span class="line">string firstTime;            <span class="comment">//早班车时间</span></span><br><span class="line">string lastTime;             <span class="comment">//末班车时间</span></span><br><span class="line"><span class="type">double</span> price;                <span class="comment">//票价</span></span><br><span class="line">vector&lt;string&gt; stations;     <span class="comment">//经过的站台信息</span></span><br><span class="line"><span class="type">int</span> stNum;                   <span class="comment">//站台数量</span></span><br><span class="line"><span class="type">int</span> pNum;                    <span class="comment">//最大载客数量=可以售出的总票数</span></span><br><span class="line"><span class="type">int</span> hpNum;                   <span class="comment">//当前已载客数量 = 当前已售出票的数量</span></span><br><span class="line">vector&lt;Person&gt; ps;           <span class="comment">//当前搭载的乘客的信息</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//Line类的方法声明：</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line"><span class="built_in">Line</span>();</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line"><span class="built_in">Line</span>(string num, string firstTime, string lastTime, <span class="type">double</span> price, vector&lt;string&gt; stations, <span class="type">int</span> stNum, <span class="type">int</span> pNum, <span class="type">int</span> hpNum, vector&lt;Person&gt; ps);</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">~<span class="built_in">Line</span>();</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">showLineInfo</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//输出校车表的某一行</span></span><br><span class="line"><span class="function"><span class="type">static</span> <span class="type">void</span> <span class="title">showHeader</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//Line类的方法实现</span></span><br><span class="line"><span class="comment">//无参构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//有参构造函数</span></span><br><span class="line">Line::<span class="built_in">Line</span>(string num, string firstTime, string lastTime, <span class="type">double</span> price, vector&lt;string&gt; stations, <span class="type">int</span> stNum, <span class="type">int</span> pNum, <span class="type">int</span> hpNum, vector&lt;Person&gt; ps)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;num = num;</span><br><span class="line"><span class="keyword">this</span>-&gt;firstTime = firstTime;</span><br><span class="line"><span class="keyword">this</span>-&gt;lastTime = lastTime;</span><br><span class="line"><span class="keyword">this</span>-&gt;price = price;</span><br><span class="line"><span class="keyword">this</span>-&gt;stations = stations;</span><br><span class="line"><span class="keyword">this</span>-&gt;stNum = stNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;pNum = pNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;hpNum = hpNum;</span><br><span class="line"><span class="keyword">this</span>-&gt;ps = ps;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//析构函数</span></span><br><span class="line">Line::~<span class="built_in">Line</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出表头</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::showLineInfo</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; num;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt;  firstTime;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; lastTime;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; price;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; stations.<span class="built_in">front</span>();</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; stations.<span class="built_in">back</span>();</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; stNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; pNum;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; hpNum &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//输出校车表的某一行</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">Line::showHeader</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;校车编号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt;  <span class="string">&quot;早班车时间&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;末班车时间&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;票价&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;起点站&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;终点站&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;站台数量&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;核载人数&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;实载人数&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//校车管理系统类</span></span><br><span class="line"><span class="keyword">class</span> <span class="title class_">LineSystem</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">public</span>:</span><br><span class="line">vector&lt;Line&gt; linelist; <span class="comment">//若干个校车</span></span><br><span class="line">vector&lt;Person&gt; plist;  <span class="comment">//若干个系统注册成功的乘客</span></span><br><span class="line">Person admin; <span class="comment">//一个管理员</span></span><br><span class="line"></span><br><span class="line"><span class="comment">//校车管理系统类LineSystem的方法声明：</span></span><br><span class="line"><span class="built_in">LineSystem</span>();</span><br><span class="line"><span class="built_in">LineSystem</span>(vector&lt;Line&gt; linelist, vector&lt;Person&gt; plist, Person admin);</span><br><span class="line">~<span class="built_in">LineSystem</span>();</span><br><span class="line"><span class="comment">//设置管理员的账号密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">setAdmin</span><span class="params">(string name, string pwd)</span></span>;</span><br><span class="line"><span class="comment">//初始化  实例化校车管理系统类之后，由对象调用初始化函数读入txt文件中的数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">init</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//登录菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">menu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//登录函数：乘客和管理员都通过login函数登录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">login</span><span class="params">(string sel)</span></span>;</span><br><span class="line"><span class="comment">//注册函数：乘客通过reg函数注册</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">reg</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//乘客菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">pMenu</span><span class="params">(Person&amp; p)</span></span>;</span><br><span class="line"><span class="comment">//管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">adminMenu</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">readFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">writeFile</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//添加校车信息 ：校车编号、早班车时间、末班车时间、票价、核载人数、经过的站台信息、当前实载人数(默认初值为0)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">insertList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//删除校车信息：按照校车编号删除，删除时会将被删除的校车的售票信息也一并删除</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">deleteList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//修改校车信息：可以选择修改校车基本信息或者沿途站台信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updateList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//查询校车信息：输入校车编号 如果查找到则输出该校车的基本信息和沿途站台信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">selectList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历校车容器  主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseLines</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历校车沿途站台信息  主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseStations</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//显示信息列表：校车基本信息表 和 校车沿途站台信息表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayList</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//遍历用户信息 主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">traverseUsers</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//用户信息一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayUsers</span><span class="params">()</span></span>;</span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">displayTickets</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//管理用户功能：包含添加新用户和删除用户  管理员特有权限</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">manageUsers</span><span class="params">()</span></span>;</span><br><span class="line"><span class="comment">//订票</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">order</span><span class="params">(Person&amp; p)</span></span>;</span><br><span class="line"><span class="comment">//退票</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">refund</span><span class="params">(Person&amp; p)</span></span>;</span><br><span class="line"><span class="comment">//修改用户密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">updatePwd</span><span class="params">(Person&amp; p)</span></span>;</span><br><span class="line"><span class="comment">//清空系统所有数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">clearList</span><span class="params">()</span></span>;</span><br><span class="line">&#125;;</span><br><span class="line"></span><br><span class="line"><span class="comment">//校车管理系统类LineSystem的方法实现：</span></span><br><span class="line">LineSystem::<span class="built_in">LineSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line">LineSystem::<span class="built_in">LineSystem</span>(vector&lt;Line&gt; linelist, vector&lt;Person&gt; plist, Person admin)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;linelist = linelist;</span><br><span class="line"><span class="keyword">this</span>-&gt;plist = plist;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin = admin;</span><br><span class="line">&#125;</span><br><span class="line">LineSystem::~<span class="built_in">LineSystem</span>()</span><br><span class="line">&#123;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//设置管理员的账号密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::setAdmin</span><span class="params">(string name, string pwd)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.name = name;</span><br><span class="line"><span class="keyword">this</span>-&gt;admin.pwd = pwd;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//初始化  实例化校车管理系统类之后，由对象调用初始化函数读入txt文件中的数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::init</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">readFile</span>(); <span class="comment">//读取文件</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::menu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t************欢迎来到校车管理系统************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t你可以进行以下操作:&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             1   管理员登录               |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             2   乘客登录                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             3   乘客注册                 |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|             0   退出                     |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">login</span>(sel);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">reg</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">exit</span>(<span class="number">0</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//注册函数：乘客通过reg函数注册</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::reg</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">p.dotime = <span class="string">&quot;yyyy-mm-dd_HH:mm:ss&quot;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t请填写用户信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t用户名：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; p.name;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; plist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == plist[i].name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t该用户名已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line">plist.<span class="built_in">push_back</span>(p);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t注册成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//登录函数：乘客和管理员都通过login函数登录</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::login</span><span class="params">(string sel)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = sel;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t请填写用户信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入用户名：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.name;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line"><span class="keyword">if</span>(p.mark == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == <span class="keyword">this</span>-&gt;admin.name &amp;&amp; p.pwd == <span class="keyword">this</span>-&gt;admin.pwd)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t管理员登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(p.mark == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; <span class="keyword">this</span>-&gt;plist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == plist[i].name &amp;&amp; p.pwd == plist[i].pwd)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t乘客登录成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(!flag) cout&lt;&lt;<span class="string">&quot;\t\t\t用户名或密码输入错误&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t\t\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//乘客菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::pMenu</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t************欢迎来到校车购票平台************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        1   校车信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        2   查询校车信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        3   订票                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        4   退票                          |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        5   修改密码                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|        0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-5】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-5】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayList</span>(); <span class="comment">//显示校车信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectList</span>();  <span class="comment">//查询校车信息</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">order</span>(p);       <span class="comment">//订票</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">refund</span>(p);     <span class="comment">//退票</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updatePwd</span>(p);  <span class="comment">//修改密码</span></span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">pMenu</span>(p);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)     <span class="comment">//注销登录</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line"><span class="comment">//管理员菜单</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::adminMenu</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t*************欢迎来到校车管理系统******************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               1   添加校车信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               2   删除校车信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               3   修改校车信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               4   查询校车信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               5   校车信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               6   用户信息一览表                |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               7   已售车票信息一览表            |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               8   管理用户信息                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               9   清空系统数据                  |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|               0   注销登录                      |&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t|-------------------------------------------------|&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t请选择【0-9】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;0&quot;</span> &amp;&amp; sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span> &amp;&amp; sel != <span class="string">&quot;4&quot;</span> &amp;&amp; sel != <span class="string">&quot;5&quot;</span> &amp;&amp; sel != <span class="string">&quot;6&quot;</span> &amp;&amp; sel != <span class="string">&quot;7&quot;</span> &amp;&amp; sel != <span class="string">&quot;8&quot;</span> &amp;&amp; sel != <span class="string">&quot;9&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t\t\t输入不合法,请重新选择【0-9】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">insertList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">deleteList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">updateList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;4&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">selectList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;5&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;6&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayUsers</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;7&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">displayTickets</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;8&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">manageUsers</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;9&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">clearList</span>();</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">adminMenu</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;0&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//读取文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::readFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//读取文件line.txt  对应容器 linelist</span></span><br><span class="line">ifstream ifs;</span><br><span class="line">ifs.<span class="built_in">open</span>(<span class="string">&quot;line.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> n = <span class="number">0</span>; <span class="comment">//用来接收校车数量的值</span></span><br><span class="line">ifs &gt;&gt; n;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; n; i++)</span><br><span class="line">&#123;</span><br><span class="line">Line l;</span><br><span class="line">ifs &gt;&gt; l.num &gt;&gt; l.firstTime &gt;&gt; l.lastTime &gt;&gt; l.price &gt;&gt; l.stNum &gt;&gt; l.pNum &gt;&gt; l.hpNum;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; l.stNum; j++)</span><br><span class="line">&#123;</span><br><span class="line">string st;</span><br><span class="line">ifs &gt;&gt; st;</span><br><span class="line">l.stations.<span class="built_in">push_back</span>(st);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; l.hpNum; k++)</span><br><span class="line">&#123;</span><br><span class="line">Person tp;</span><br><span class="line">ifs &gt;&gt; tp.name &gt;&gt; tp.pwd &gt;&gt; tp.dotime;</span><br><span class="line">tp.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">l.ps.<span class="built_in">push_back</span>(tp);</span><br><span class="line">&#125;</span><br><span class="line">linelist.<span class="built_in">push_back</span>(l);</span><br><span class="line">&#125;</span><br><span class="line">ifs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//读取文件person.txt  对应容器 plist</span></span><br><span class="line">ifstream jfs;</span><br><span class="line">jfs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::in);</span><br><span class="line"><span class="type">int</span> m = <span class="number">0</span>; <span class="comment">//用来接收系统中注册人数的值</span></span><br><span class="line">jfs &gt;&gt; m;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; m; i++)</span><br><span class="line">&#123;</span><br><span class="line">Person zp;</span><br><span class="line">jfs &gt;&gt; zp.name &gt;&gt; zp.pwd;</span><br><span class="line">plist.<span class="built_in">push_back</span>(zp);</span><br><span class="line">&#125;</span><br><span class="line">jfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//写入文件</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::writeFile</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="comment">//写入文件line.txt  对应容器 linelist</span></span><br><span class="line">ofstream ofs;</span><br><span class="line">ofs.<span class="built_in">open</span>(<span class="string">&quot;line.txt&quot;</span>, ios::out);</span><br><span class="line">ofs &lt;&lt; linelist.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//先写入校车数量</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; linelist[i].num &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].firstTime &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].lastTime</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].price &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].stNum &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].pNum</span><br><span class="line">    &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].hpNum &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].stations.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; linelist[i].stations[j] &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; linelist[i].ps.<span class="built_in">size</span>(); k++)</span><br><span class="line">&#123;</span><br><span class="line">ofs &lt;&lt; linelist[i].ps[k].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].ps[k].pwd &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; linelist[i].ps[k].dotime &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">ofs.<span class="built_in">close</span>();</span><br><span class="line"><span class="comment">//写入文件person.txt  对应容器 plist</span></span><br><span class="line">ofstream pfs;</span><br><span class="line">pfs.<span class="built_in">open</span>(<span class="string">&quot;person.txt&quot;</span>, ios::out);</span><br><span class="line">pfs &lt;&lt; plist.<span class="built_in">size</span>() &lt;&lt; endl; <span class="comment">//写入注册人数</span></span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; plist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">pfs &lt;&lt; plist[i].name &lt;&lt; <span class="string">&quot; &quot;</span> &lt;&lt; plist[i].pwd &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">pfs.<span class="built_in">close</span>();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//添加校车信息 ：校车编号、早班车时间、末班车时间、票价、核载人数、经过的站台信息、当前实载人数(默认初值为0)</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::insertList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t***********************欢迎来到添加校车信息功能***********************&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加校车信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string flag = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span> (flag == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t开始信息录入：&quot;</span>&lt;&lt;endl;</span><br><span class="line">Line l;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t校车编号：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; l.num;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l.num == linelist[i].num)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该校车编号已被使用，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t早班车时间：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.firstTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t末班车时间：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.lastTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t票价：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.price;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t核载人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.pNum;</span><br><span class="line">l.hpNum = <span class="number">0</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入经过的站台信息：&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">string option = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(option == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string st;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; cnt + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个站台：&quot;</span>;</span><br><span class="line">cnt++;</span><br><span class="line">cin &gt;&gt; st;</span><br><span class="line">l.stations.<span class="built_in">push_back</span>(st);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该站台添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line"><span class="keyword">while</span>(option != <span class="string">&quot;0&quot;</span> &amp;&amp; option != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">l.stNum = l.stations.<span class="built_in">size</span>();</span><br><span class="line">linelist.<span class="built_in">push_back</span>(l);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t校车信息添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line"><span class="keyword">while</span>(flag != <span class="string">&quot;0&quot;</span> &amp;&amp; flag != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; flag;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//删除校车信息：按照校车编号删除，删除时会将被删除的校车的售票信息也一并删除</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::deleteList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到删除校车信息功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t校车基本信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseLines</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按校车编号删除&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyNum;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的校车编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (vector&lt;Line&gt;::iterator it = linelist.<span class="built_in">begin</span>(); it != linelist.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t&quot;</span> &lt;&lt; keyNum &lt;&lt; <span class="string">&quot;号校车基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Line::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showLineInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t&quot;</span> &lt;&lt; keyNum &lt;&lt; <span class="string">&quot;号校车沿途站台信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; it-&gt;stations.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;it-&gt;stations[i];</span><br><span class="line"><span class="keyword">if</span>(i != it-&gt;stations.<span class="built_in">size</span>() - <span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;--&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\n\t&quot;</span> &lt;&lt; keyNum &lt;&lt; <span class="string">&quot;号校车当前已售票信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;用户名&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;票价&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;购票数&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; it-&gt;ps.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; it-&gt;ps[i].name;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; it-&gt;price;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;1张&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t--------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t如果删除该校车信息，则其所有相关售票信息也将被自动删除！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该校车？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">linelist.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此校车，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改校车信息：可以选择修改校车基本信息或者沿途站台信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::updateList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到修改校车信息功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 修改校车基本信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 修改校车沿途站台信息&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改线路的校车编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (linelist[i].num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改校车当前基本信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Line::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">linelist[i].<span class="built_in">showLineInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Line l = linelist[i];</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的校车编号：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; l.num;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(l.num == linelist[j].num &amp;&amp; i != j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该校车编号已被占用，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的早班车时间：&quot;</span>;</span><br><span class="line">cin&gt;&gt;l.firstTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的末班车时间：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.lastTime;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的票价：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.price;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入修改后的核载人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.pNum;</span><br><span class="line"><span class="keyword">while</span>(linelist[i].hpNum &gt; l.pNum)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改后的核载人数不能小于当前装载的乘客数量！即必须 &gt;= &quot;</span> &lt;&lt; linelist[i].hpNum &lt;&lt; <span class="string">&quot;！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请重新输入修改后的核载人数：&quot;</span>;</span><br><span class="line">cin &gt;&gt; l.pNum;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">linelist[i] = l;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此线路，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">string keyNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待修改线路的校车编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (linelist[i].num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待修改线路当前沿途站台信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].stations.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;linelist[i].stations[j];</span><br><span class="line"><span class="keyword">if</span>(j != linelist[i].stations.<span class="built_in">size</span>() - <span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;--&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">Line l = linelist[i];</span><br><span class="line">l.stations.<span class="built_in">clear</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入修改后的沿途站台信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line">string option = <span class="string">&quot;1&quot;</span>;</span><br><span class="line"><span class="keyword">while</span>(option == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string st;</span><br><span class="line">cout&lt;&lt; <span class="string">&quot;\t第&quot;</span> &lt;&lt; cnt + <span class="number">1</span> &lt;&lt; <span class="string">&quot;个站台：&quot;</span>;</span><br><span class="line">cnt++;</span><br><span class="line">cin&gt;&gt;st;</span><br><span class="line">l.stations.<span class="built_in">push_back</span>(st);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t该站台添加成功！是否继续添加？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line"><span class="keyword">while</span>(option != <span class="string">&quot;0&quot;</span> &amp;&amp; option != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; option;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">l.stNum = l.stations.<span class="built_in">size</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">linelist[i] = l;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t修改成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此线路，无法修改！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//查询校车信息：输入校车编号 如果查找到则输出该校车的基本信息和沿途站台信息</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::selectList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到查询校车信息功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 按校车编号查询&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyNum;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待查询线路的校车编号：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyNum;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t查询结果如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t线路基本信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Line::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (linelist[i].num == keyNum)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">linelist[i].<span class="built_in">showLineInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;linelist[i].num&lt;&lt;<span class="string">&quot;路沿途站台信息：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].stations.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;linelist[i].stations[j];</span><br><span class="line"><span class="keyword">if</span>(j != linelist[i].stations.<span class="built_in">size</span>() - <span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;--&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t无法查询到此线路！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历校车容器  主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::traverseLines</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Line::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">linelist[i].<span class="built_in">showLineInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//遍历校车沿途站台信息  主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::traverseStations</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span> (<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout&lt;&lt; linelist[i].num &lt;&lt;<span class="string">&quot;路： &quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].stations.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;linelist[i].stations[j];</span><br><span class="line"><span class="keyword">if</span>(j != linelist[i].stations.<span class="built_in">size</span>() - <span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;--&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//显示信息列表：校车基本信息表 和 校车沿途站台信息表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::displayList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到显示信息列表功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：校车基本信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseLines</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\n\t表2：校车沿途站台信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseStations</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//遍历用户信息 主要用于其它函数调用</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::traverseUsers</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Person::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; plist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">plist[i].<span class="built_in">showPersonInfo</span>();</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//用户信息一览表</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::displayUsers</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到用户信息一览表****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t表1：用户信息一览表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseUsers</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::displayTickets</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t******************************欢迎来到已售车票一览表***********************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; <span class="string">&quot;校车编号&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;起点站&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; <span class="string">&quot;终点站&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; <span class="string">&quot;票价&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;购票数量&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;购票人&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; <span class="string">&quot;购票时间&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; linelist[j].ps.<span class="built_in">size</span>(); k++)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">12</span>) &lt;&lt; linelist[j].num;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; linelist[j].stations.<span class="built_in">front</span>();</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">14</span>) &lt;&lt; linelist[j].stations.<span class="built_in">back</span>();</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">8</span>) &lt;&lt; linelist[j].price;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; <span class="string">&quot;1张&quot;</span>;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">10</span>) &lt;&lt; linelist[j].ps[k].name;</span><br><span class="line">cout &lt;&lt; left &lt;&lt; <span class="built_in">setw</span>(<span class="number">20</span>) &lt;&lt; linelist[j].ps[k].dotime&lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//管理用户功能：包含添加新用户和删除用户  管理员特有权限</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::manageUsers</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到管理用户功能****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t普通用户信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseUsers</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 添加新用户&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 删除用户&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t3 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span> &amp;&amp; sel != <span class="string">&quot;3&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-3】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Person p;</span><br><span class="line">p.mark = <span class="string">&quot;2&quot;</span>;</span><br><span class="line">p.dotime = <span class="string">&quot;yyyy-mm-dd_HH:mm:ss&quot;</span>;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入用户名：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">do</span></span><br><span class="line">&#123;</span><br><span class="line">check = <span class="literal">false</span>;</span><br><span class="line">cin &gt;&gt; p.name;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; plist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(p.name == plist[i].name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该用户名已存在，请重新输入：&quot;</span>;</span><br><span class="line">check = <span class="literal">true</span>;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">while</span>(check);</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入密码：&quot;</span>;</span><br><span class="line">cin&gt;&gt;p.pwd;</span><br><span class="line">plist.<span class="built_in">push_back</span>(p);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t添加成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">string keyName;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">false</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请输入待删除的用户名：&quot;</span>;</span><br><span class="line">cin &gt;&gt; keyName;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span> (vector&lt;Person&gt;::iterator it = plist.<span class="built_in">begin</span>(); it != plist.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span> (it-&gt;name == keyName)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">true</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除用户的基本信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Person::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">it-&gt;<span class="built_in">showPersonInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t待删除用户的订票信息如下：&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; linelist[j].ps.<span class="built_in">size</span>(); k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(linelist[j].ps[k].name == it-&gt;name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;linelist[j].num&lt;&lt;<span class="string">&quot;号校车（&quot;</span>&lt;&lt;linelist[j].stations.<span class="built_in">front</span>()</span><br><span class="line">    &lt;&lt;<span class="string">&quot;--&gt;&quot;</span> &lt;&lt;linelist[j].stations.<span class="built_in">back</span>() &lt;&lt; <span class="string">&quot;）： &quot;</span> &lt;&lt; <span class="string">&quot;1 张票&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t如果删除该用户信息，则其所有订票信息也将被删除！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认删除该用户？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(vector&lt;Person&gt;::iterator ie = linelist[j].ps.<span class="built_in">begin</span>(); ie != linelist[j].ps.<span class="built_in">end</span>();)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(keyName == ie-&gt;name)</span><br><span class="line">&#123;</span><br><span class="line">linelist[j].hpNum--;</span><br><span class="line">ie = linelist[j].ps.<span class="built_in">erase</span>(ie);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">ie++;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">plist.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t删除成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (!flag) cout &lt;&lt; <span class="string">&quot;\t查无此人，无法删除！\n&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//订票</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::order</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*****************************************欢迎来到订票功能*******************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t校车基本信息表&quot;</span>&lt;&lt;endl;</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">traverseLines</span>();</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 订票&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Line l;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入预订购车票的校车编号：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line"></span><br><span class="line">cin&gt;&gt;l.num;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(linelist[i].num == l.num)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="keyword">if</span>(linelist[i].hpNum &lt; linelist[i].pNum)</span><br><span class="line">&#123;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;linelist[i].num&lt;&lt;<span class="string">&quot;号校车基本信息如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">Line::<span class="built_in">showHeader</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line">linelist[i].<span class="built_in">showLineInfo</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;linelist[i].num&lt;&lt;<span class="string">&quot;号校车沿途站台信息如下：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line">cout&lt;&lt; linelist[i].num &lt;&lt;<span class="string">&quot;路： &quot;</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].stations.<span class="built_in">size</span>(); ++j)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;linelist[i].stations[j];</span><br><span class="line"><span class="keyword">if</span>(j != linelist[i].stations.<span class="built_in">size</span>() - <span class="number">1</span>) cout&lt;&lt;<span class="string">&quot;--&gt;&quot;</span>;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t----------------------------------------------------------------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t票价&quot;</span>&lt;&lt;linelist[i].price&lt;&lt;<span class="string">&quot;元，是否确认订票？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">linelist[i].hpNum++;</span><br><span class="line">p.dotime = Tool::<span class="built_in">getTime</span>();</span><br><span class="line">linelist[i].ps.<span class="built_in">push_back</span>(p);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t购买成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t抱歉！该校车车票已售罄！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t该校车信息不存在，无法订票！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//退票</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::refund</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t*****************************************欢迎来到退票功能*******************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t您的车票订购信息一览表：&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line"></span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> k = <span class="number">0</span>; k &lt; linelist[j].ps.<span class="built_in">size</span>(); k++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(linelist[j].ps[k].name == p.name)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>&lt;&lt;linelist[j].num&lt;&lt;<span class="string">&quot;号校车（&quot;</span>&lt;&lt;linelist[j].stations.<span class="built_in">front</span>()</span><br><span class="line">    &lt;&lt;<span class="string">&quot;--&gt;&quot;</span> &lt;&lt;linelist[j].stations.<span class="built_in">back</span>() &lt;&lt; <span class="string">&quot;）： &quot;</span> &lt;&lt; <span class="string">&quot;1 张票&quot;</span> &lt;&lt; endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t---------------------------------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 退票&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t-----------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">Line l;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入退订车票的校车编号：&quot;</span>;</span><br><span class="line"><span class="type">bool</span> flag = <span class="literal">true</span>;</span><br><span class="line">cin&gt;&gt;l.num;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; linelist.<span class="built_in">size</span>(); ++i)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(linelist[i].num == l.num)</span><br><span class="line">&#123;</span><br><span class="line">flag = <span class="literal">false</span>;</span><br><span class="line"><span class="type">bool</span> check = <span class="literal">false</span>;</span><br><span class="line"><span class="type">int</span> cnt = <span class="number">0</span>;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> j = <span class="number">0</span>; j &lt; linelist[i].ps.<span class="built_in">size</span>(); j++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(linelist[i].ps[j].name == p.name) cnt++;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(cnt &gt; <span class="number">0</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t您一共订购&quot;</span>&lt;&lt;linelist[i].num&lt;&lt;<span class="string">&quot;号校车&quot;</span>&lt;&lt;cnt&lt;&lt;<span class="string">&quot;张票。&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t是否确认退票【1次默认退1张】？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;0&quot;</span>) <span class="keyword">break</span>;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">linelist[i].hpNum--;</span><br><span class="line"><span class="keyword">for</span>(vector&lt;Person&gt;::iterator it = linelist[i].ps.<span class="built_in">begin</span>(); it != linelist[i].ps.<span class="built_in">end</span>(); ++it)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(it-&gt;name == p.name)</span><br><span class="line">&#123;</span><br><span class="line">linelist[i].ps.<span class="built_in">erase</span>(it);</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t退订成功！&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t您并未订购该校车的车票！&quot;</span>&lt;&lt;endl;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(flag) cout&lt;&lt;<span class="string">&quot;\t该校车信息不存在，无法退票！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="comment">//修改用户密码</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::updatePwd</span><span class="params">(Person&amp; p)</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span>(<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t**************************************欢迎来到修改密码功能*****************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; p.name &lt;&lt;<span class="string">&quot;（普通用户）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 修改密码&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt;<span class="string">&quot;\t输入当前密码：&quot;</span>;</span><br><span class="line">string tmpPwd;</span><br><span class="line">cin&gt;&gt;tmpPwd;</span><br><span class="line"><span class="keyword">while</span>(tmpPwd != p.pwd)</span><br><span class="line">&#123;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入错误，请重新输入：&quot;</span>;</span><br><span class="line">cin&gt;&gt;tmpPwd;</span><br><span class="line">&#125;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t输入新密码：&quot;</span>;</span><br><span class="line">string newPwd;</span><br><span class="line">cin&gt;&gt;newPwd;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t确认修改？（1 是 0 否）&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请进行选择【0-1】：&quot;</span>;</span><br><span class="line">string ch = <span class="string">&quot;0&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line"><span class="keyword">while</span>(ch != <span class="string">&quot;0&quot;</span> &amp;&amp; ch != <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新选择【0-1】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; ch;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span>(ch == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">for</span>(<span class="type">int</span> i = <span class="number">0</span>; i &lt; plist.<span class="built_in">size</span>(); i++)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">if</span>(plist[i].name == p.name &amp;&amp; plist[i].pwd == p.pwd)</span><br><span class="line">&#123;</span><br><span class="line">plist[i].pwd = newPwd;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t修改成功！自动返回登录界面！&quot;</span>&lt;&lt;endl;</span><br><span class="line">cout&lt;&lt;<span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="keyword">this</span>-&gt;<span class="built_in">menu</span>();</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span> <span class="keyword">if</span>(sel == <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">//清空系统所有数据</span></span><br><span class="line"><span class="function"><span class="type">void</span> <span class="title">LineSystem::clearList</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line"><span class="keyword">while</span> (<span class="literal">true</span>)</span><br><span class="line">&#123;</span><br><span class="line">string sel = <span class="string">&quot;0&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;cls&quot;</span>);</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t************************************欢迎来到清空系统数据功能***************************************&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t当前用户：&quot;</span> &lt;&lt; <span class="keyword">this</span>-&gt;admin.name &lt;&lt;<span class="string">&quot;（管理员）&quot;</span>&lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t1 确认清空系统数据&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t2 返回主菜单&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t------------------&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t请慎重选择【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line"><span class="keyword">while</span>(sel != <span class="string">&quot;1&quot;</span> &amp;&amp; sel != <span class="string">&quot;2&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t输入不合法,请重新输入【1-2】：&quot;</span>;</span><br><span class="line">cin &gt;&gt; sel;</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">if</span> (sel == <span class="string">&quot;1&quot;</span>)</span><br><span class="line">&#123;</span><br><span class="line">linelist.<span class="built_in">clear</span>();</span><br><span class="line">plist.<span class="built_in">clear</span>();</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t清空成功！&quot;</span> &lt;&lt; endl;</span><br><span class="line">cout &lt;&lt; <span class="string">&quot;\t&quot;</span>;</span><br><span class="line"><span class="built_in">system</span>(<span class="string">&quot;pause&quot;</span>);</span><br><span class="line"><span class="built_in">writeFile</span>();</span><br><span class="line">&#125;</span><br><span class="line"><span class="keyword">else</span></span><br><span class="line">&#123;</span><br><span class="line"><span class="keyword">break</span>;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line">&#125;</span><br><span class="line"><span class="function"><span class="type">int</span> <span class="title">main</span><span class="params">()</span></span></span><br><span class="line"><span class="function"></span>&#123;</span><br><span class="line">LineSystem ls;</span><br><span class="line">ls.<span class="built_in">setAdmin</span>(<span class="string">&quot;admin&quot;</span>, <span class="string">&quot;123&quot;</span>); <span class="comment">//设置管理员账号：admin  密码：123</span></span><br><span class="line">ls.<span class="built_in">init</span>();</span><br><span class="line">ls.<span class="built_in">menu</span>();</span><br><span class="line"><span class="keyword">return</span> <span class="number">0</span>;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><br/><h1 id="运行方法"><a href="#运行方法" class="headerlink" title="运行方法"></a>运行方法</h1><ol><li>新建一个cpp文件，命名为”main.cpp”。</li><li>将系统完整代码复制粘贴至”main.cpp”中。</li><li>利用Dev C++运行”main.cpp”即可（系统管理员默认账号：admin  密码：123）。</li></ol>]]></content>
      
      
      <categories>
          
          <category> C++课程设计 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> C++ </tag>
            
            <tag> 管理系统 </tag>
            
            <tag> 面向对象 </tag>
            
            <tag> 课程设计 </tag>
            
        </tags>
      
    </entry>
    
    
    
    <entry>
      <title>Hexo博客发布新文章</title>
      <link href="/2023/10/18/hello-world/"/>
      <url>/2023/10/18/hello-world/</url>
      
        <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo new <span class="string">&quot;My New Post&quot;</span></span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo server</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Clean-up-the-folder-named-“public”"><a href="#Clean-up-the-folder-named-“public”" class="headerlink" title="Clean up the folder named “public”"></a>Clean up the folder named “public”</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo clean</span><br></pre></td></tr></table></figure><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo generate</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">$ hexo deploy</span><br></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
      
      
      <categories>
          
          <category> Hexo博客相关 </category>
          
      </categories>
      
      
        <tags>
            
            <tag> Hexo </tag>
            
            <tag> 博客 </tag>
            
        </tags>
      
    </entry>
    
    
  
  
</search>
